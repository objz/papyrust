This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
shaders/
  plasma.frag
  rainbow.frag
src/
  bin/
    cli.rs
  daemon/
    ipc.rs
    main.rs
    media.rs
    paper.rs
    utils.rs
  library/
    loader.rs
    mod.rs
    project.rs
  ui/
    discover.rs
    library.rs
    mod.rs
    panel.rs
    popup.rs
    state.rs
    view.rs
  main.rs
.gitignore
build.rs
Cargo.toml
flamegraph_old.svg
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="shaders/plasma.frag">
#ifdef GL_ES
precision mediump float;
#endif

uniform float time;
uniform vec2 resolution;
varying vec2 texCoords;

void main() {
    vec2 uv = texCoords;
    vec2 p = (uv - 0.5) * vec2(resolution.x/resolution.y, 1.0) * 2.0;

    float v1 = sin(p.x * 3.0 + time);
    float v2 = sin((p.x * cos(time*0.7) + p.y * sin(time*0.3)) * 4.0);
    float v3 = sin(length(p) * 5.0 - time * 1.5);

    float v = (v1 + v2 + v3) / 3.0;

    vec3 col = vec3(
        0.5 + 0.5 * sin(3.0 + v * 3.0),
        0.5 + 0.5 * sin(1.0 + v * 3.0),
        0.5 + 0.5 * sin(5.0 + v * 3.0)
    );

    gl_FragColor = vec4(col, 1.0);
}
</file>

<file path="shaders/rainbow.frag">
#version 100
precision mediump float;

uniform float time;
uniform vec2 resolution;

void main() {
    vec2 uv = gl_FragCoord.xy / resolution;

    float wave = 0.5 + 0.5 * sin(uv.x * 10.0 + time);

    gl_FragColor = vec4(uv.x, uv.y, wave, 1.0);
}
</file>

<file path="src/daemon/media.rs">
use anyhow::{anyhow, Result};
use ffmpeg_next as ffmpeg;
use std::fs::File;
use std::io::Read;
use std::path::Path;

use crate::gl_bindings as gl;

#[derive(Debug, Clone, PartialEq)]
pub enum MediaType {
    Shader(String),
    Image {
        path: String,
        shader: Option<String>,
    },
    Video {
        path: String,
        shader: Option<String>,
    },
}

pub struct ImageLoader;

impl ImageLoader {
    pub fn load_texture(path: &str) -> Result<u32> {
        eprintln!("Loading image: {}", path);

        let img = image::open(path).map_err(|e| anyhow!("Failed to load image {}: {}", path, e))?;

        let rgba = img.to_rgba8();
        let (width, height) = (img.width(), img.height());

        eprintln!("Image loaded: {}x{}", width, height);

        let mut texture = 0;
        unsafe {
            gl::GenTextures(1, &mut texture);
            gl::BindTexture(gl::TEXTURE_2D, texture);

            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_WRAP_S, gl::CLAMP_TO_EDGE as i32);
            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_WRAP_T, gl::CLAMP_TO_EDGE as i32);
            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_MIN_FILTER, gl::LINEAR as i32);
            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_MAG_FILTER, gl::LINEAR as i32);

            gl::TexImage2D(
                gl::TEXTURE_2D,
                0,
                gl::RGBA as i32,
                width as i32,
                height as i32,
                0,
                gl::RGBA,
                gl::UNSIGNED_BYTE,
                rgba.as_ptr() as *const _,
            );

            eprintln!("Texture created successfully: {}", texture);
        }

        Ok(texture)
    }
}

pub struct VideoDecoder {
    decoder: ffmpeg::decoder::Video,
    scaler: Option<ffmpeg::software::scaling::Context>,
    texture: u32,
    _width: u32,
    _height: u32,
    input_ctx: ffmpeg::format::context::Input,
    stream_index: usize,
    video_path: String,
    eof_reached: bool,
}

impl VideoDecoder {
    pub fn new(path: &str) -> Result<Self> {
        eprintln!("Initializing video decoder for: {}", path);

        ffmpeg::init().map_err(|e| anyhow!("Failed to initialize FFmpeg: {}", e))?;

        let input_ctx = ffmpeg::format::input(&Path::new(path))
            .map_err(|e| anyhow!("Failed to open video file {}: {}", path, e))?;

        let stream = input_ctx
            .streams()
            .best(ffmpeg::media::Type::Video)
            .ok_or_else(|| anyhow!("No video stream found in {}", path))?;

        let stream_index = stream.index();

        let context_decoder = ffmpeg::codec::context::Context::from_parameters(stream.parameters())
            .map_err(|e| anyhow!("Failed to create codec context: {}", e))?;

        let decoder = context_decoder
            .decoder()
            .video()
            .map_err(|e| anyhow!("Failed to create video decoder: {}", e))?;

        let width = decoder.width();
        let height = decoder.height();

        eprintln!("Video info: {}x{}", width, height);

        let scaler = if decoder.format() != ffmpeg::format::Pixel::RGB24 {
            Some(
                ffmpeg::software::scaling::Context::get(
                    decoder.format(),
                    width,
                    height,
                    ffmpeg::format::Pixel::RGB24,
                    width,
                    height,
                    ffmpeg::software::scaling::flag::Flags::BILINEAR,
                )
                .map_err(|e| anyhow!("Failed to create scaler: {}", e))?,
            )
        } else {
            None
        };

        let mut texture = 0;
        unsafe {
            gl::GenTextures(1, &mut texture);
            gl::BindTexture(gl::TEXTURE_2D, texture);

            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_WRAP_S, gl::CLAMP_TO_EDGE as i32);
            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_WRAP_T, gl::CLAMP_TO_EDGE as i32);
            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_MIN_FILTER, gl::LINEAR as i32);
            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_MAG_FILTER, gl::LINEAR as i32);

            // empty texture
            gl::TexImage2D(
                gl::TEXTURE_2D,
                0,
                gl::RGB as i32,
                width as i32,
                height as i32,
                0,
                gl::RGB,
                gl::UNSIGNED_BYTE,
                std::ptr::null(),
            );
        }

        Ok(Self {
            decoder,
            scaler,
            texture,
            _width: width,
            _height: height,
            input_ctx,
            stream_index,
            video_path: path.to_string(),
            eof_reached: false,
        })
    }

    pub fn update_frame(&mut self) -> Result<bool> {
        let mut frame_updated = false;

        // restart the video
        if self.eof_reached {
            self.restart_video()?;
            self.eof_reached = false;
        }

        for (stream, packet) in self.input_ctx.packets() {
            if stream.index() == self.stream_index {
                match self.decoder.send_packet(&packet) {
                    Ok(_) => {
                        let mut decoded_frame = ffmpeg::frame::Video::empty();

                        while self.decoder.receive_frame(&mut decoded_frame).is_ok() {
                            let rgb_frame = if decoded_frame.format()
                                != ffmpeg::format::Pixel::RGB24
                            {
                                if let Some(ref mut scaler) = self.scaler {
                                    let mut rgb_frame = ffmpeg::frame::Video::empty();
                                    scaler
                                        .run(&decoded_frame, &mut rgb_frame)
                                        .map_err(|e| anyhow!("Scaling failed: {}", e))?;
                                    rgb_frame
                                } else {
                                    let mut new_scaler = ffmpeg::software::scaling::Context::get(
                                        decoded_frame.format(),
                                        decoded_frame.width(),
                                        decoded_frame.height(),
                                        ffmpeg::format::Pixel::RGB24,
                                        decoded_frame.width(),
                                        decoded_frame.height(),
                                        ffmpeg::software::scaling::flag::Flags::BILINEAR,
                                    )
                                    .map_err(|e| anyhow!("Failed to create scaler: {}", e))?;

                                    let mut rgb_frame = ffmpeg::frame::Video::empty();
                                    new_scaler
                                        .run(&decoded_frame, &mut rgb_frame)
                                        .map_err(|e| anyhow!("Scaling failed: {}", e))?;
                                    self.scaler = Some(new_scaler);
                                    rgb_frame
                                }
                            } else {
                                decoded_frame
                            };

                            unsafe {
                                gl::BindTexture(gl::TEXTURE_2D, self.texture);
                                gl::TexSubImage2D(
                                    gl::TEXTURE_2D,
                                    0,
                                    0,
                                    0,
                                    rgb_frame.width() as i32,
                                    rgb_frame.height() as i32,
                                    gl::RGB,
                                    gl::UNSIGNED_BYTE,
                                    rgb_frame.data(0).as_ptr() as *const _,
                                );
                            }

                            frame_updated = true;
                            return Ok(frame_updated);
                        }
                    }
                    Err(ffmpeg::Error::Eof) => {
                        self.eof_reached = true;
                        break;
                    }
                    Err(_) => {
                        continue;
                    }
                }
            }
        }

        if !frame_updated {
            self.eof_reached = true;
        }

        Ok(frame_updated)
    }

    fn restart_video(&mut self) -> Result<()> {
        if let Err(_) = self.input_ctx.seek(0, 0..i64::MAX) {
            eprintln!("Seeking failed, recreating input context");

            self.input_ctx = ffmpeg::format::input(&Path::new(&self.video_path))
                .map_err(|e| anyhow!("Failed to reopen video file: {}", e))?;

            let stream = self
                .input_ctx
                .streams()
                .best(ffmpeg::media::Type::Video)
                .ok_or_else(|| anyhow!("No video stream found after restart"))?;

            self.stream_index = stream.index();

            let context_decoder =
                ffmpeg::codec::context::Context::from_parameters(stream.parameters())
                    .map_err(|e| anyhow!("Failed to recreate codec context: {}", e))?;

            self.decoder = context_decoder
                .decoder()
                .video()
                .map_err(|e| anyhow!("Failed to recreate video decoder: {}", e))?;
        }

        Ok(())
    }

    pub fn texture(&self) -> u32 {
        self.texture
    }

    pub fn _dimensions(&self) -> (u32, u32) {
        (self._width, self._height)
    }
}

pub fn load_shader(path: &str) -> Result<String> {
    let mut file =
        File::open(path).map_err(|e| anyhow!("Failed to open shader file {}: {}", path, e))?;
    let mut source = String::new();
    file.read_to_string(&mut source)
        .map_err(|e| anyhow!("Failed to read shader file {}: {}", path, e))?;
    Ok(source)
}

pub fn default_shader() -> &'static str {
    r#"
#ifdef GL_ES
precision mediump float;
#endif

uniform sampler2D u_media;
uniform vec2 u_resolution;
uniform float u_time;

varying vec2 texCoords;

void main() {
    // Simple passthrough with optional UV animation
    vec2 uv = texCoords;
    
    // Subtle breathing effect
    float scale = 1.0 + 0.01 * sin(u_time * 2.0);
    uv = (uv - 0.5) * scale + 0.5;
    
    vec4 color = texture2D(u_media, uv);
    gl_FragColor = color;
}
"#
}

pub fn vertex_shader() -> &'static str {
    r#"
#version 100
attribute vec2 datIn;
attribute vec2 texIn;
varying vec2 texCoords;

void main() {
    texCoords = texIn;
    gl_Position = vec4(datIn, 0.0, 1.0);
}
"#
}
</file>

<file path="src/daemon/utils.rs">
use std::thread;
use std::time::Duration;
use std::time::{SystemTime, UNIX_EPOCH};

pub fn get_time_millis() -> u64 {
    SystemTime::now()
        .duration_since(UNIX_EPOCH)
        .unwrap()
        .as_millis() as u64
}

pub fn sleep_millis(millis: u64) {
    if millis > 0 {
        thread::sleep(Duration::from_millis(millis));
    }
}
</file>

<file path="src/ui/discover.rs">
use iced::Element;

use crate::{Message, Papyrust};

pub fn build(_app: &Papyrust) -> Element<Message> {
    iced::widget::text("Discover").into()
}
</file>

<file path="build.rs">
use gl_generator::{Api, Fallbacks, Profile, Registry};
use std::env;
use std::fs::File;
use std::path::Path;

fn main() {
    let dest = env::var("OUT_DIR").unwrap();
    let mut file = File::create(&Path::new(&dest).join("gl_bindings.rs")).unwrap();

    Registry::new(Api::Gles2, (3, 0), Profile::Core, Fallbacks::All, [])
        .write_bindings(gl_generator::GlobalGenerator, &mut file)
        .unwrap();
}
</file>

<file path="src/bin/cli.rs">
use anyhow::Result;
use clap::{Parser, Subcommand};
use serde_json;
use std::io::{BufRead, BufReader, Write};
use std::os::unix::net::UnixStream;

#[derive(Parser)]
#[command(name = "papyrust")]
#[command(about = "A small cli for papyrust-daemon")]
struct Args {
    #[command(subcommand)]
    command: Commands,
}

#[derive(Subcommand)]
enum Commands {
    Image {
        path: String,
        #[arg(long)]
        shader: Option<String>,
        #[arg(long)]
        monitor: Option<String>,
    },
    Video {
        path: String,
        #[arg(long)]
        shader: Option<String>,
        #[arg(long)]
        monitor: Option<String>,
    },
    Shader {
        path: String,
        #[arg(long)]
        monitor: Option<String>,
    },
    Status,
}

fn main() -> Result<()> {
    let args = Args::parse();

    let mut stream = UnixStream::connect("/tmp/papyrust-daemon.sock")?;

    let command = match args.command {
        Commands::Image {
            path,
            shader,
            monitor,
        } => {
            serde_json::json!({
                "SetImage": {
                    "path": path,
                    "shader": shader,
                    "monitor": monitor
                }
            })
        }
        Commands::Video {
            path,
            shader,
            monitor,
        } => {
            serde_json::json!({
                "SetVideo": {
                    "path": path,
                    "shader": shader,
                    "monitor": monitor
                }
            })
        }
        Commands::Shader { path, monitor } => {
            serde_json::json!({
                "SetShader": {
                    "path": path,
                    "monitor": monitor
                }
            })
        }
        Commands::Status => {
            serde_json::json!("GetStatus")
        }
    };

    writeln!(stream, "{}", command)?;
    stream.flush()?;

    let mut reader = BufReader::new(stream);
    let mut response = String::new();
    reader.read_line(&mut response)?;

    println!("{}", response.trim());

    Ok(())
}
</file>

<file path="src/daemon/ipc.rs">
use anyhow::{anyhow, Result};
use serde::{Deserialize, Serialize};
use std::io::{BufRead, BufReader, Write};
use std::os::unix::net::{UnixListener, UnixStream};
use std::sync::mpsc::Sender;
use std::thread;

use crate::media::MediaType;

#[derive(Debug, Serialize, Deserialize)]
pub enum IpcCommand {
    SetImage {
        path: String,
        shader: Option<String>,
        monitor: Option<String>,
    },
    SetVideo {
        path: String,
        shader: Option<String>,
        monitor: Option<String>,
    },
    SetShader {
        path: String,
        monitor: Option<String>,
    },
    GetStatus,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum IpcResponse {
    Success,
    Error { message: String },
    Status { current_media: String },
}

#[derive(Debug, Clone)]
pub struct MediaChange {
    pub media_type: MediaType,
    pub monitor: Option<String>,
}

pub fn start_server(tx: Sender<MediaChange>) -> Result<()> {
    let socket_path = "/tmp/papyrust-daemon.sock";

    let _ = std::fs::remove_file(socket_path);

    let listener =
        UnixListener::bind(socket_path).map_err(|e| anyhow!("Failed to bind IPC socket: {}", e))?;

    println!("IPC server listening on {}", socket_path);

    for stream in listener.incoming() {
        match stream {
            Ok(stream) => {
                let tx_clone = tx.clone();
                thread::spawn(move || {
                    if let Err(e) = handle_client(stream, tx_clone) {
                        eprintln!("Client error: {}", e);
                    }
                });
            }
            Err(e) => {
                eprintln!("Connection failed: {}", e);
            }
        }
    }

    Ok(())
}

fn handle_client(stream: UnixStream, tx: Sender<MediaChange>) -> Result<()> {
    let mut reader = BufReader::new(&stream);
    let mut writer = stream.try_clone()?;
    let mut line = String::new();

    while reader.read_line(&mut line)? > 0 {
        let command: IpcCommand = serde_json::from_str(&line.trim())
            .map_err(|e| anyhow!("Invalid JSON command: {}", e))?;

        let response = match command {
            IpcCommand::SetImage {
                path,
                shader,
                monitor,
            } => {
                let media_change = MediaChange {
                    media_type: MediaType::Image { path, shader },
                    monitor,
                };
                match tx.send(media_change) {
                    Ok(_) => IpcResponse::Success,
                    Err(e) => IpcResponse::Error {
                        message: e.to_string(),
                    },
                }
            }
            IpcCommand::SetVideo {
                path,
                shader,
                monitor,
            } => {
                let media_change = MediaChange {
                    media_type: MediaType::Video { path, shader },
                    monitor,
                };
                match tx.send(media_change) {
                    Ok(_) => IpcResponse::Success,
                    Err(e) => IpcResponse::Error {
                        message: e.to_string(),
                    },
                }
            }
            IpcCommand::SetShader { path, monitor } => {
                let media_change = MediaChange {
                    media_type: MediaType::Shader(path),
                    monitor,
                };
                match tx.send(media_change) {
                    Ok(_) => IpcResponse::Success,
                    Err(e) => IpcResponse::Error {
                        message: e.to_string(),
                    },
                }
            }
            IpcCommand::GetStatus => IpcResponse::Status {
                current_media: "Unknown".to_string(),
            },
        };

        let response_json = serde_json::to_string(&response)?;
        writeln!(writer, "{}", response_json)?;
        writer.flush()?;

        line.clear();
    }

    Ok(())
}
</file>

<file path="src/daemon/paper.rs">
use anyhow::{anyhow, Result};
use khronos_egl as egl;
use log::{debug, info};
use std::collections::HashMap;
use std::ffi::{CStr, CString};
use std::os::unix::io::{AsRawFd, RawFd};
use std::sync::mpsc::Receiver;
use wayland_client::protocol::{wl_compositor, wl_output, wl_region, wl_registry, wl_surface};
use wayland_client::{Connection, Dispatch, Proxy, QueueHandle};
use wayland_protocols::xdg::xdg_output::zv1::client::{zxdg_output_manager_v1, zxdg_output_v1};
use wayland_protocols_wlr::layer_shell::v1::client::{zwlr_layer_shell_v1, zwlr_layer_surface_v1};

use crate::gl_bindings as gl;
use crate::ipc::MediaChange;
use crate::media::{
    default_shader, load_shader, vertex_shader, ImageLoader, MediaType, VideoDecoder,
};
use crate::utils;

const N_SAMPLES: usize = 44100 / 25;

#[derive(Debug, Clone)]
struct OutputInfo {
    _id: u32,
    output: wl_output::WlOutput,
    width: i32,
    height: i32,
    name: Option<String>,
}

#[derive(Debug)]
struct StereoSample {
    left: Vec<i16>,
    right: Vec<i16>,
}

impl StereoSample {
    fn new() -> Self {
        Self {
            left: vec![0; N_SAMPLES],
            right: vec![0; N_SAMPLES],
        }
    }
}

struct AppState {
    outputs: HashMap<u32, OutputInfo>,
    compositor: Option<wl_compositor::WlCompositor>,
    layer_shell: Option<zwlr_layer_shell_v1::ZwlrLayerShellV1>,
    output_manager: Option<zxdg_output_manager_v1::ZxdgOutputManagerV1>,
    configured_count: usize,
    total_surfaces: usize,
}

impl AppState {
    fn new() -> Self {
        Self {
            outputs: HashMap::new(),
            compositor: None,
            layer_shell: None,
            output_manager: None,
            configured_count: 0,
            total_surfaces: 0,
        }
    }
}

struct FifoReader {
    fd: RawFd,
}

impl FifoReader {
    fn new(fifo_path: &str) -> Result<Self> {
        use std::os::unix::fs::OpenOptionsExt;
        let file = std::fs::OpenOptions::new()
            .read(true)
            .custom_flags(libc::O_NONBLOCK)
            .open(fifo_path)?;

        Ok(Self {
            fd: file.as_raw_fd(),
        })
    }

    fn read_sample(&mut self) -> Result<Option<StereoSample>> {
        let mut buffer = vec![0u8; N_SAMPLES * 4];

        let bytes_read = unsafe {
            libc::read(
                self.fd,
                buffer.as_mut_ptr() as *mut libc::c_void,
                buffer.len(),
            )
        };

        if bytes_read < 0 {
            let errno = unsafe { *libc::__errno_location() };
            if errno == libc::EAGAIN || errno == libc::EWOULDBLOCK {
                return Ok(None);
            }
            return Err(anyhow!("Failed to read from FIFO: {}", errno));
        }

        if bytes_read == 0 {
            return Ok(None);
        }

        let samples_read = bytes_read as usize / 4;
        let mut stereo = StereoSample::new();

        for i in 0..samples_read.min(N_SAMPLES / 2) {
            let base = i * 4;
            if base + 3 < buffer.len() {
                stereo.left[i] = i16::from_le_bytes([buffer[base], buffer[base + 1]]);
                stereo.right[i] = i16::from_le_bytes([buffer[base + 2], buffer[base + 3]]);
            }
        }

        Ok(Some(stereo))
    }
}

struct MediaRenderer {
    shader_program: u32,
    media_texture: Option<u32>,
    video_decoder: Option<VideoDecoder>,
    _vbo: u32,
    _ebo: u32,
    start_time: u64,
    media_type: MediaType,
}

impl MediaRenderer {
    fn new(media_type: MediaType) -> Result<Self> {
        eprintln!("Creating MediaRenderer with type: {:?}", media_type);

        let start_time = utils::get_time_millis();

        unsafe {
            gl::load_with(|s| {
                let c_str = CString::new(s).unwrap();
                let proc_addr = match CStr::from_bytes_with_nul(b"eglGetProcAddress\0") {
                    Ok(name) => libc::dlsym(libc::RTLD_DEFAULT, name.as_ptr()),
                    Err(_) => std::ptr::null_mut(),
                };
                if proc_addr.is_null() {
                    std::ptr::null()
                } else {
                    let get_proc_addr: extern "C" fn(*const i8) -> *const std::ffi::c_void =
                        std::mem::transmute(proc_addr);
                    get_proc_addr(c_str.as_ptr())
                }
            });

            gl::ClearColor(0.0, 0.0, 0.0, 1.0);
        }

        let (shader_program, media_texture, video_decoder) =
            if media_type == MediaType::Shader("default".to_string()) {
                let program = Self::default_shader()?;
                (program, None, None)
            } else {
                match &media_type {
                    MediaType::Shader(shader_path) => {
                        let program = Self::create_pure_shader(shader_path)?;
                        (program, None, None)
                    }
                    MediaType::Image { path, shader } => {
                        let texture = ImageLoader::load_texture(path)?;
                        let program = if let Some(shader_path) = shader {
                            Self::create_media_shader(shader_path)?
                        } else {
                            Self::create_default_shader()?
                        };
                        (program, Some(texture), None)
                    }
                    MediaType::Video { path, shader } => {
                        let decoder = VideoDecoder::new(path)?;
                        let texture = decoder.texture();
                        let program = if let Some(shader_path) = shader {
                            Self::create_media_shader(shader_path)?
                        } else {
                            Self::create_default_shader()?
                        };
                        (program, Some(texture), Some(decoder))
                    }
                }
            };

        let (vbo, ebo) = Self::setup_geometry()?;

        Ok(Self {
            shader_program,
            media_texture,
            video_decoder,
            _vbo: vbo,
            _ebo: ebo,
            start_time,
            media_type,
        })
    }

    fn default_shader() -> Result<u32> {
        let vert_source = r#"
            #version 100
            attribute highp vec2 datIn;
            attribute highp vec2 texIn;
            varying vec2 texCoords;
            void main() {
                texCoords = texIn;
                gl_Position = vec4(datIn, 0.0, 1.0);
            }
        "#;

        let frag_source = r#"
            #ifdef GL_ES
            precision mediump float;
            #endif
            void main() {
                gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
            }
        "#;

        Self::compile(vert_source, frag_source)
    }

    fn update_media(&mut self, new_media_type: MediaType) -> Result<()> {
        eprintln!("Updating media to: {:?}", new_media_type);

        if let Some(texture) = self.media_texture {
            unsafe {
                gl::DeleteTextures(1, &texture);
            }
        }
        self.video_decoder = None;

        let (shader_program, media_texture, video_decoder) = match &new_media_type {
            MediaType::Shader(shader_path) => {
                let program = Self::create_pure_shader(shader_path)?;
                (program, None, None)
            }
            MediaType::Image { path, shader } => {
                let texture = ImageLoader::load_texture(path)?;
                let program = if let Some(shader_path) = shader {
                    Self::create_media_shader(shader_path)?
                } else {
                    Self::create_default_shader()?
                };
                (program, Some(texture), None)
            }
            MediaType::Video { path, shader } => {
                let decoder = VideoDecoder::new(path)?;
                let texture = decoder.texture();
                let program = if let Some(shader_path) = shader {
                    Self::create_media_shader(shader_path)?
                } else {
                    Self::create_default_shader()?
                };
                (program, Some(texture), Some(decoder))
            }
        };

        unsafe {
            gl::DeleteProgram(self.shader_program);
        }

        self.shader_program = shader_program;
        self.media_texture = media_texture;
        self.video_decoder = video_decoder;
        self.media_type = new_media_type;

        Ok(())
    }

    fn create_pure_shader(shader_path: &str) -> Result<u32> {
        let raw = load_shader(shader_path)?;

        let mut lines = raw.lines();
        let (version_directive, rest_of_shader) = if let Some(first) = lines.next() {
            let trimmed = first.trim_start();
            if trimmed.starts_with("#version") {
                let body = lines.collect::<Vec<_>>().join("\n");
                (Some(first), body)
            } else {
                (None, raw.clone())
            }
        } else {
            (None, String::new())
        };

        let mut frag_source = String::new();
        if let Some(v) = version_directive {
            frag_source.push_str(v);
            frag_source.push('\n');
        }
        frag_source.push_str(
            r#"
                #ifdef GL_ES
                  #ifdef GL_FRAGMENT_PRECISION_HIGH
                    precision highp float;
                  #else
                    precision mediump float;
                  #endif
                #endif
            "#,
        );
        frag_source.push_str(&rest_of_shader);

        let vert_source = r#"
            #version 100
            attribute highp vec2 datIn;
            attribute highp vec2 texIn;
            varying vec2 texCoords;
            void main() {
                texCoords = texIn;
                gl_Position = vec4(datIn, 0.0, 1.0);
            }
        "#;

        Self::compile(vert_source, &frag_source)
    }

    fn create_media_shader(shader_path: &str) -> Result<u32> {
        let raw = load_shader(shader_path)?;

        let mut lines = raw.lines();
        let (version_directive, rest_of_shader) = if let Some(first) = lines.next() {
            let trimmed = first.trim_start();
            if trimmed.starts_with("#version") {
                let body = lines.collect::<Vec<_>>().join("\n");
                (Some(first), body)
            } else {
                (None, raw.clone())
            }
        } else {
            (None, String::new())
        };

        let mut frag_source = String::new();
        if let Some(v) = version_directive {
            frag_source.push_str(v);
            frag_source.push('\n');
        }
        frag_source.push_str(
            r#"
                #ifdef GL_ES
                  #ifdef GL_FRAGMENT_PRECISION_HIGH
                    precision highp float;
                  #else
                    precision mediump float;
                  #endif
                #endif
            "#,
        );
        frag_source.push_str(&rest_of_shader);

        let vert_source = vertex_shader();
        Self::compile(vert_source, &frag_source)
    }

    fn create_default_shader() -> Result<u32> {
        let vert_source = vertex_shader();
        let frag_source = default_shader();
        Self::compile(vert_source, frag_source)
    }

    fn compile(vert_source: &str, frag_source: &str) -> Result<u32> {
        unsafe {
            let program = gl::CreateProgram();

            let vert_shader = gl::CreateShader(gl::VERTEX_SHADER);
            let vert_c_str = CString::new(vert_source)?;
            gl::ShaderSource(vert_shader, 1, &vert_c_str.as_ptr(), std::ptr::null());
            gl::CompileShader(vert_shader);
            Self::check_compile(vert_shader, "vertex")?;

            let frag_shader = gl::CreateShader(gl::FRAGMENT_SHADER);
            let frag_c_str = CString::new(frag_source)?;
            gl::ShaderSource(frag_shader, 1, &frag_c_str.as_ptr(), std::ptr::null());
            gl::CompileShader(frag_shader);
            Self::check_compile(frag_shader, "fragment")?;

            gl::AttachShader(program, vert_shader);
            gl::AttachShader(program, frag_shader);
            gl::LinkProgram(program);
            Self::check_linked(program)?;

            gl::DeleteShader(vert_shader);
            gl::DeleteShader(frag_shader);

            Ok(program)
        }
    }

    fn check_compile(shader: u32, shader_type: &str) -> Result<()> {
        unsafe {
            let mut status = 0;
            gl::GetShaderiv(shader, gl::COMPILE_STATUS, &mut status);
            if status == gl::FALSE as i32 {
                let mut log_length = 0;
                gl::GetShaderiv(shader, gl::INFO_LOG_LENGTH, &mut log_length);
                let mut log = vec![0u8; log_length as usize];
                gl::GetShaderInfoLog(
                    shader,
                    log_length,
                    std::ptr::null_mut(),
                    log.as_mut_ptr() as *mut i8,
                );
                let log_str = CStr::from_ptr(log.as_ptr() as *const i8).to_string_lossy();
                return Err(anyhow!(
                    "{} shader compilation failed: {}",
                    shader_type,
                    log_str
                ));
            }
        }
        Ok(())
    }

    fn check_linked(program: u32) -> Result<()> {
        unsafe {
            let mut status = 0;
            gl::GetProgramiv(program, gl::LINK_STATUS, &mut status);
            if status == gl::FALSE as i32 {
                let mut log_length = 0;
                gl::GetProgramiv(program, gl::INFO_LOG_LENGTH, &mut log_length);
                let mut log = vec![0u8; log_length as usize];
                gl::GetProgramInfoLog(
                    program,
                    log_length,
                    std::ptr::null_mut(),
                    log.as_mut_ptr() as *mut i8,
                );
                let log_str = CStr::from_ptr(log.as_ptr() as *const i8).to_string_lossy();
                return Err(anyhow!("Program linking failed: {}", log_str));
            }
        }
        Ok(())
    }

    fn setup_geometry() -> Result<(u32, u32)> {
        let vertices: [f32; 16] = [
            -1.0, 1.0, 0.0, 1.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0,
        ];

        let indices: [u32; 6] = [0, 1, 2, 2, 3, 0];

        unsafe {
            let mut vbo = 0;
            gl::GenBuffers(1, &mut vbo);
            gl::BindBuffer(gl::ARRAY_BUFFER, vbo);
            gl::BufferData(
                gl::ARRAY_BUFFER,
                (vertices.len() * std::mem::size_of::<f32>()) as isize,
                vertices.as_ptr() as *const _,
                gl::STATIC_DRAW,
            );

            let mut ebo = 0;
            gl::GenBuffers(1, &mut ebo);
            gl::BindBuffer(gl::ELEMENT_ARRAY_BUFFER, ebo);
            gl::BufferData(
                gl::ELEMENT_ARRAY_BUFFER,
                (indices.len() * std::mem::size_of::<u32>()) as isize,
                indices.as_ptr() as *const _,
                gl::STATIC_DRAW,
            );

            gl::VertexAttribPointer(
                0,
                2,
                gl::FLOAT,
                gl::FALSE,
                4 * std::mem::size_of::<f32>() as i32,
                std::ptr::null(),
            );
            gl::EnableVertexAttribArray(0);

            gl::VertexAttribPointer(
                1,
                2,
                gl::FLOAT,
                gl::FALSE,
                4 * std::mem::size_of::<f32>() as i32,
                (2 * std::mem::size_of::<f32>()) as *const _,
            );
            gl::EnableVertexAttribArray(1);

            Ok((vbo, ebo))
        }
    }

    fn draw(
        &mut self,
        fifo_reader: &mut Option<FifoReader>,
        output_width: i32,
        output_height: i32,
    ) -> Result<()> {
        unsafe {
            gl::UseProgram(self.shader_program);
            gl::Clear(gl::COLOR_BUFFER_BIT);
            gl::Viewport(0, 0, output_width, output_height);

            if let Some(ref mut decoder) = self.video_decoder {
                decoder.update_frame()?;
            }

            let time_loc =
                gl::GetUniformLocation(self.shader_program, b"time\0".as_ptr() as *const i8);
            if time_loc != -1 {
                let time = (utils::get_time_millis() - self.start_time) as f32 / 1000.0;
                gl::Uniform1f(time_loc, time);
            }

            let resolution_loc =
                gl::GetUniformLocation(self.shader_program, b"resolution\0".as_ptr() as *const i8);
            if resolution_loc != -1 {
                gl::Uniform2f(resolution_loc, output_width as f32, output_height as f32);
            }

            if let Some(texture) = self.media_texture {
                gl::ActiveTexture(gl::TEXTURE0);
                gl::BindTexture(gl::TEXTURE_2D, texture);

                let media_loc =
                    gl::GetUniformLocation(self.shader_program, b"u_media\0".as_ptr() as *const i8);
                if media_loc != -1 {
                    gl::Uniform1i(media_loc, 0);
                }
            }

            if let Some(reader) = fifo_reader {
                let fifo_loc =
                    gl::GetUniformLocation(self.shader_program, b"fifo\0".as_ptr() as *const i8);
                if fifo_loc != -1 {
                    if let Ok(Some(sample)) = reader.read_sample() {
                        let left_val = if !sample.left.is_empty() {
                            sample.left[0] as f32
                        } else {
                            0.0
                        };
                        let right_val = if !sample.right.is_empty() {
                            sample.right[0] as f32
                        } else {
                            0.0
                        };
                        gl::Uniform2f(fifo_loc, right_val, left_val);
                    }
                }
            }

            gl::DrawElements(gl::TRIANGLES, 6, gl::UNSIGNED_INT, std::ptr::null());
        }
        Ok(())
    }
}

struct MonitorState {
    egl_display: egl::Display,
    egl_surface: egl::Surface,
    egl_context: egl::Context,
    renderer: MediaRenderer,
    output_info: OutputInfo,
    _surface: wl_surface::WlSurface,
    _layer_surface: zwlr_layer_surface_v1::ZwlrLayerSurfaceV1,
    _egl_surface_wrapper: wayland_egl::WlEglSurface,
}

impl Dispatch<wl_registry::WlRegistry, ()> for AppState {
    fn event(
        state: &mut Self,
        registry: &wl_registry::WlRegistry,
        event: wl_registry::Event,
        _: &(),
        _: &Connection,
        qh: &QueueHandle<AppState>,
    ) {
        match event {
            wl_registry::Event::Global {
                name,
                interface,
                version,
            } => {
                debug!("Global: {} {} {}", name, interface, version);
                match interface.as_str() {
                    "wl_output" => {
                        let output =
                            registry.bind::<wl_output::WlOutput, _, _>(name, version, qh, name);
                        state.outputs.insert(
                            name,
                            OutputInfo {
                                _id: name,
                                output,
                                width: 0,
                                height: 0,
                                name: None,
                            },
                        );
                    }
                    "wl_compositor" => {
                        state.compositor =
                            Some(registry.bind::<wl_compositor::WlCompositor, _, _>(
                                name,
                                version,
                                qh,
                                (),
                            ));
                    }
                    "zwlr_layer_shell_v1" => {
                        state.layer_shell = Some(
                            registry.bind::<zwlr_layer_shell_v1::ZwlrLayerShellV1, _, _>(
                                name,
                                version,
                                qh,
                                (),
                            ),
                        );
                    }
                    "zxdg_output_manager_v1" => {
                        state.output_manager = Some(
                            registry.bind::<zxdg_output_manager_v1::ZxdgOutputManagerV1, _, _>(
                                name,
                                version,
                                qh,
                                (),
                            ),
                        );
                    }
                    _ => {}
                }
            }
            wl_registry::Event::GlobalRemove { name } => {
                state.outputs.remove(&name);
            }
            _ => {}
        }
    }
}

impl Dispatch<wl_output::WlOutput, u32> for AppState {
    fn event(
        state: &mut Self,
        _: &wl_output::WlOutput,
        event: wl_output::Event,
        output_id: &u32,
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
        match event {
            wl_output::Event::Mode {
                flags,
                width,
                height,
                refresh: _,
            } => {
                if let Ok(mode_flags) = flags.into_result() {
                    if mode_flags.contains(wl_output::Mode::Current) {
                        if let Some(output_info) = state.outputs.get_mut(output_id) {
                            output_info.width = width;
                            output_info.height = height;
                        }
                    }
                }
            }
            _ => {}
        }
    }
}

impl Dispatch<zxdg_output_v1::ZxdgOutputV1, u32> for AppState {
    fn event(
        state: &mut Self,
        _: &zxdg_output_v1::ZxdgOutputV1,
        event: zxdg_output_v1::Event,
        output_id: &u32,
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
        match event {
            zxdg_output_v1::Event::Name { name } => {
                if let Some(output_info) = state.outputs.get_mut(output_id) {
                    output_info.name = Some(name);
                }
            }
            _ => {}
        }
    }
}

impl Dispatch<zwlr_layer_surface_v1::ZwlrLayerSurfaceV1, ()> for AppState {
    fn event(
        state: &mut Self,
        surface: &zwlr_layer_surface_v1::ZwlrLayerSurfaceV1,
        event: zwlr_layer_surface_v1::Event,
        _: &(),
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
        match event {
            zwlr_layer_surface_v1::Event::Configure {
                serial,
                width: _,
                height: _,
            } => {
                surface.ack_configure(serial);
                state.configured_count += 1;
            }
            _ => {}
        }
    }
}

impl Dispatch<wl_compositor::WlCompositor, ()> for AppState {
    fn event(
        _: &mut Self,
        _: &wl_compositor::WlCompositor,
        _: wl_compositor::Event,
        _: &(),
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
    }
}

impl Dispatch<zwlr_layer_shell_v1::ZwlrLayerShellV1, ()> for AppState {
    fn event(
        _: &mut Self,
        _: &zwlr_layer_shell_v1::ZwlrLayerShellV1,
        _: zwlr_layer_shell_v1::Event,
        _: &(),
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
    }
}

impl Dispatch<zxdg_output_manager_v1::ZxdgOutputManagerV1, ()> for AppState {
    fn event(
        _: &mut Self,
        _: &zxdg_output_manager_v1::ZxdgOutputManagerV1,
        _: zxdg_output_manager_v1::Event,
        _: &(),
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
    }
}

impl Dispatch<wl_surface::WlSurface, ()> for AppState {
    fn event(
        _: &mut Self,
        _: &wl_surface::WlSurface,
        _: wl_surface::Event,
        _: &(),
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
    }
}

impl Dispatch<wl_region::WlRegion, ()> for AppState {
    fn event(
        _: &mut Self,
        _: &wl_region::WlRegion,
        _: wl_region::Event,
        _: &(),
        _: &Connection,
        _: &QueueHandle<AppState>,
    ) {
    }
}

fn create_monitor_state(
    output_info: &OutputInfo,
    compositor: &wl_compositor::WlCompositor,
    layer_shell: &zwlr_layer_shell_v1::ZwlrLayerShellV1,
    layer_name: Option<&str>,
    media_type: MediaType,
    egl_instance: &egl::Instance<egl::Static>,
    conn: &Connection,
    qh: &QueueHandle<AppState>,
) -> Result<MonitorState> {
    let surface = compositor.create_surface(qh, ());

    let input_region = compositor.create_region(qh, ());
    let render_region = compositor.create_region(qh, ());
    render_region.add(0, 0, output_info.width, output_info.height);
    surface.set_opaque_region(Some(&render_region));
    surface.set_input_region(Some(&input_region));

    let layer = match layer_name {
        Some("top") => zwlr_layer_shell_v1::Layer::Top,
        Some("bottom") => zwlr_layer_shell_v1::Layer::Bottom,
        Some("overlay") => zwlr_layer_shell_v1::Layer::Overlay,
        Some("background") | None => zwlr_layer_shell_v1::Layer::Background,
        _ => zwlr_layer_shell_v1::Layer::Background,
    };

    let layer_surface = layer_shell.get_layer_surface(
        &surface,
        Some(&output_info.output),
        layer,
        "papyrust-daemon".to_string(),
        qh,
        (),
    );

    layer_surface.set_exclusive_zone(-1);
    layer_surface.set_size(output_info.width as u32, output_info.height as u32);
    surface.commit();

    let display_ptr = conn.display().id().as_ptr();
    let egl_display = unsafe { egl_instance.get_display(display_ptr as *mut _) }
        .ok_or_else(|| anyhow!("Failed to get EGL display for Wayland connection"))?;

    let _version = egl_instance.initialize(egl_display)?;

    let config_attribs = [
        egl::SURFACE_TYPE,
        egl::WINDOW_BIT,
        egl::RENDERABLE_TYPE,
        egl::OPENGL_ES2_BIT,
        egl::RED_SIZE,
        8,
        egl::GREEN_SIZE,
        8,
        egl::BLUE_SIZE,
        8,
        egl::NONE,
    ];

    let mut configs = Vec::with_capacity(1);
    egl_instance.choose_config(egl_display, &config_attribs, &mut configs)?;
    let config = configs
        .first()
        .ok_or_else(|| anyhow!("No suitable EGL config"))?;

    let context_attribs = [
        egl::CONTEXT_MAJOR_VERSION,
        2,
        egl::CONTEXT_MINOR_VERSION,
        0,
        egl::NONE,
    ];

    let context = egl_instance.create_context(egl_display, *config, None, &context_attribs)?;

    let egl_surface_wrapper =
        wayland_egl::WlEglSurface::new(surface.id(), output_info.width, output_info.height)?;

    let egl_surface = unsafe {
        egl_instance.create_window_surface(
            egl_display,
            *config,
            egl_surface_wrapper.ptr() as *mut _,
            Some(&[egl::NONE]),
        )?
    };

    egl_instance.make_current(
        egl_display,
        Some(egl_surface),
        Some(egl_surface),
        Some(context),
    )?;

    let renderer = MediaRenderer::new(media_type)?;

    Ok(MonitorState {
        egl_display,
        egl_surface,
        egl_context: context,
        renderer,
        output_info: output_info.clone(),
        _surface: surface,
        _layer_surface: layer_surface,
        _egl_surface_wrapper: egl_surface_wrapper,
    })
}

pub fn init(
    media_type: MediaType,
    fps: u16,
    layer_name: Option<&str>,
    _width: u16,
    _height: u16,
    fifo_path: Option<&str>,
    ipc_receiver: Receiver<MediaChange>,
) -> Result<()> {
    let conn = Connection::connect_to_env()?;
    let mut event_queue = conn.new_event_queue();
    let qh = event_queue.handle();

    let mut app_state = AppState::new();
    let _registry = conn.display().get_registry(&qh, ());

    event_queue.roundtrip(&mut app_state)?;

    if let Some(ref output_manager) = app_state.output_manager {
        for (id, output_info) in &app_state.outputs {
            let _xdg_output = output_manager.get_xdg_output(&output_info.output, &qh, *id);
        }
    }

    event_queue.roundtrip(&mut app_state)?;

    let compositor = app_state
        .compositor
        .as_ref()
        .ok_or_else(|| anyhow!("Compositor not available"))?;

    let layer_shell = app_state
        .layer_shell
        .as_ref()
        .ok_or_else(|| anyhow!("Layer shell not available"))?;

    let egl_instance = egl::Instance::new(egl::Static);
    let mut monitor_states = HashMap::new();

    for output_info in app_state.outputs.values() {
        if output_info.name.is_some() {
            match create_monitor_state(
                output_info,
                compositor,
                layer_shell,
                layer_name,
                media_type.clone(),
                &egl_instance,
                &conn,
                &qh,
            ) {
                Ok(monitor_state) => {
                    monitor_states
                        .insert(output_info.name.as_ref().unwrap().clone(), monitor_state);
                    app_state.total_surfaces += 1;
                }
                Err(e) => {
                    eprintln!(
                        "Failed to create monitor state for {}: {}",
                        output_info.name.as_ref().unwrap(),
                        e
                    );
                }
            }
        }
    }

    event_queue.roundtrip(&mut app_state)?;

    while app_state.configured_count < app_state.total_surfaces {
        event_queue.blocking_dispatch(&mut app_state)?;
    }

    event_queue.roundtrip(&mut app_state)?;

    if fps == 0 {
        for monitor_state in monitor_states.values() {
            egl_instance.swap_interval(monitor_state.egl_display, 1)?;
        }
    } else {
        for monitor_state in monitor_states.values() {
            egl_instance.swap_interval(monitor_state.egl_display, 0)?;
        }
    }

    let mut fifo_reader = if let Some(path) = fifo_path {
        Some(FifoReader::new(path)?)
    } else {
        None
    };

    info!(
        "Starting render loop with {} monitors",
        monitor_states.len()
    );

    loop {
        let frame_start = utils::get_time_millis();

        if let Ok(media_change) = ipc_receiver.try_recv() {
            if let Some(target_monitor) = &media_change.monitor {
                if let Some(monitor_state) = monitor_states.get_mut(target_monitor) {
                    egl_instance.make_current(
                        monitor_state.egl_display,
                        Some(monitor_state.egl_surface),
                        Some(monitor_state.egl_surface),
                        Some(monitor_state.egl_context),
                    )?;
                    if let Err(e) = monitor_state.renderer.update_media(media_change.media_type) {
                        eprintln!(
                            "Failed to update media for monitor {}: {}",
                            target_monitor, e
                        );
                    }
                } else {
                    eprintln!("Monitor {} not found", target_monitor);
                }
            } else {
                for monitor_state in monitor_states.values_mut() {
                    egl_instance.make_current(
                        monitor_state.egl_display,
                        Some(monitor_state.egl_surface),
                        Some(monitor_state.egl_surface),
                        Some(monitor_state.egl_context),
                    )?;
                    if let Err(e) = monitor_state
                        .renderer
                        .update_media(media_change.media_type.clone())
                    {
                        eprintln!(
                            "Failed to update media for monitor {}: {}",
                            monitor_state
                                .output_info
                                .name
                                .as_deref()
                                .unwrap_or("unknown"),
                            e
                        );
                    }
                }
            }
        }

        event_queue.dispatch_pending(&mut app_state)?;

        for monitor_state in monitor_states.values_mut() {
            egl_instance.make_current(
                monitor_state.egl_display,
                Some(monitor_state.egl_surface),
                Some(monitor_state.egl_surface),
                Some(monitor_state.egl_context),
            )?;

            monitor_state.renderer.draw(
                &mut fifo_reader,
                monitor_state.output_info.width,
                monitor_state.output_info.height,
            )?;

            egl_instance.swap_buffers(monitor_state.egl_display, monitor_state.egl_surface)?;
        }

        if fps > 0 {
            let frame_time = utils::get_time_millis() - frame_start;
            let target_frame_time = 1000 / fps as u64;
            if frame_time < target_frame_time {
                utils::sleep_millis(target_frame_time - frame_time);
            }
        }
    }
}
</file>

<file path="src/library/mod.rs">
pub mod loader;
pub mod project;
</file>

<file path="src/daemon/main.rs">
use anyhow::Result;
use clap::Parser;
use log::info;
use std::process;
use std::sync::mpsc;
use std::thread;

mod ipc;
mod media;
mod paper;
mod utils;
mod gl_bindings {
    include!(concat!(env!("OUT_DIR"), "/gl_bindings.rs"));
}

#[derive(Parser, Debug)]
#[command(
    name = "papyrust-daemon",
    version = "0.1.0",
    about = "A Wayland wallpaper daemon with OpenGL ES shader support for images, videos, and shaders"
)]
struct Args {
    #[arg(short = 'F', long)]
    fork: bool,

    #[arg(short, long, default_value = "0")]
    fps: u16,

    #[arg(short, long)]
    layer: Option<String>,

    #[arg(short = 'W', long, default_value = "0")]
    width: u16,

    #[arg(short = 'H', long, default_value = "0")]
    height: u16,

    #[arg(short = 'M', long)]
    fifo: Option<String>,
}

fn main() -> Result<()> {
    env_logger::init();

    let args = Args::parse();

    if args.fork {
        unsafe {
            let pid = libc::fork();
            if pid > 0 {
                process::exit(0);
            }
            if pid == 0 {
                libc::close(0);
                libc::close(1);
                libc::close(2);
            }
        }
    }

    let (tx, rx) = mpsc::channel();

    let ipc_tx = tx.clone();
    thread::spawn(move || {
        if let Err(e) = ipc::start_server(ipc_tx) {
            eprintln!("IPC server error: {}", e);
        }
    });

    let init_media = media::MediaType::Shader("default".to_string());

    info!("Starting Papyrust daemon");

    paper::init(
        init_media,
        args.fps,
        args.layer.as_deref(),
        args.width,
        args.height,
        args.fifo.as_deref(),
        rx,
    )?;

    Ok(())
}
</file>

<file path="src/library/project.rs">
use serde::Deserialize;

#[derive(Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "lowercase")]
pub enum ProjectType {
    #[serde(alias = "Web")]
    Web,
    #[serde(alias = "Video")]
    Video,
    #[serde(alias = "Application")]
    Application,
    #[serde(alias = "Scene")]
    Scene,
}

#[derive(Deserialize, Debug, Clone)]
pub struct ProjectMeta {
    pub title: Option<String>,
    pub description: Option<String>,
    pub tags: Option<Vec<String>>,
    #[serde(rename = "type")]
    pub file_type: Option<ProjectType>,
    pub preview: Option<String>,
    pub file: Option<String>,
}

#[derive(Clone, Debug)]
pub struct Project {
    pub meta: ProjectMeta,
    pub path: String,
}
</file>

<file path="src/ui/mod.rs">
pub mod discover;
pub mod library;
pub mod panel;
pub mod popup;
pub mod state;
pub mod view;
</file>

<file path="flamegraph_old.svg">
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1654" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1637.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1637.00"> </text><svg id="frames" x="10" width="1180" total_samples="5612905071"><g><title>[libnvidia-glcore.so.575.64] (1,633,227 samples, 0.03%)</title><rect x="0.0487%" y="1493" width="0.0291%" height="15" fill="rgb(227,0,7)" fg:x="2734164" fg:w="1633227"/><text x="0.2987%" y="1503.50"></text></g><g><title>[libc.so.6] (5,582,967 samples, 0.10%)</title><rect x="0.0000%" y="1573" width="0.0995%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5582967"/><text x="0.2500%" y="1583.50"></text></g><g><title>[libc.so.6] (5,081,463 samples, 0.09%)</title><rect x="0.0089%" y="1557" width="0.0905%" height="15" fill="rgb(221,193,54)" fg:x="501504" fg:w="5081463"/><text x="0.2589%" y="1567.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (5,081,463 samples, 0.09%)</title><rect x="0.0089%" y="1541" width="0.0905%" height="15" fill="rgb(248,212,6)" fg:x="501504" fg:w="5081463"/><text x="0.2589%" y="1551.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (5,081,463 samples, 0.09%)</title><rect x="0.0089%" y="1525" width="0.0905%" height="15" fill="rgb(208,68,35)" fg:x="501504" fg:w="5081463"/><text x="0.2589%" y="1535.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,848,803 samples, 0.05%)</title><rect x="0.0487%" y="1509" width="0.0508%" height="15" fill="rgb(232,128,0)" fg:x="2734164" fg:w="2848803"/><text x="0.2987%" y="1519.50"></text></g><g><title>pthread_cond_timedwait (1,215,576 samples, 0.02%)</title><rect x="0.0778%" y="1493" width="0.0217%" height="15" fill="rgb(207,160,47)" fg:x="4367391" fg:w="1215576"/><text x="0.3278%" y="1503.50"></text></g><g><title>[libc.so.6] (1,215,576 samples, 0.02%)</title><rect x="0.0778%" y="1477" width="0.0217%" height="15" fill="rgb(228,23,34)" fg:x="4367391" fg:w="1215576"/><text x="0.3278%" y="1487.50"></text></g><g><title>[vkps]_Update (6,585,975 samples, 0.12%)</title><rect x="0.0000%" y="1589" width="0.1173%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6585975"/><text x="0.2500%" y="1599.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::adapter_request_device (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1573" width="0.0332%" height="15" fill="rgb(220,122,19)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1583.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::adapter_request_device (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1557" width="0.0332%" height="15" fill="rgb(250,228,42)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1567.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::adapter_request_device (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1541" width="0.0332%" height="15" fill="rgb(240,193,28)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1551.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device_and_queue (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1525" width="0.0332%" height="15" fill="rgb(216,20,37)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1535.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1509" width="0.0332%" height="15" fill="rgb(206,188,39)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1519.50"></text></g><g><title>vkCreateDevice (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1493" width="0.0332%" height="15" fill="rgb(217,207,13)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1503.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1477" width="0.0332%" height="15" fill="rgb(231,73,38)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1487.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1461" width="0.0332%" height="15" fill="rgb(225,20,46)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1445" width="0.0332%" height="15" fill="rgb(210,31,41)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1429" width="0.0332%" height="15" fill="rgb(221,200,47)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,861,010 samples, 0.03%)</title><rect x="0.1173%" y="1413" width="0.0332%" height="15" fill="rgb(226,26,5)" fg:x="6585975" fg:w="1861010"/><text x="0.3673%" y="1423.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_map_async (4,117,333 samples, 0.07%)</title><rect x="0.1505%" y="1573" width="0.0734%" height="15" fill="rgb(249,33,26)" fg:x="8446985" fg:w="4117333"/><text x="0.4005%" y="1583.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,153,583 samples, 0.06%)</title><rect x="0.2238%" y="1573" width="0.0562%" height="15" fill="rgb(235,183,28)" fg:x="12564318" fg:w="3153583"/><text x="0.4738%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::nth (1,024,767 samples, 0.02%)</title><rect x="0.2890%" y="1573" width="0.0183%" height="15" fill="rgb(221,5,38)" fg:x="16219405" fg:w="1024767"/><text x="0.5390%" y="1583.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5,881,561 samples, 0.10%)</title><rect x="0.3072%" y="1573" width="0.1048%" height="15" fill="rgb(247,18,42)" fg:x="17244172" fg:w="5881561"/><text x="0.5572%" y="1583.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,951,314 samples, 0.07%)</title><rect x="0.4120%" y="1573" width="0.0704%" height="15" fill="rgb(241,131,45)" fg:x="23125733" fg:w="3951314"/><text x="0.6620%" y="1583.50"></text></g><g><title>&lt;iced_wgpu::Renderer as iced_core::image::Renderer&gt;::draw_image (2,175,777 samples, 0.04%)</title><rect x="0.4824%" y="1573" width="0.0388%" height="15" fill="rgb(249,31,29)" fg:x="27077047" fg:w="2175777"/><text x="0.7324%" y="1583.50"></text></g><g><title>wgpu::Adapter::request_device (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1493" width="0.0152%" height="15" fill="rgb(225,111,53)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1503.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::adapter_request_device (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1477" width="0.0152%" height="15" fill="rgb(238,160,17)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1487.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::adapter_request_device (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1461" width="0.0152%" height="15" fill="rgb(214,148,48)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1471.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::adapter_request_device (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1445" width="0.0152%" height="15" fill="rgb(232,36,49)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1455.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device_and_queue (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1429" width="0.0152%" height="15" fill="rgb(209,103,24)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1439.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1413" width="0.0152%" height="15" fill="rgb(229,88,8)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1423.50"></text></g><g><title>ash::device::Device::load (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1397" width="0.0152%" height="15" fill="rgb(213,181,19)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1407.50"></text></g><g><title>ash::vk::features::DeviceFnV1_3::load (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1381" width="0.0152%" height="15" fill="rgb(254,191,54)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1391.50"></text></g><g><title>vkGetDeviceProcAddr (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1365" width="0.0152%" height="15" fill="rgb(241,83,37)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1375.50"></text></g><g><title>[libvulkan.so.1.4.313] (852,621 samples, 0.02%)</title><rect x="0.5212%" y="1349" width="0.0152%" height="15" fill="rgb(233,36,39)" fg:x="29252824" fg:w="852621"/><text x="0.7712%" y="1359.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,535,998 samples, 0.05%)</title><rect x="0.5364%" y="1189" width="0.0452%" height="15" fill="rgb(226,3,54)" fg:x="30105445" fg:w="2535998"/><text x="0.7864%" y="1199.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,535,998 samples, 0.05%)</title><rect x="0.5364%" y="1173" width="0.0452%" height="15" fill="rgb(245,192,40)" fg:x="30105445" fg:w="2535998"/><text x="0.7864%" y="1183.50"></text></g><g><title>[libc.so.6] (3,085,639 samples, 0.05%)</title><rect x="0.7067%" y="1109" width="0.0550%" height="15" fill="rgb(238,167,29)" fg:x="39669148" fg:w="3085639"/><text x="0.9567%" y="1119.50"></text></g><g><title>dlopen (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1349" width="0.3295%" height="15" fill="rgb(232,182,51)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1359.50"></text></g><g><title>[libc.so.6] (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1333" width="0.3295%" height="15" fill="rgb(231,60,39)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1343.50"></text></g><g><title>[ld-linux-x86-64.so.2] (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1317" width="0.3295%" height="15" fill="rgb(208,69,12)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1327.50"></text></g><g><title>_dl_catch_exception (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1301" width="0.3295%" height="15" fill="rgb(235,93,37)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1311.50"></text></g><g><title>[libc.so.6] (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1285" width="0.3295%" height="15" fill="rgb(213,116,39)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1295.50"></text></g><g><title>[ld-linux-x86-64.so.2] (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1269" width="0.3295%" height="15" fill="rgb(222,207,29)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1279.50"></text></g><g><title>_dl_catch_exception (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1253" width="0.3295%" height="15" fill="rgb(206,96,30)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1263.50"></text></g><g><title>[ld-linux-x86-64.so.2] (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1237" width="0.3295%" height="15" fill="rgb(218,138,4)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1247.50"></text></g><g><title>_dl_catch_exception (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1221" width="0.3295%" height="15" fill="rgb(250,191,14)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1231.50"></text></g><g><title>[ld-linux-x86-64.so.2] (18,494,757 samples, 0.33%)</title><rect x="0.5364%" y="1205" width="0.3295%" height="15" fill="rgb(239,60,40)" fg:x="30105445" fg:w="18494757"/><text x="0.7864%" y="1215.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (15,958,759 samples, 0.28%)</title><rect x="0.5815%" y="1189" width="0.2843%" height="15" fill="rgb(206,27,48)" fg:x="32641443" fg:w="15958759"/><text x="0.8315%" y="1199.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (15,958,759 samples, 0.28%)</title><rect x="0.5815%" y="1173" width="0.2843%" height="15" fill="rgb(225,35,8)" fg:x="32641443" fg:w="15958759"/><text x="0.8315%" y="1183.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (15,958,759 samples, 0.28%)</title><rect x="0.5815%" y="1157" width="0.2843%" height="15" fill="rgb(250,213,24)" fg:x="32641443" fg:w="15958759"/><text x="0.8315%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (15,958,759 samples, 0.28%)</title><rect x="0.5815%" y="1141" width="0.2843%" height="15" fill="rgb(247,123,22)" fg:x="32641443" fg:w="15958759"/><text x="0.8315%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (15,958,759 samples, 0.28%)</title><rect x="0.5815%" y="1125" width="0.2843%" height="15" fill="rgb(231,138,38)" fg:x="32641443" fg:w="15958759"/><text x="0.8315%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (5,845,415 samples, 0.10%)</title><rect x="0.7617%" y="1109" width="0.1041%" height="15" fill="rgb(231,145,46)" fg:x="42754787" fg:w="5845415"/><text x="1.0117%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (5,845,415 samples, 0.10%)</title><rect x="0.7617%" y="1093" width="0.1041%" height="15" fill="rgb(251,118,11)" fg:x="42754787" fg:w="5845415"/><text x="1.0117%" y="1103.50"></text></g><g><title>pthread_once (3,049,178 samples, 0.05%)</title><rect x="0.8115%" y="1077" width="0.0543%" height="15" fill="rgb(217,147,25)" fg:x="45551024" fg:w="3049178"/><text x="1.0615%" y="1087.50"></text></g><g><title>[libc.so.6] (3,049,178 samples, 0.05%)</title><rect x="0.8115%" y="1061" width="0.0543%" height="15" fill="rgb(247,81,37)" fg:x="45551024" fg:w="3049178"/><text x="1.0615%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,049,178 samples, 0.05%)</title><rect x="0.8115%" y="1045" width="0.0543%" height="15" fill="rgb(209,12,38)" fg:x="45551024" fg:w="3049178"/><text x="1.0615%" y="1055.50"></text></g><g><title>[libc.so.6] (3,049,178 samples, 0.05%)</title><rect x="0.8115%" y="1029" width="0.0543%" height="15" fill="rgb(227,1,9)" fg:x="45551024" fg:w="3049178"/><text x="1.0615%" y="1039.50"></text></g><g><title>_IO_file_fopen (3,049,178 samples, 0.05%)</title><rect x="0.8115%" y="1013" width="0.0543%" height="15" fill="rgb(248,47,43)" fg:x="45551024" fg:w="3049178"/><text x="1.0615%" y="1023.50"></text></g><g><title>_IO_file_open (3,049,178 samples, 0.05%)</title><rect x="0.8115%" y="997" width="0.0543%" height="15" fill="rgb(221,10,30)" fg:x="45551024" fg:w="3049178"/><text x="1.0615%" y="1007.50"></text></g><g><title>open64 (3,049,178 samples, 0.05%)</title><rect x="0.8115%" y="981" width="0.0543%" height="15" fill="rgb(210,229,1)" fg:x="45551024" fg:w="3049178"/><text x="1.0615%" y="991.50"></text></g><g><title>[libc.so.6] (5,728,320 samples, 0.10%)</title><rect x="0.8659%" y="1269" width="0.1021%" height="15" fill="rgb(222,148,37)" fg:x="48600202" fg:w="5728320"/><text x="1.1159%" y="1279.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (22,317,361 samples, 0.40%)</title><rect x="0.8659%" y="1301" width="0.3976%" height="15" fill="rgb(234,67,33)" fg:x="48600202" fg:w="22317361"/><text x="1.1159%" y="1311.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (22,317,361 samples, 0.40%)</title><rect x="0.8659%" y="1285" width="0.3976%" height="15" fill="rgb(247,98,35)" fg:x="48600202" fg:w="22317361"/><text x="1.1159%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (16,589,041 samples, 0.30%)</title><rect x="0.9679%" y="1269" width="0.2956%" height="15" fill="rgb(247,138,52)" fg:x="54328522" fg:w="16589041"/><text x="1.2179%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (16,589,041 samples, 0.30%)</title><rect x="0.9679%" y="1253" width="0.2956%" height="15" fill="rgb(213,79,30)" fg:x="54328522" fg:w="16589041"/><text x="1.2179%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (16,589,041 samples, 0.30%)</title><rect x="0.9679%" y="1237" width="0.2956%" height="15" fill="rgb(246,177,23)" fg:x="54328522" fg:w="16589041"/><text x="1.2179%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (16,589,041 samples, 0.30%)</title><rect x="0.9679%" y="1221" width="0.2956%" height="15" fill="rgb(230,62,27)" fg:x="54328522" fg:w="16589041"/><text x="1.2179%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,036,167 samples, 0.11%)</title><rect x="1.1559%" y="1205" width="0.1075%" height="15" fill="rgb(216,154,8)" fg:x="64881396" fg:w="6036167"/><text x="1.4059%" y="1215.50"></text></g><g><title>__libc_calloc (3,463,329 samples, 0.06%)</title><rect x="1.2018%" y="1189" width="0.0617%" height="15" fill="rgb(244,35,45)" fg:x="67454234" fg:w="3463329"/><text x="1.4518%" y="1199.50"></text></g><g><title>wgpu::Instance::new (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1493" width="0.8336%" height="15" fill="rgb(251,115,12)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1503.50"></text></g><g><title>wgpu_core::global::Global&lt;G&gt;::new (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1477" width="0.8336%" height="15" fill="rgb(240,54,50)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1487.50"></text></g><g><title>wgpu_core::instance::Instance::new (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1461" width="0.8336%" height="15" fill="rgb(233,84,52)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1471.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1445" width="0.8336%" height="15" fill="rgb(207,117,47)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1455.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::desired_extensions (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1429" width="0.8336%" height="15" fill="rgb(249,43,39)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1439.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1413" width="0.8336%" height="15" fill="rgb(209,38,44)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1423.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1397" width="0.8336%" height="15" fill="rgb(236,212,23)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1407.50"></text></g><g><title>[libvulkan.so.1.4.313] (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1381" width="0.8336%" height="15" fill="rgb(242,79,21)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1391.50"></text></g><g><title>[libvulkan.so.1.4.313] (46,788,420 samples, 0.83%)</title><rect x="0.5364%" y="1365" width="0.8336%" height="15" fill="rgb(211,96,35)" fg:x="30105445" fg:w="46788420"/><text x="0.7864%" y="1375.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (28,293,663 samples, 0.50%)</title><rect x="0.8659%" y="1349" width="0.5041%" height="15" fill="rgb(253,215,40)" fg:x="48600202" fg:w="28293663"/><text x="1.1159%" y="1359.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (28,293,663 samples, 0.50%)</title><rect x="0.8659%" y="1333" width="0.5041%" height="15" fill="rgb(211,81,21)" fg:x="48600202" fg:w="28293663"/><text x="1.1159%" y="1343.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (28,293,663 samples, 0.50%)</title><rect x="0.8659%" y="1317" width="0.5041%" height="15" fill="rgb(208,190,38)" fg:x="48600202" fg:w="28293663"/><text x="1.1159%" y="1327.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1301" width="0.1065%" height="15" fill="rgb(235,213,38)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1311.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1285" width="0.1065%" height="15" fill="rgb(237,122,38)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1295.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1269" width="0.1065%" height="15" fill="rgb(244,218,35)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1279.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1253" width="0.1065%" height="15" fill="rgb(240,68,47)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1263.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1237" width="0.1065%" height="15" fill="rgb(210,16,53)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1247.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1221" width="0.1065%" height="15" fill="rgb(235,124,12)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1231.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1205" width="0.1065%" height="15" fill="rgb(224,169,11)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1215.50"></text></g><g><title>[libnvidia-glsi.so.575.64] (5,976,302 samples, 0.11%)</title><rect x="1.2635%" y="1189" width="0.1065%" height="15" fill="rgb(250,166,2)" fg:x="70917563" fg:w="5976302"/><text x="1.5135%" y="1199.50"></text></g><g><title>&lt;iced_winit::program::run::Runner&lt;Message,F,C&gt; as winit::application::ApplicationHandler&lt;iced_runtime::Action&lt;Message&gt;&gt;&gt;::resumed::_{{closure}} (50,985,237 samples, 0.91%)</title><rect x="0.5212%" y="1573" width="0.9084%" height="15" fill="rgb(242,216,29)" fg:x="29252824" fg:w="50985237"/><text x="0.7712%" y="1583.50"></text></g><g><title>&lt;iced_renderer::fallback::Compositor&lt;A,B&gt; as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (50,985,237 samples, 0.91%)</title><rect x="0.5212%" y="1557" width="0.9084%" height="15" fill="rgb(230,116,27)" fg:x="29252824" fg:w="50985237"/><text x="0.7712%" y="1567.50"></text></g><g><title>&lt;iced_wgpu::window::compositor::Compositor as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (50,985,237 samples, 0.91%)</title><rect x="0.5212%" y="1541" width="0.9084%" height="15" fill="rgb(228,99,48)" fg:x="29252824" fg:w="50985237"/><text x="0.7712%" y="1551.50"></text></g><g><title>iced_wgpu::window::compositor::new::_{{closure}} (50,985,237 samples, 0.91%)</title><rect x="0.5212%" y="1525" width="0.9084%" height="15" fill="rgb(253,11,6)" fg:x="29252824" fg:w="50985237"/><text x="0.7712%" y="1535.50"></text></g><g><title>iced_wgpu::window::compositor::Compositor::request::_{{closure}} (50,985,237 samples, 0.91%)</title><rect x="0.5212%" y="1509" width="0.9084%" height="15" fill="rgb(247,143,39)" fg:x="29252824" fg:w="50985237"/><text x="0.7712%" y="1519.50"></text></g><g><title>wgpu::Instance::request_adapter (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1493" width="0.0596%" height="15" fill="rgb(236,97,10)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1503.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1477" width="0.0596%" height="15" fill="rgb(233,208,19)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1487.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1461" width="0.0596%" height="15" fill="rgb(216,164,2)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1471.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter::gather (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1445" width="0.0596%" height="15" fill="rgb(220,129,5)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1455.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::enumerate_adapters (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1429" width="0.0596%" height="15" fill="rgb(242,17,10)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1439.50"></text></g><g><title>glow::native::Context::from_loader_function_cstr (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1413" width="0.0596%" height="15" fill="rgb(242,107,0)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1423.50"></text></g><g><title>glow::gl46::struct_commands::GlFns::load_all_with_dyn (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1397" width="0.0596%" height="15" fill="rgb(251,28,31)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1407.50"></text></g><g><title>glow::gl46::load_dyn_name_atomic_ptr (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1381" width="0.0596%" height="15" fill="rgb(233,223,10)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1391.50"></text></g><g><title>glow::native::Context::from_loader_function_cstr::{{closure}} (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1365" width="0.0596%" height="15" fill="rgb(215,21,27)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1375.50"></text></g><g><title>core::ffi::c_str::CStr::to_str (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1349" width="0.0596%" height="15" fill="rgb(232,23,21)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1359.50"></text></g><g><title>core::str::converts::from_utf8 (3,344,196 samples, 0.06%)</title><rect x="1.3699%" y="1333" width="0.0596%" height="15" fill="rgb(244,5,23)" fg:x="76893865" fg:w="3344196"/><text x="1.6199%" y="1343.50"></text></g><g><title>&lt;wayland_backend::sys::client_impl::InnerReadEventsGuard as core::ops::drop::Drop&gt;::drop (4,444,934 samples, 0.08%)</title><rect x="1.4295%" y="1573" width="0.0792%" height="15" fill="rgb(226,81,46)" fg:x="80238061" fg:w="4444934"/><text x="1.6795%" y="1583.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (3,381,132 samples, 0.06%)</title><rect x="1.5087%" y="1573" width="0.0602%" height="15" fill="rgb(247,70,30)" fg:x="84682995" fg:w="3381132"/><text x="1.7587%" y="1583.50"></text></g><g><title>&lt;winit::platform_impl::linux::wayland::seat::pointer::relative_pointer::RelativePointerState as wayland_client::event_queue::Dispatch&lt;wayland_protocols::wp::relative_pointer::zv1::generated::client::zwp_relative_pointer_v1::ZwpRelativePointerV1,smithay_client_toolkit::globals::GlobalData,winit::platform_impl::linux::wayland::state::WinitState&gt;&gt;::event (2,352,635 samples, 0.04%)</title><rect x="1.5690%" y="1573" width="0.0419%" height="15" fill="rgb(212,68,19)" fg:x="88064127" fg:w="2352635"/><text x="1.8190%" y="1583.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (911,087 samples, 0.02%)</title><rect x="1.8657%" y="1477" width="0.0162%" height="15" fill="rgb(240,187,13)" fg:x="104721146" fg:w="911087"/><text x="2.1157%" y="1487.50"></text></g><g><title>clock_gettime (911,087 samples, 0.02%)</title><rect x="1.8657%" y="1461" width="0.0162%" height="15" fill="rgb(223,113,26)" fg:x="104721146" fg:w="911087"/><text x="2.1157%" y="1471.50"></text></g><g><title>__vdso_clock_gettime (911,087 samples, 0.02%)</title><rect x="1.8657%" y="1445" width="0.0162%" height="15" fill="rgb(206,192,2)" fg:x="104721146" fg:w="911087"/><text x="2.1157%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (15,293,889 samples, 0.27%)</title><rect x="1.6914%" y="1541" width="0.2725%" height="15" fill="rgb(241,108,4)" fg:x="94937933" fg:w="15293889"/><text x="1.9414%" y="1551.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (15,293,889 samples, 0.27%)</title><rect x="1.6914%" y="1525" width="0.2725%" height="15" fill="rgb(247,173,49)" fg:x="94937933" fg:w="15293889"/><text x="1.9414%" y="1535.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (15,293,889 samples, 0.27%)</title><rect x="1.6914%" y="1509" width="0.2725%" height="15" fill="rgb(224,114,35)" fg:x="94937933" fg:w="15293889"/><text x="1.9414%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,407,957 samples, 0.11%)</title><rect x="1.8497%" y="1493" width="0.1142%" height="15" fill="rgb(245,159,27)" fg:x="103823865" fg:w="6407957"/><text x="2.0997%" y="1503.50"></text></g><g><title>pthread_cond_timedwait (4,599,589 samples, 0.08%)</title><rect x="1.8820%" y="1477" width="0.0819%" height="15" fill="rgb(245,172,44)" fg:x="105632233" fg:w="4599589"/><text x="2.1320%" y="1487.50"></text></g><g><title>[libc.so.6] (2,215,880 samples, 0.04%)</title><rect x="1.9244%" y="1461" width="0.0395%" height="15" fill="rgb(236,23,11)" fg:x="108015942" fg:w="2215880"/><text x="2.1744%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (751,959 samples, 0.01%)</title><rect x="2.0934%" y="1445" width="0.0134%" height="15" fill="rgb(205,117,38)" fg:x="117499116" fg:w="751959"/><text x="2.3434%" y="1455.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (751,959 samples, 0.01%)</title><rect x="2.0934%" y="1429" width="0.0134%" height="15" fill="rgb(237,72,25)" fg:x="117499116" fg:w="751959"/><text x="2.3434%" y="1439.50"></text></g><g><title>[libc.so.6] (751,959 samples, 0.01%)</title><rect x="2.0934%" y="1413" width="0.0134%" height="15" fill="rgb(244,70,9)" fg:x="117499116" fg:w="751959"/><text x="2.3434%" y="1423.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (1,695,948 samples, 0.03%)</title><rect x="2.1333%" y="1397" width="0.0302%" height="15" fill="rgb(217,125,39)" fg:x="119740935" fg:w="1695948"/><text x="2.3833%" y="1407.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,587,267 samples, 0.08%)</title><rect x="2.1635%" y="1381" width="0.0817%" height="15" fill="rgb(235,36,10)" fg:x="121436883" fg:w="4587267"/><text x="2.4135%" y="1391.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (8,461,261 samples, 0.15%)</title><rect x="2.1635%" y="1397" width="0.1507%" height="15" fill="rgb(251,123,47)" fg:x="121436883" fg:w="8461261"/><text x="2.4135%" y="1407.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,873,994 samples, 0.07%)</title><rect x="2.2453%" y="1381" width="0.0690%" height="15" fill="rgb(221,13,13)" fg:x="126024150" fg:w="3873994"/><text x="2.4953%" y="1391.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,873,994 samples, 0.07%)</title><rect x="2.2453%" y="1365" width="0.0690%" height="15" fill="rgb(238,131,9)" fg:x="126024150" fg:w="3873994"/><text x="2.4953%" y="1375.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,085,379 samples, 0.02%)</title><rect x="2.3831%" y="1365" width="0.0193%" height="15" fill="rgb(211,50,8)" fg:x="133762386" fg:w="1085379"/><text x="2.6331%" y="1375.50"></text></g><g><title>malloc (1,085,379 samples, 0.02%)</title><rect x="2.3831%" y="1349" width="0.0193%" height="15" fill="rgb(245,182,24)" fg:x="133762386" fg:w="1085379"/><text x="2.6331%" y="1359.50"></text></g><g><title>[libc.so.6] (1,085,379 samples, 0.02%)</title><rect x="2.3831%" y="1333" width="0.0193%" height="15" fill="rgb(242,14,37)" fg:x="133762386" fg:w="1085379"/><text x="2.6331%" y="1343.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (14,315,907 samples, 0.26%)</title><rect x="2.4025%" y="1365" width="0.2551%" height="15" fill="rgb(246,228,12)" fg:x="134847765" fg:w="14315907"/><text x="2.6525%" y="1375.50"></text></g><g><title>__libc_calloc (1,736,488 samples, 0.03%)</title><rect x="2.6664%" y="1365" width="0.0309%" height="15" fill="rgb(213,55,15)" fg:x="149665176" fg:w="1736488"/><text x="2.9164%" y="1375.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (18,782,386 samples, 0.33%)</title><rect x="2.3831%" y="1381" width="0.3346%" height="15" fill="rgb(209,9,3)" fg:x="133762386" fg:w="18782386"/><text x="2.6331%" y="1391.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,143,108 samples, 0.02%)</title><rect x="2.6974%" y="1365" width="0.0204%" height="15" fill="rgb(230,59,30)" fg:x="151401664" fg:w="1143108"/><text x="2.9474%" y="1375.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (641,604 samples, 0.01%)</title><rect x="2.7063%" y="1349" width="0.0114%" height="15" fill="rgb(209,121,21)" fg:x="151903168" fg:w="641604"/><text x="2.9563%" y="1359.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (1,659,719 samples, 0.03%)</title><rect x="2.7516%" y="1365" width="0.0296%" height="15" fill="rgb(220,109,13)" fg:x="154446026" fg:w="1659719"/><text x="3.0016%" y="1375.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,882,510 samples, 0.05%)</title><rect x="2.8028%" y="1349" width="0.0514%" height="15" fill="rgb(232,18,1)" fg:x="157319996" fg:w="2882510"/><text x="3.0528%" y="1359.50"></text></g><g><title>malloc (2,381,006 samples, 0.04%)</title><rect x="2.8118%" y="1333" width="0.0424%" height="15" fill="rgb(215,41,42)" fg:x="157821500" fg:w="2381006"/><text x="3.0618%" y="1343.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (28,863,831 samples, 0.51%)</title><rect x="2.8542%" y="1349" width="0.5142%" height="15" fill="rgb(224,123,36)" fg:x="160202506" fg:w="28863831"/><text x="3.1042%" y="1359.50"></text></g><g><title>[libc.so.6] (6,316,445 samples, 0.11%)</title><rect x="3.3684%" y="1349" width="0.1125%" height="15" fill="rgb(240,125,3)" fg:x="189066337" fg:w="6316445"/><text x="3.6184%" y="1359.50"></text></g><g><title>__libc_calloc (1,415,210 samples, 0.03%)</title><rect x="3.4810%" y="1349" width="0.0252%" height="15" fill="rgb(205,98,50)" fg:x="195382782" fg:w="1415210"/><text x="3.7310%" y="1359.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (49,797,854 samples, 0.89%)</title><rect x="2.7812%" y="1365" width="0.8872%" height="15" fill="rgb(205,185,37)" fg:x="156105745" fg:w="49797854"/><text x="3.0312%" y="1375.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (9,105,607 samples, 0.16%)</title><rect x="3.5062%" y="1349" width="0.1622%" height="15" fill="rgb(238,207,15)" fg:x="196797992" fg:w="9105607"/><text x="3.7562%" y="1359.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (8,661,444 samples, 0.15%)</title><rect x="3.5141%" y="1333" width="0.1543%" height="15" fill="rgb(213,199,42)" fg:x="197242155" fg:w="8661444"/><text x="3.7641%" y="1343.50"></text></g><g><title>[libc.so.6] (7,135,841 samples, 0.13%)</title><rect x="3.7508%" y="1317" width="0.1271%" height="15" fill="rgb(235,201,11)" fg:x="210526946" fg:w="7135841"/><text x="4.0008%" y="1327.50"></text></g><g><title>__rustc::__rdl_alloc (2,810,241 samples, 0.05%)</title><rect x="3.8779%" y="1317" width="0.0501%" height="15" fill="rgb(207,46,11)" fg:x="217662787" fg:w="2810241"/><text x="4.1279%" y="1327.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (13,761,025 samples, 0.25%)</title><rect x="3.7277%" y="1333" width="0.2452%" height="15" fill="rgb(241,35,35)" fg:x="209230599" fg:w="13761025"/><text x="3.9777%" y="1343.50"></text></g><g><title>malloc (2,017,092 samples, 0.04%)</title><rect x="3.9369%" y="1317" width="0.0359%" height="15" fill="rgb(243,32,47)" fg:x="220974532" fg:w="2017092"/><text x="4.1869%" y="1327.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (48,300,633 samples, 0.86%)</title><rect x="3.9728%" y="1333" width="0.8605%" height="15" fill="rgb(247,202,23)" fg:x="222991624" fg:w="48300633"/><text x="4.2228%" y="1343.50"></text></g><g><title>[libc.so.6] (4,670,704 samples, 0.08%)</title><rect x="4.8334%" y="1333" width="0.0832%" height="15" fill="rgb(219,102,11)" fg:x="271292257" fg:w="4670704"/><text x="5.0834%" y="1343.50"></text></g><g><title>__libc_calloc (1,689,267 samples, 0.03%)</title><rect x="4.9166%" y="1333" width="0.0301%" height="15" fill="rgb(243,110,44)" fg:x="275962961" fg:w="1689267"/><text x="5.1666%" y="1343.50"></text></g><g><title>cfree (1,997,359 samples, 0.04%)</title><rect x="4.9467%" y="1333" width="0.0356%" height="15" fill="rgb(222,74,54)" fg:x="277652228" fg:w="1997359"/><text x="5.1967%" y="1343.50"></text></g><g><title>[libc.so.6] (994,351 samples, 0.02%)</title><rect x="4.9645%" y="1317" width="0.0177%" height="15" fill="rgb(216,99,12)" fg:x="278655236" fg:w="994351"/><text x="5.2145%" y="1327.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (85,353,265 samples, 1.52%)</title><rect x="3.7277%" y="1349" width="1.5207%" height="15" fill="rgb(226,22,26)" fg:x="209230599" fg:w="85353265"/><text x="3.9777%" y="1359.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (14,934,277 samples, 0.27%)</title><rect x="4.9823%" y="1333" width="0.2661%" height="15" fill="rgb(217,163,10)" fg:x="279649587" fg:w="14934277"/><text x="5.2323%" y="1343.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (11,673,038 samples, 0.21%)</title><rect x="5.0404%" y="1317" width="0.2080%" height="15" fill="rgb(213,25,53)" fg:x="282910826" fg:w="11673038"/><text x="5.2904%" y="1327.50"></text></g><g><title>cfree (1,532,173 samples, 0.03%)</title><rect x="5.3625%" y="1333" width="0.0273%" height="15" fill="rgb(252,105,26)" fg:x="300994053" fg:w="1532173"/><text x="5.6125%" y="1343.50"></text></g><g><title>[libc.so.6] (1,797,643 samples, 0.03%)</title><rect x="5.4159%" y="1301" width="0.0320%" height="15" fill="rgb(220,39,43)" fg:x="303987500" fg:w="1797643"/><text x="5.6659%" y="1311.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (4,041,853 samples, 0.07%)</title><rect x="5.4159%" y="1317" width="0.0720%" height="15" fill="rgb(229,68,48)" fg:x="303987500" fg:w="4041853"/><text x="5.6659%" y="1327.50"></text></g><g><title>malloc (2,244,210 samples, 0.04%)</title><rect x="5.4479%" y="1301" width="0.0400%" height="15" fill="rgb(252,8,32)" fg:x="305785143" fg:w="2244210"/><text x="5.6979%" y="1311.50"></text></g><g><title>[libc.so.6] (979,038 samples, 0.02%)</title><rect x="5.4704%" y="1285" width="0.0174%" height="15" fill="rgb(223,20,43)" fg:x="307050315" fg:w="979038"/><text x="5.7204%" y="1295.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (78,636,607 samples, 1.40%)</title><rect x="5.4879%" y="1317" width="1.4010%" height="15" fill="rgb(229,81,49)" fg:x="308029353" fg:w="78636607"/><text x="5.7379%" y="1327.50"></text></g><g><title>[libc.so.6] (16,493,810 samples, 0.29%)</title><rect x="6.8889%" y="1317" width="0.2939%" height="15" fill="rgb(236,28,36)" fg:x="386665960" fg:w="16493810"/><text x="7.1389%" y="1327.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (123,554,455 samples, 2.20%)</title><rect x="5.3988%" y="1333" width="2.2013%" height="15" fill="rgb(249,185,26)" fg:x="303027730" fg:w="123554455"/><text x="5.6488%" y="1343.50">j..</text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (22,920,911 samples, 0.41%)</title><rect x="7.1917%" y="1317" width="0.4084%" height="15" fill="rgb(249,174,33)" fg:x="403661274" fg:w="22920911"/><text x="7.4417%" y="1327.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (22,024,630 samples, 0.39%)</title><rect x="7.2076%" y="1301" width="0.3924%" height="15" fill="rgb(233,201,37)" fg:x="404557555" fg:w="22024630"/><text x="7.4576%" y="1311.50"></text></g><g><title>cfree (867,493 samples, 0.02%)</title><rect x="7.6842%" y="1317" width="0.0155%" height="15" fill="rgb(221,78,26)" fg:x="431306703" fg:w="867493"/><text x="7.9342%" y="1327.50"></text></g><g><title>[libc.so.6] (5,922,891 samples, 0.11%)</title><rect x="7.7979%" y="1285" width="0.1055%" height="15" fill="rgb(250,127,30)" fg:x="437686136" fg:w="5922891"/><text x="8.0479%" y="1295.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7,934,812 samples, 0.14%)</title><rect x="7.7865%" y="1301" width="0.1414%" height="15" fill="rgb(230,49,44)" fg:x="437049168" fg:w="7934812"/><text x="8.0365%" y="1311.50"></text></g><g><title>malloc (1,374,953 samples, 0.02%)</title><rect x="7.9034%" y="1285" width="0.0245%" height="15" fill="rgb(229,67,23)" fg:x="443609027" fg:w="1374953"/><text x="8.1534%" y="1295.50"></text></g><g><title>[libc.so.6] (873,449 samples, 0.02%)</title><rect x="7.9123%" y="1269" width="0.0156%" height="15" fill="rgb(249,83,47)" fg:x="444110531" fg:w="873449"/><text x="8.1623%" y="1279.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (53,346,956 samples, 0.95%)</title><rect x="7.9279%" y="1301" width="0.9504%" height="15" fill="rgb(215,43,3)" fg:x="444983980" fg:w="53346956"/><text x="8.1779%" y="1311.50"></text></g><g><title>[libc.so.6] (27,906,000 samples, 0.50%)</title><rect x="8.8783%" y="1301" width="0.4972%" height="15" fill="rgb(238,154,13)" fg:x="498330936" fg:w="27906000"/><text x="9.1283%" y="1311.50"></text></g><g><title>__libc_calloc (5,175,204 samples, 0.09%)</title><rect x="9.3755%" y="1301" width="0.0922%" height="15" fill="rgb(219,56,2)" fg:x="526236936" fg:w="5175204"/><text x="9.6255%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::nth (1,904,057 samples, 0.03%)</title><rect x="9.5169%" y="1285" width="0.0339%" height="15" fill="rgb(233,0,4)" fg:x="534173828" fg:w="1904057"/><text x="9.7669%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (126,770,531 samples, 2.26%)</title><rect x="7.6997%" y="1317" width="2.2586%" height="15" fill="rgb(235,30,7)" fg:x="432174196" fg:w="126770531"/><text x="7.9497%" y="1327.50">j..</text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (27,031,083 samples, 0.48%)</title><rect x="9.4766%" y="1301" width="0.4816%" height="15" fill="rgb(250,79,13)" fg:x="531913644" fg:w="27031083"/><text x="9.7266%" y="1311.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (22,866,842 samples, 0.41%)</title><rect x="9.5508%" y="1285" width="0.4074%" height="15" fill="rgb(211,146,34)" fg:x="536077885" fg:w="22866842"/><text x="9.8008%" y="1295.50"></text></g><g><title>[libc.so.6] (6,660,671 samples, 0.12%)</title><rect x="9.9758%" y="1269" width="0.1187%" height="15" fill="rgb(228,22,38)" fg:x="559931204" fg:w="6660671"/><text x="10.2258%" y="1279.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7,982,358 samples, 0.14%)</title><rect x="9.9758%" y="1285" width="0.1422%" height="15" fill="rgb(235,168,5)" fg:x="559931204" fg:w="7982358"/><text x="10.2258%" y="1295.50"></text></g><g><title>malloc (1,321,687 samples, 0.02%)</title><rect x="10.0944%" y="1269" width="0.0235%" height="15" fill="rgb(221,155,16)" fg:x="566591875" fg:w="1321687"/><text x="10.3444%" y="1279.50"></text></g><g><title>[libc.so.6] (820,183 samples, 0.01%)</title><rect x="10.1034%" y="1253" width="0.0146%" height="15" fill="rgb(215,215,53)" fg:x="567093379" fg:w="820183"/><text x="10.3534%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (45,739,959 samples, 0.81%)</title><rect x="10.1180%" y="1285" width="0.8149%" height="15" fill="rgb(223,4,10)" fg:x="567913562" fg:w="45739959"/><text x="10.3680%" y="1295.50"></text></g><g><title>[libc.so.6] (9,082,832 samples, 0.16%)</title><rect x="10.9329%" y="1285" width="0.1618%" height="15" fill="rgb(234,103,6)" fg:x="613653521" fg:w="9082832"/><text x="11.1829%" y="1295.50"></text></g><g><title>__libc_calloc (1,919,744 samples, 0.03%)</title><rect x="11.0947%" y="1285" width="0.0342%" height="15" fill="rgb(227,97,0)" fg:x="622736353" fg:w="1919744"/><text x="11.3447%" y="1295.50"></text></g><g><title>[libc.so.6] (951,914 samples, 0.02%)</title><rect x="11.1120%" y="1269" width="0.0170%" height="15" fill="rgb(234,150,53)" fg:x="623704183" fg:w="951914"/><text x="11.3620%" y="1279.50"></text></g><g><title>__rustc::__rdl_alloc_zeroed (1,172,939 samples, 0.02%)</title><rect x="11.1289%" y="1285" width="0.0209%" height="15" fill="rgb(228,201,54)" fg:x="624656097" fg:w="1172939"/><text x="11.3789%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (89,134,379 samples, 1.59%)</title><rect x="9.9758%" y="1301" width="1.5880%" height="15" fill="rgb(222,22,37)" fg:x="559931204" fg:w="89134379"/><text x="10.2258%" y="1311.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (23,236,547 samples, 0.41%)</title><rect x="11.1498%" y="1285" width="0.4140%" height="15" fill="rgb(237,53,32)" fg:x="625829036" fg:w="23236547"/><text x="11.3998%" y="1295.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (19,375,381 samples, 0.35%)</title><rect x="11.2186%" y="1269" width="0.3452%" height="15" fill="rgb(233,25,53)" fg:x="629690202" fg:w="19375381"/><text x="11.4686%" y="1279.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3,337,426 samples, 0.06%)</title><rect x="11.5638%" y="1269" width="0.0595%" height="15" fill="rgb(210,40,34)" fg:x="649065583" fg:w="3337426"/><text x="11.8138%" y="1279.50"></text></g><g><title>[libc.so.6] (3,337,426 samples, 0.06%)</title><rect x="11.5638%" y="1253" width="0.0595%" height="15" fill="rgb(241,220,44)" fg:x="649065583" fg:w="3337426"/><text x="11.8138%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (28,365,081 samples, 0.51%)</title><rect x="11.6233%" y="1269" width="0.5054%" height="15" fill="rgb(235,28,35)" fg:x="652403009" fg:w="28365081"/><text x="11.8733%" y="1279.50"></text></g><g><title>[libc.so.6] (3,954,798 samples, 0.07%)</title><rect x="12.1286%" y="1269" width="0.0705%" height="15" fill="rgb(210,56,17)" fg:x="680768090" fg:w="3954798"/><text x="12.3786%" y="1279.50"></text></g><g><title>cfree (1,355,059 samples, 0.02%)</title><rect x="12.1991%" y="1269" width="0.0241%" height="15" fill="rgb(224,130,29)" fg:x="684722888" fg:w="1355059"/><text x="12.4491%" y="1279.50"></text></g><g><title>[libc.so.6] (1,355,059 samples, 0.02%)</title><rect x="12.1991%" y="1253" width="0.0241%" height="15" fill="rgb(235,212,8)" fg:x="684722888" fg:w="1355059"/><text x="12.4491%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (45,449,389 samples, 0.81%)</title><rect x="11.5638%" y="1285" width="0.8097%" height="15" fill="rgb(223,33,50)" fg:x="649065583" fg:w="45449389"/><text x="11.8138%" y="1295.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (8,437,025 samples, 0.15%)</title><rect x="12.2232%" y="1269" width="0.1503%" height="15" fill="rgb(219,149,13)" fg:x="686077947" fg:w="8437025"/><text x="12.4732%" y="1279.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (7,204,397 samples, 0.13%)</title><rect x="12.2452%" y="1253" width="0.1284%" height="15" fill="rgb(250,156,29)" fg:x="687310575" fg:w="7204397"/><text x="12.4952%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (7,446,590 samples, 0.13%)</title><rect x="12.3964%" y="1253" width="0.1327%" height="15" fill="rgb(216,193,19)" fg:x="695797763" fg:w="7446590"/><text x="12.6464%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,290,212 samples, 0.17%)</title><rect x="12.3735%" y="1285" width="0.1655%" height="15" fill="rgb(216,135,14)" fg:x="694514972" fg:w="9290212"/><text x="12.6235%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (9,290,212 samples, 0.17%)</title><rect x="12.3735%" y="1269" width="0.1655%" height="15" fill="rgb(241,47,5)" fg:x="694514972" fg:w="9290212"/><text x="12.6235%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,064,999 samples, 0.05%)</title><rect x="12.5391%" y="1173" width="0.0546%" height="15" fill="rgb(233,42,35)" fg:x="703805184" fg:w="3064999"/><text x="12.7891%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,064,999 samples, 0.05%)</title><rect x="12.5391%" y="1157" width="0.0546%" height="15" fill="rgb(231,13,6)" fg:x="703805184" fg:w="3064999"/><text x="12.7891%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,401,342 samples, 0.02%)</title><rect x="12.5937%" y="1157" width="0.0250%" height="15" fill="rgb(207,181,40)" fg:x="706870183" fg:w="1401342"/><text x="12.8437%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,909,730 samples, 0.09%)</title><rect x="12.5391%" y="1189" width="0.0875%" height="15" fill="rgb(254,173,49)" fg:x="703805184" fg:w="4909730"/><text x="12.7891%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,844,731 samples, 0.03%)</title><rect x="12.5937%" y="1173" width="0.0329%" height="15" fill="rgb(221,1,38)" fg:x="706870183" fg:w="1844731"/><text x="12.8437%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,397,219 samples, 0.11%)</title><rect x="12.5391%" y="1269" width="0.1140%" height="15" fill="rgb(206,124,46)" fg:x="703805184" fg:w="6397219"/><text x="12.7891%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,397,219 samples, 0.11%)</title><rect x="12.5391%" y="1253" width="0.1140%" height="15" fill="rgb(249,21,11)" fg:x="703805184" fg:w="6397219"/><text x="12.7891%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,397,219 samples, 0.11%)</title><rect x="12.5391%" y="1237" width="0.1140%" height="15" fill="rgb(222,201,40)" fg:x="703805184" fg:w="6397219"/><text x="12.7891%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,397,219 samples, 0.11%)</title><rect x="12.5391%" y="1221" width="0.1140%" height="15" fill="rgb(235,61,29)" fg:x="703805184" fg:w="6397219"/><text x="12.7891%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,397,219 samples, 0.11%)</title><rect x="12.5391%" y="1205" width="0.1140%" height="15" fill="rgb(219,207,3)" fg:x="703805184" fg:w="6397219"/><text x="12.7891%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1189" width="0.0265%" height="15" fill="rgb(222,56,46)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1173" width="0.0265%" height="15" fill="rgb(239,76,54)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1157" width="0.0265%" height="15" fill="rgb(231,124,27)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1141" width="0.0265%" height="15" fill="rgb(249,195,6)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1125" width="0.0265%" height="15" fill="rgb(237,174,47)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1109" width="0.0265%" height="15" fill="rgb(206,201,31)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1093" width="0.0265%" height="15" fill="rgb(231,57,52)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1077" width="0.0265%" height="15" fill="rgb(248,177,22)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1061" width="0.0265%" height="15" fill="rgb(215,211,37)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1071.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1045" width="0.0265%" height="15" fill="rgb(241,128,51)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1055.50"></text></g><g><title>[libc.so.6] (1,487,489 samples, 0.03%)</title><rect x="12.6265%" y="1029" width="0.0265%" height="15" fill="rgb(227,165,31)" fg:x="708714914" fg:w="1487489"/><text x="12.8765%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (151,759,180 samples, 2.70%)</title><rect x="9.9582%" y="1317" width="2.7038%" height="15" fill="rgb(228,167,24)" fg:x="558944727" fg:w="151759180"/><text x="10.2082%" y="1327.50">ra..</text></g><g><title>rayon_core::join::join_context::{{closure}} (61,638,324 samples, 1.10%)</title><rect x="11.5638%" y="1301" width="1.0982%" height="15" fill="rgb(228,143,12)" fg:x="649065583" fg:w="61638324"/><text x="11.8138%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,898,723 samples, 0.12%)</title><rect x="12.5391%" y="1285" width="0.1229%" height="15" fill="rgb(249,149,8)" fg:x="703805184" fg:w="6898723"/><text x="12.7891%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,264,434 samples, 0.02%)</title><rect x="12.6620%" y="1237" width="0.0225%" height="15" fill="rgb(243,35,44)" fg:x="710703907" fg:w="1264434"/><text x="12.9120%" y="1247.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,264,434 samples, 0.02%)</title><rect x="12.6620%" y="1221" width="0.0225%" height="15" fill="rgb(246,89,9)" fg:x="710703907" fg:w="1264434"/><text x="12.9120%" y="1231.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,264,434 samples, 0.02%)</title><rect x="12.6620%" y="1205" width="0.0225%" height="15" fill="rgb(233,213,13)" fg:x="710703907" fg:w="1264434"/><text x="12.9120%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,295,436 samples, 0.04%)</title><rect x="12.6845%" y="1189" width="0.0409%" height="15" fill="rgb(233,141,41)" fg:x="711968341" fg:w="2295436"/><text x="12.9345%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,295,436 samples, 0.04%)</title><rect x="12.6845%" y="1173" width="0.0409%" height="15" fill="rgb(239,167,4)" fg:x="711968341" fg:w="2295436"/><text x="12.9345%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,499,599 samples, 0.06%)</title><rect x="12.6845%" y="1221" width="0.0623%" height="15" fill="rgb(209,217,16)" fg:x="711968341" fg:w="3499599"/><text x="12.9345%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,499,599 samples, 0.06%)</title><rect x="12.6845%" y="1205" width="0.0623%" height="15" fill="rgb(219,88,35)" fg:x="711968341" fg:w="3499599"/><text x="12.9345%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,204,163 samples, 0.02%)</title><rect x="12.7254%" y="1189" width="0.0215%" height="15" fill="rgb(220,193,23)" fg:x="714263777" fg:w="1204163"/><text x="12.9754%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,204,163 samples, 0.02%)</title><rect x="12.7254%" y="1173" width="0.0215%" height="15" fill="rgb(230,90,52)" fg:x="714263777" fg:w="1204163"/><text x="12.9754%" y="1183.50"></text></g><g><title>[libc.so.6] (1,204,163 samples, 0.02%)</title><rect x="12.7254%" y="1157" width="0.0215%" height="15" fill="rgb(252,106,19)" fg:x="714263777" fg:w="1204163"/><text x="12.9754%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,665,490 samples, 0.03%)</title><rect x="12.7468%" y="1157" width="0.0297%" height="15" fill="rgb(206,74,20)" fg:x="715467940" fg:w="1665490"/><text x="12.9968%" y="1167.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,665,490 samples, 0.03%)</title><rect x="12.7468%" y="1141" width="0.0297%" height="15" fill="rgb(230,138,44)" fg:x="715467940" fg:w="1665490"/><text x="12.9968%" y="1151.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,665,490 samples, 0.03%)</title><rect x="12.7468%" y="1125" width="0.0297%" height="15" fill="rgb(235,182,43)" fg:x="715467940" fg:w="1665490"/><text x="12.9968%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,646,348 samples, 0.12%)</title><rect x="12.6845%" y="1237" width="0.1184%" height="15" fill="rgb(242,16,51)" fg:x="711968341" fg:w="6646348"/><text x="12.9345%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,146,749 samples, 0.06%)</title><rect x="12.7468%" y="1221" width="0.0561%" height="15" fill="rgb(248,9,4)" fg:x="715467940" fg:w="3146749"/><text x="12.9968%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,146,749 samples, 0.06%)</title><rect x="12.7468%" y="1205" width="0.0561%" height="15" fill="rgb(210,31,22)" fg:x="715467940" fg:w="3146749"/><text x="12.9968%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,146,749 samples, 0.06%)</title><rect x="12.7468%" y="1189" width="0.0561%" height="15" fill="rgb(239,54,39)" fg:x="715467940" fg:w="3146749"/><text x="12.9968%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,146,749 samples, 0.06%)</title><rect x="12.7468%" y="1173" width="0.0561%" height="15" fill="rgb(230,99,41)" fg:x="715467940" fg:w="3146749"/><text x="12.9968%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1157" width="0.0264%" height="15" fill="rgb(253,106,12)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1141" width="0.0264%" height="15" fill="rgb(213,46,41)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1125" width="0.0264%" height="15" fill="rgb(215,133,35)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1109" width="0.0264%" height="15" fill="rgb(213,28,5)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1093" width="0.0264%" height="15" fill="rgb(215,77,49)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1077" width="0.0264%" height="15" fill="rgb(248,100,22)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1061" width="0.0264%" height="15" fill="rgb(208,67,9)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1045" width="0.0264%" height="15" fill="rgb(219,133,21)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1029" width="0.0264%" height="15" fill="rgb(246,46,29)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1039.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="1013" width="0.0264%" height="15" fill="rgb(246,185,52)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1023.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,481,259 samples, 0.03%)</title><rect x="12.7765%" y="997" width="0.0264%" height="15" fill="rgb(252,136,11)" fg:x="717133430" fg:w="1481259"/><text x="13.0265%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,548,353 samples, 0.15%)</title><rect x="12.6620%" y="1253" width="0.1523%" height="15" fill="rgb(219,138,53)" fg:x="710703907" fg:w="8548353"/><text x="12.9120%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1237" width="0.0114%" height="15" fill="rgb(211,51,23)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1221" width="0.0114%" height="15" fill="rgb(247,221,28)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1205" width="0.0114%" height="15" fill="rgb(251,222,45)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1215.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1189" width="0.0114%" height="15" fill="rgb(217,162,53)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1199.50"></text></g><g><title>crossbeam_epoch::default::with_handle (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1173" width="0.0114%" height="15" fill="rgb(229,93,14)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1183.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1157" width="0.0114%" height="15" fill="rgb(209,67,49)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1167.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1141" width="0.0114%" height="15" fill="rgb(213,87,29)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1151.50"></text></g><g><title>[libc.so.6] (637,571 samples, 0.01%)</title><rect x="12.8029%" y="1125" width="0.0114%" height="15" fill="rgb(205,151,52)" fg:x="718614689" fg:w="637571"/><text x="13.0529%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (293,516,648 samples, 5.23%)</title><rect x="7.6000%" y="1333" width="5.2293%" height="15" fill="rgb(253,215,39)" fg:x="426582185" fg:w="293516648"/><text x="7.8500%" y="1343.50">rayon_..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9,394,926 samples, 0.17%)</title><rect x="12.6620%" y="1317" width="0.1674%" height="15" fill="rgb(221,220,41)" fg:x="710703907" fg:w="9394926"/><text x="12.9120%" y="1327.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9,394,926 samples, 0.17%)</title><rect x="12.6620%" y="1301" width="0.1674%" height="15" fill="rgb(218,133,21)" fg:x="710703907" fg:w="9394926"/><text x="12.9120%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9,394,926 samples, 0.17%)</title><rect x="12.6620%" y="1285" width="0.1674%" height="15" fill="rgb(221,193,43)" fg:x="710703907" fg:w="9394926"/><text x="12.9120%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,394,926 samples, 0.17%)</title><rect x="12.6620%" y="1269" width="0.1674%" height="15" fill="rgb(240,128,52)" fg:x="710703907" fg:w="9394926"/><text x="12.9120%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1253" width="0.0151%" height="15" fill="rgb(253,114,12)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1237" width="0.0151%" height="15" fill="rgb(215,223,47)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1221" width="0.0151%" height="15" fill="rgb(248,225,23)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1205" width="0.0151%" height="15" fill="rgb(250,108,0)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1189" width="0.0151%" height="15" fill="rgb(228,208,7)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1173" width="0.0151%" height="15" fill="rgb(244,45,10)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1157" width="0.0151%" height="15" fill="rgb(207,125,25)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1141" width="0.0151%" height="15" fill="rgb(210,195,18)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1125" width="0.0151%" height="15" fill="rgb(249,80,12)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1109" width="0.0151%" height="15" fill="rgb(221,65,9)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1119.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (846,573 samples, 0.02%)</title><rect x="12.8143%" y="1093" width="0.0151%" height="15" fill="rgb(235,49,36)" fg:x="719252260" fg:w="846573"/><text x="13.0643%" y="1103.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (951,326 samples, 0.02%)</title><rect x="12.8293%" y="1269" width="0.0169%" height="15" fill="rgb(225,32,20)" fg:x="720098833" fg:w="951326"/><text x="13.0793%" y="1279.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (951,326 samples, 0.02%)</title><rect x="12.8293%" y="1253" width="0.0169%" height="15" fill="rgb(215,141,46)" fg:x="720098833" fg:w="951326"/><text x="13.0793%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::nth (951,326 samples, 0.02%)</title><rect x="12.8293%" y="1237" width="0.0169%" height="15" fill="rgb(250,160,47)" fg:x="720098833" fg:w="951326"/><text x="13.0793%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (6,036,852 samples, 0.11%)</title><rect x="12.8463%" y="1221" width="0.1076%" height="15" fill="rgb(216,222,40)" fg:x="721050159" fg:w="6036852"/><text x="13.0963%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (6,036,852 samples, 0.11%)</title><rect x="12.8463%" y="1205" width="0.1076%" height="15" fill="rgb(234,217,39)" fg:x="721050159" fg:w="6036852"/><text x="13.0963%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (946,636 samples, 0.02%)</title><rect x="12.9538%" y="1189" width="0.0169%" height="15" fill="rgb(207,178,40)" fg:x="727087011" fg:w="946636"/><text x="13.2038%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,770,846 samples, 0.05%)</title><rect x="12.9538%" y="1205" width="0.0494%" height="15" fill="rgb(221,136,13)" fg:x="727087011" fg:w="2770846"/><text x="13.2038%" y="1215.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,824,210 samples, 0.03%)</title><rect x="12.9707%" y="1189" width="0.0325%" height="15" fill="rgb(249,199,10)" fg:x="728033647" fg:w="1824210"/><text x="13.2207%" y="1199.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,824,210 samples, 0.03%)</title><rect x="12.9707%" y="1173" width="0.0325%" height="15" fill="rgb(249,222,13)" fg:x="728033647" fg:w="1824210"/><text x="13.2207%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,780,713 samples, 0.05%)</title><rect x="13.0032%" y="1189" width="0.0495%" height="15" fill="rgb(244,185,38)" fg:x="729857857" fg:w="2780713"/><text x="13.2532%" y="1199.50"></text></g><g><title>[libc.so.6] (2,780,713 samples, 0.05%)</title><rect x="13.0032%" y="1173" width="0.0495%" height="15" fill="rgb(236,202,9)" fg:x="729857857" fg:w="2780713"/><text x="13.2532%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14,424,295 samples, 0.26%)</title><rect x="12.8463%" y="1237" width="0.2570%" height="15" fill="rgb(250,229,37)" fg:x="721050159" fg:w="14424295"/><text x="13.0963%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,387,443 samples, 0.15%)</title><rect x="12.9538%" y="1221" width="0.1494%" height="15" fill="rgb(206,174,23)" fg:x="727087011" fg:w="8387443"/><text x="13.2038%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,616,597 samples, 0.10%)</title><rect x="13.0032%" y="1205" width="0.1001%" height="15" fill="rgb(211,33,43)" fg:x="729857857" fg:w="5616597"/><text x="13.2532%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,835,884 samples, 0.05%)</title><rect x="13.0528%" y="1189" width="0.0505%" height="15" fill="rgb(245,58,50)" fg:x="732638570" fg:w="2835884"/><text x="13.3028%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,835,884 samples, 0.05%)</title><rect x="13.0528%" y="1173" width="0.0505%" height="15" fill="rgb(244,68,36)" fg:x="732638570" fg:w="2835884"/><text x="13.3028%" y="1183.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,835,884 samples, 0.05%)</title><rect x="13.0528%" y="1157" width="0.0505%" height="15" fill="rgb(232,229,15)" fg:x="732638570" fg:w="2835884"/><text x="13.3028%" y="1167.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,835,884 samples, 0.05%)</title><rect x="13.0528%" y="1141" width="0.0505%" height="15" fill="rgb(254,30,23)" fg:x="732638570" fg:w="2835884"/><text x="13.3028%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15,467,854 samples, 0.28%)</title><rect x="12.8463%" y="1253" width="0.2756%" height="15" fill="rgb(235,160,14)" fg:x="721050159" fg:w="15467854"/><text x="13.0963%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1237" width="0.0186%" height="15" fill="rgb(212,155,44)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1221" width="0.0186%" height="15" fill="rgb(226,2,50)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1205" width="0.0186%" height="15" fill="rgb(234,177,6)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1189" width="0.0186%" height="15" fill="rgb(217,24,9)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1173" width="0.0186%" height="15" fill="rgb(220,13,46)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1157" width="0.0186%" height="15" fill="rgb(239,221,27)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1141" width="0.0186%" height="15" fill="rgb(222,198,25)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1125" width="0.0186%" height="15" fill="rgb(211,99,13)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1109" width="0.0186%" height="15" fill="rgb(232,111,31)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1093" width="0.0186%" height="15" fill="rgb(245,82,37)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1077" width="0.0186%" height="15" fill="rgb(227,149,46)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1061" width="0.0186%" height="15" fill="rgb(218,36,50)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1045" width="0.0186%" height="15" fill="rgb(226,80,48)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1029" width="0.0186%" height="15" fill="rgb(238,224,15)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="1013" width="0.0186%" height="15" fill="rgb(241,136,10)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="997" width="0.0186%" height="15" fill="rgb(208,32,45)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="1007.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="981" width="0.0186%" height="15" fill="rgb(207,135,9)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="991.50"></text></g><g><title>cfree (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="965" width="0.0186%" height="15" fill="rgb(206,86,44)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="975.50"></text></g><g><title>[libc.so.6] (1,043,559 samples, 0.02%)</title><rect x="13.1033%" y="949" width="0.0186%" height="15" fill="rgb(245,177,15)" fg:x="735474454" fg:w="1043559"/><text x="13.3533%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15,977,149 samples, 0.28%)</title><rect x="12.8463%" y="1269" width="0.2847%" height="15" fill="rgb(206,64,50)" fg:x="721050159" fg:w="15977149"/><text x="13.0963%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1189" width="0.0186%" height="15" fill="rgb(234,36,40)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1173" width="0.0186%" height="15" fill="rgb(213,64,8)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1157" width="0.0186%" height="15" fill="rgb(210,75,36)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1141" width="0.0186%" height="15" fill="rgb(229,88,21)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1125" width="0.0186%" height="15" fill="rgb(252,204,47)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1109" width="0.0186%" height="15" fill="rgb(208,77,27)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1093" width="0.0186%" height="15" fill="rgb(221,76,26)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1077" width="0.0186%" height="15" fill="rgb(225,139,18)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1061" width="0.0186%" height="15" fill="rgb(230,137,11)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1071.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1045" width="0.0186%" height="15" fill="rgb(212,28,1)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1029" width="0.0186%" height="15" fill="rgb(248,164,17)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="1013" width="0.0186%" height="15" fill="rgb(222,171,42)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="997" width="0.0186%" height="15" fill="rgb(243,84,45)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="981" width="0.0186%" height="15" fill="rgb(252,49,23)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="991.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="965" width="0.0186%" height="15" fill="rgb(215,19,7)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="949" width="0.0186%" height="15" fill="rgb(238,81,41)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="933" width="0.0186%" height="15" fill="rgb(210,199,37)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="917" width="0.0186%" height="15" fill="rgb(244,192,49)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="901" width="0.0186%" height="15" fill="rgb(226,211,11)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="911.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="885" width="0.0186%" height="15" fill="rgb(236,162,54)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="895.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,043,904 samples, 0.02%)</title><rect x="13.1309%" y="869" width="0.0186%" height="15" fill="rgb(220,229,9)" fg:x="737027308" fg:w="1043904"/><text x="13.3809%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,046,912 samples, 0.04%)</title><rect x="13.1309%" y="1205" width="0.0365%" height="15" fill="rgb(250,87,22)" fg:x="737027308" fg:w="2046912"/><text x="13.3809%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,003,008 samples, 0.02%)</title><rect x="13.1495%" y="1189" width="0.0179%" height="15" fill="rgb(239,43,17)" fg:x="738071212" fg:w="1003008"/><text x="13.3995%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,003,008 samples, 0.02%)</title><rect x="13.1495%" y="1173" width="0.0179%" height="15" fill="rgb(231,177,25)" fg:x="738071212" fg:w="1003008"/><text x="13.3995%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,115,104 samples, 0.04%)</title><rect x="13.1674%" y="1125" width="0.0377%" height="15" fill="rgb(219,179,1)" fg:x="739074220" fg:w="2115104"/><text x="13.4174%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,115,104 samples, 0.04%)</title><rect x="13.1674%" y="1109" width="0.0377%" height="15" fill="rgb(238,219,53)" fg:x="739074220" fg:w="2115104"/><text x="13.4174%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23,039,824 samples, 0.41%)</title><rect x="12.8293%" y="1317" width="0.4105%" height="15" fill="rgb(232,167,36)" fg:x="720098833" fg:w="23039824"/><text x="13.0793%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23,039,824 samples, 0.41%)</title><rect x="12.8293%" y="1301" width="0.4105%" height="15" fill="rgb(244,19,51)" fg:x="720098833" fg:w="23039824"/><text x="13.0793%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23,039,824 samples, 0.41%)</title><rect x="12.8293%" y="1285" width="0.4105%" height="15" fill="rgb(224,6,22)" fg:x="720098833" fg:w="23039824"/><text x="13.0793%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,111,349 samples, 0.11%)</title><rect x="13.1309%" y="1269" width="0.1089%" height="15" fill="rgb(224,145,5)" fg:x="737027308" fg:w="6111349"/><text x="13.3809%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,111,349 samples, 0.11%)</title><rect x="13.1309%" y="1253" width="0.1089%" height="15" fill="rgb(234,130,49)" fg:x="737027308" fg:w="6111349"/><text x="13.3809%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,111,349 samples, 0.11%)</title><rect x="13.1309%" y="1237" width="0.1089%" height="15" fill="rgb(254,6,2)" fg:x="737027308" fg:w="6111349"/><text x="13.3809%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,111,349 samples, 0.11%)</title><rect x="13.1309%" y="1221" width="0.1089%" height="15" fill="rgb(208,96,46)" fg:x="737027308" fg:w="6111349"/><text x="13.3809%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,064,437 samples, 0.07%)</title><rect x="13.1674%" y="1205" width="0.0724%" height="15" fill="rgb(239,3,39)" fg:x="739074220" fg:w="4064437"/><text x="13.4174%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,064,437 samples, 0.07%)</title><rect x="13.1674%" y="1189" width="0.0724%" height="15" fill="rgb(233,210,1)" fg:x="739074220" fg:w="4064437"/><text x="13.4174%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,064,437 samples, 0.07%)</title><rect x="13.1674%" y="1173" width="0.0724%" height="15" fill="rgb(244,137,37)" fg:x="739074220" fg:w="4064437"/><text x="13.4174%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,064,437 samples, 0.07%)</title><rect x="13.1674%" y="1157" width="0.0724%" height="15" fill="rgb(240,136,2)" fg:x="739074220" fg:w="4064437"/><text x="13.4174%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,064,437 samples, 0.07%)</title><rect x="13.1674%" y="1141" width="0.0724%" height="15" fill="rgb(239,18,37)" fg:x="739074220" fg:w="4064437"/><text x="13.4174%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1125" width="0.0347%" height="15" fill="rgb(218,185,22)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1109" width="0.0347%" height="15" fill="rgb(225,218,4)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1093" width="0.0347%" height="15" fill="rgb(230,182,32)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1077" width="0.0347%" height="15" fill="rgb(242,56,43)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1061" width="0.0347%" height="15" fill="rgb(233,99,24)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1045" width="0.0347%" height="15" fill="rgb(234,209,42)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1029" width="0.0347%" height="15" fill="rgb(227,7,12)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1039.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="1013" width="0.0347%" height="15" fill="rgb(245,203,43)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1023.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,949,333 samples, 0.03%)</title><rect x="13.2051%" y="997" width="0.0347%" height="15" fill="rgb(238,205,33)" fg:x="741189324" fg:w="1949333"/><text x="13.4551%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (449,479,849 samples, 8.01%)</title><rect x="5.2483%" y="1349" width="8.0080%" height="15" fill="rgb(231,56,7)" fg:x="294583864" fg:w="449479849"/><text x="5.4983%" y="1359.50">rayon_core:..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (23,964,880 samples, 0.43%)</title><rect x="12.8293%" y="1333" width="0.4270%" height="15" fill="rgb(244,186,29)" fg:x="720098833" fg:w="23964880"/><text x="13.0793%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (925,056 samples, 0.02%)</title><rect x="13.2398%" y="1317" width="0.0165%" height="15" fill="rgb(234,111,31)" fg:x="743138657" fg:w="925056"/><text x="13.4898%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (925,056 samples, 0.02%)</title><rect x="13.2398%" y="1301" width="0.0165%" height="15" fill="rgb(241,149,10)" fg:x="743138657" fg:w="925056"/><text x="13.4898%" y="1311.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (925,056 samples, 0.02%)</title><rect x="13.2398%" y="1285" width="0.0165%" height="15" fill="rgb(249,206,44)" fg:x="743138657" fg:w="925056"/><text x="13.4898%" y="1295.50"></text></g><g><title>crossbeam_epoch::default::with_handle (925,056 samples, 0.02%)</title><rect x="13.2398%" y="1269" width="0.0165%" height="15" fill="rgb(251,153,30)" fg:x="743138657" fg:w="925056"/><text x="13.4898%" y="1279.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (925,056 samples, 0.02%)</title><rect x="13.2398%" y="1253" width="0.0165%" height="15" fill="rgb(239,152,38)" fg:x="743138657" fg:w="925056"/><text x="13.4898%" y="1263.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (925,056 samples, 0.02%)</title><rect x="13.2398%" y="1237" width="0.0165%" height="15" fill="rgb(249,139,47)" fg:x="743138657" fg:w="925056"/><text x="13.4898%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (957,386 samples, 0.02%)</title><rect x="13.2563%" y="1317" width="0.0171%" height="15" fill="rgb(244,64,35)" fg:x="744063713" fg:w="957386"/><text x="13.5063%" y="1327.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (957,386 samples, 0.02%)</title><rect x="13.2563%" y="1301" width="0.0171%" height="15" fill="rgb(216,46,15)" fg:x="744063713" fg:w="957386"/><text x="13.5063%" y="1311.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (957,386 samples, 0.02%)</title><rect x="13.2563%" y="1285" width="0.0171%" height="15" fill="rgb(250,74,19)" fg:x="744063713" fg:w="957386"/><text x="13.5063%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (710,421 samples, 0.01%)</title><rect x="13.2823%" y="1269" width="0.0127%" height="15" fill="rgb(249,42,33)" fg:x="745522603" fg:w="710421"/><text x="13.5323%" y="1279.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (710,421 samples, 0.01%)</title><rect x="13.2823%" y="1253" width="0.0127%" height="15" fill="rgb(242,149,17)" fg:x="745522603" fg:w="710421"/><text x="13.5323%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,611,137 samples, 0.06%)</title><rect x="13.2950%" y="1237" width="0.0643%" height="15" fill="rgb(244,29,21)" fg:x="746233024" fg:w="3611137"/><text x="13.5450%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,112,641 samples, 0.07%)</title><rect x="13.2950%" y="1253" width="0.0733%" height="15" fill="rgb(220,130,37)" fg:x="746233024" fg:w="4112641"/><text x="13.5450%" y="1263.50"></text></g><g><title>[libc.so.6] (2,037,181 samples, 0.04%)</title><rect x="13.3682%" y="1221" width="0.0363%" height="15" fill="rgb(211,67,2)" fg:x="750345665" fg:w="2037181"/><text x="13.6182%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,091,821 samples, 0.07%)</title><rect x="13.3682%" y="1237" width="0.0729%" height="15" fill="rgb(235,68,52)" fg:x="750345665" fg:w="4091821"/><text x="13.6182%" y="1247.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,054,640 samples, 0.04%)</title><rect x="13.4045%" y="1221" width="0.0366%" height="15" fill="rgb(246,142,3)" fg:x="752382846" fg:w="2054640"/><text x="13.6545%" y="1231.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,054,640 samples, 0.04%)</title><rect x="13.4045%" y="1205" width="0.0366%" height="15" fill="rgb(241,25,7)" fg:x="752382846" fg:w="2054640"/><text x="13.6545%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,930,637 samples, 0.03%)</title><rect x="13.4501%" y="1189" width="0.0344%" height="15" fill="rgb(242,119,39)" fg:x="754938990" fg:w="1930637"/><text x="13.7001%" y="1199.50"></text></g><g><title>[libc.so.6] (4,085,209 samples, 0.07%)</title><rect x="13.4845%" y="1189" width="0.0728%" height="15" fill="rgb(241,98,45)" fg:x="756869627" fg:w="4085209"/><text x="13.7345%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,767,956 samples, 0.16%)</title><rect x="13.4411%" y="1237" width="0.1562%" height="15" fill="rgb(254,28,30)" fg:x="754437486" fg:w="8767956"/><text x="13.6911%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,266,452 samples, 0.15%)</title><rect x="13.4501%" y="1221" width="0.1473%" height="15" fill="rgb(241,142,54)" fg:x="754938990" fg:w="8266452"/><text x="13.7001%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (8,266,452 samples, 0.15%)</title><rect x="13.4501%" y="1205" width="0.1473%" height="15" fill="rgb(222,85,15)" fg:x="754938990" fg:w="8266452"/><text x="13.7001%" y="1215.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,250,606 samples, 0.04%)</title><rect x="13.5572%" y="1189" width="0.0401%" height="15" fill="rgb(210,85,47)" fg:x="760954836" fg:w="2250606"/><text x="13.8072%" y="1199.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,250,606 samples, 0.04%)</title><rect x="13.5572%" y="1173" width="0.0401%" height="15" fill="rgb(224,206,25)" fg:x="760954836" fg:w="2250606"/><text x="13.8072%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14,641,072 samples, 0.26%)</title><rect x="13.3682%" y="1253" width="0.2608%" height="15" fill="rgb(243,201,19)" fg:x="750345665" fg:w="14641072"/><text x="13.6182%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1237" width="0.0317%" height="15" fill="rgb(236,59,4)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1221" width="0.0317%" height="15" fill="rgb(254,179,45)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1205" width="0.0317%" height="15" fill="rgb(226,14,10)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1189" width="0.0317%" height="15" fill="rgb(244,27,41)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1173" width="0.0317%" height="15" fill="rgb(235,35,32)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1157" width="0.0317%" height="15" fill="rgb(218,68,31)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1141" width="0.0317%" height="15" fill="rgb(207,120,37)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1125" width="0.0317%" height="15" fill="rgb(227,98,0)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1109" width="0.0317%" height="15" fill="rgb(207,7,3)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1093" width="0.0317%" height="15" fill="rgb(206,98,19)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1103.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,781,295 samples, 0.03%)</title><rect x="13.5973%" y="1077" width="0.0317%" height="15" fill="rgb(217,5,26)" fg:x="763205442" fg:w="1781295"/><text x="13.8473%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21,267,475 samples, 0.38%)</title><rect x="13.2950%" y="1269" width="0.3789%" height="15" fill="rgb(235,190,38)" fg:x="746233024" fg:w="21267475"/><text x="13.5450%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,513,762 samples, 0.04%)</title><rect x="13.6291%" y="1253" width="0.0448%" height="15" fill="rgb(247,86,24)" fg:x="764986737" fg:w="2513762"/><text x="13.8791%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,513,762 samples, 0.04%)</title><rect x="13.6291%" y="1237" width="0.0448%" height="15" fill="rgb(205,101,16)" fg:x="764986737" fg:w="2513762"/><text x="13.8791%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,513,762 samples, 0.04%)</title><rect x="13.6291%" y="1221" width="0.0448%" height="15" fill="rgb(246,168,33)" fg:x="764986737" fg:w="2513762"/><text x="13.8791%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,513,762 samples, 0.04%)</title><rect x="13.6291%" y="1205" width="0.0448%" height="15" fill="rgb(231,114,1)" fg:x="764986737" fg:w="2513762"/><text x="13.8791%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,012,258 samples, 0.04%)</title><rect x="13.6380%" y="1189" width="0.0359%" height="15" fill="rgb(207,184,53)" fg:x="765488241" fg:w="2012258"/><text x="13.8880%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,012,258 samples, 0.04%)</title><rect x="13.6380%" y="1173" width="0.0359%" height="15" fill="rgb(224,95,51)" fg:x="765488241" fg:w="2012258"/><text x="13.8880%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,012,258 samples, 0.04%)</title><rect x="13.6380%" y="1157" width="0.0359%" height="15" fill="rgb(212,188,45)" fg:x="765488241" fg:w="2012258"/><text x="13.8880%" y="1167.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,012,258 samples, 0.04%)</title><rect x="13.6380%" y="1141" width="0.0359%" height="15" fill="rgb(223,154,38)" fg:x="765488241" fg:w="2012258"/><text x="13.8880%" y="1151.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,012,258 samples, 0.04%)</title><rect x="13.6380%" y="1125" width="0.0359%" height="15" fill="rgb(251,22,52)" fg:x="765488241" fg:w="2012258"/><text x="13.8880%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,919,195 samples, 0.03%)</title><rect x="13.6739%" y="1237" width="0.0342%" height="15" fill="rgb(229,209,22)" fg:x="767500499" fg:w="1919195"/><text x="13.9239%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,919,195 samples, 0.03%)</title><rect x="13.6739%" y="1221" width="0.0342%" height="15" fill="rgb(234,138,34)" fg:x="767500499" fg:w="1919195"/><text x="13.9239%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,919,195 samples, 0.03%)</title><rect x="13.6739%" y="1205" width="0.0342%" height="15" fill="rgb(212,95,11)" fg:x="767500499" fg:w="1919195"/><text x="13.9239%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,077,121 samples, 0.02%)</title><rect x="13.7080%" y="1125" width="0.0192%" height="15" fill="rgb(240,179,47)" fg:x="769419694" fg:w="1077121"/><text x="13.9580%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,262,964 samples, 0.06%)</title><rect x="13.7080%" y="1205" width="0.0581%" height="15" fill="rgb(240,163,11)" fg:x="769419694" fg:w="3262964"/><text x="13.9580%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,262,964 samples, 0.06%)</title><rect x="13.7080%" y="1189" width="0.0581%" height="15" fill="rgb(236,37,12)" fg:x="769419694" fg:w="3262964"/><text x="13.9580%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,262,964 samples, 0.06%)</title><rect x="13.7080%" y="1173" width="0.0581%" height="15" fill="rgb(232,164,16)" fg:x="769419694" fg:w="3262964"/><text x="13.9580%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,262,964 samples, 0.06%)</title><rect x="13.7080%" y="1157" width="0.0581%" height="15" fill="rgb(244,205,15)" fg:x="769419694" fg:w="3262964"/><text x="13.9580%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,262,964 samples, 0.06%)</title><rect x="13.7080%" y="1141" width="0.0581%" height="15" fill="rgb(223,117,47)" fg:x="769419694" fg:w="3262964"/><text x="13.9580%" y="1151.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,185,843 samples, 0.04%)</title><rect x="13.7272%" y="1125" width="0.0389%" height="15" fill="rgb(244,107,35)" fg:x="770496815" fg:w="2185843"/><text x="13.9772%" y="1135.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,185,843 samples, 0.04%)</title><rect x="13.7272%" y="1109" width="0.0389%" height="15" fill="rgb(205,140,8)" fg:x="770496815" fg:w="2185843"/><text x="13.9772%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (28,138,840 samples, 0.50%)</title><rect x="13.2823%" y="1285" width="0.5013%" height="15" fill="rgb(228,84,46)" fg:x="745522603" fg:w="28138840"/><text x="13.5323%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,160,944 samples, 0.11%)</title><rect x="13.6739%" y="1269" width="0.1098%" height="15" fill="rgb(254,188,9)" fg:x="767500499" fg:w="6160944"/><text x="13.9239%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,160,944 samples, 0.11%)</title><rect x="13.6739%" y="1253" width="0.1098%" height="15" fill="rgb(206,112,54)" fg:x="767500499" fg:w="6160944"/><text x="13.9239%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,241,749 samples, 0.08%)</title><rect x="13.7080%" y="1237" width="0.0756%" height="15" fill="rgb(216,84,49)" fg:x="769419694" fg:w="4241749"/><text x="13.9580%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,241,749 samples, 0.08%)</title><rect x="13.7080%" y="1221" width="0.0756%" height="15" fill="rgb(214,194,35)" fg:x="769419694" fg:w="4241749"/><text x="13.9580%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (978,785 samples, 0.02%)</title><rect x="13.7662%" y="1205" width="0.0174%" height="15" fill="rgb(249,28,3)" fg:x="772682658" fg:w="978785"/><text x="14.0162%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (978,785 samples, 0.02%)</title><rect x="13.7662%" y="1189" width="0.0174%" height="15" fill="rgb(222,56,52)" fg:x="772682658" fg:w="978785"/><text x="14.0162%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (978,785 samples, 0.02%)</title><rect x="13.7662%" y="1173" width="0.0174%" height="15" fill="rgb(245,217,50)" fg:x="772682658" fg:w="978785"/><text x="14.0162%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (978,785 samples, 0.02%)</title><rect x="13.7662%" y="1157" width="0.0174%" height="15" fill="rgb(213,201,24)" fg:x="772682658" fg:w="978785"/><text x="14.0162%" y="1167.50"></text></g><g><title>[libc.so.6] (978,785 samples, 0.02%)</title><rect x="13.7662%" y="1141" width="0.0174%" height="15" fill="rgb(248,116,28)" fg:x="772682658" fg:w="978785"/><text x="14.0162%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,936,372 samples, 0.03%)</title><rect x="13.7926%" y="1205" width="0.0345%" height="15" fill="rgb(219,72,43)" fg:x="774162947" fg:w="1936372"/><text x="14.0426%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,936,372 samples, 0.03%)</title><rect x="13.7926%" y="1189" width="0.0345%" height="15" fill="rgb(209,138,14)" fg:x="774162947" fg:w="1936372"/><text x="14.0426%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,406,519 samples, 0.03%)</title><rect x="13.8271%" y="1189" width="0.0251%" height="15" fill="rgb(222,18,33)" fg:x="776099319" fg:w="1406519"/><text x="14.0771%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,406,519 samples, 0.03%)</title><rect x="13.8271%" y="1173" width="0.0251%" height="15" fill="rgb(213,199,7)" fg:x="776099319" fg:w="1406519"/><text x="14.0771%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (945,281 samples, 0.02%)</title><rect x="13.8521%" y="1173" width="0.0168%" height="15" fill="rgb(250,110,10)" fg:x="777505838" fg:w="945281"/><text x="14.1021%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (945,281 samples, 0.02%)</title><rect x="13.8521%" y="1157" width="0.0168%" height="15" fill="rgb(248,123,6)" fg:x="777505838" fg:w="945281"/><text x="14.1021%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,521,228 samples, 0.04%)</title><rect x="13.8690%" y="1157" width="0.0449%" height="15" fill="rgb(206,91,31)" fg:x="778451119" fg:w="2521228"/><text x="14.1190%" y="1167.50"></text></g><g><title>[libc.so.6] (2,521,228 samples, 0.04%)</title><rect x="13.8690%" y="1141" width="0.0449%" height="15" fill="rgb(211,154,13)" fg:x="778451119" fg:w="2521228"/><text x="14.1190%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,842,023 samples, 0.07%)</title><rect x="13.8690%" y="1173" width="0.0684%" height="15" fill="rgb(225,148,7)" fg:x="778451119" fg:w="3842023"/><text x="14.1190%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,320,795 samples, 0.02%)</title><rect x="13.9139%" y="1157" width="0.0235%" height="15" fill="rgb(220,160,43)" fg:x="780972347" fg:w="1320795"/><text x="14.1639%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (819,291 samples, 0.01%)</title><rect x="13.9228%" y="1141" width="0.0146%" height="15" fill="rgb(213,52,39)" fg:x="781473851" fg:w="819291"/><text x="14.1728%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (819,291 samples, 0.01%)</title><rect x="13.9228%" y="1125" width="0.0146%" height="15" fill="rgb(243,137,7)" fg:x="781473851" fg:w="819291"/><text x="14.1728%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (819,291 samples, 0.01%)</title><rect x="13.9228%" y="1109" width="0.0146%" height="15" fill="rgb(230,79,13)" fg:x="781473851" fg:w="819291"/><text x="14.1728%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (978,773 samples, 0.02%)</title><rect x="13.9374%" y="1093" width="0.0174%" height="15" fill="rgb(247,105,23)" fg:x="782293142" fg:w="978773"/><text x="14.1874%" y="1103.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (978,773 samples, 0.02%)</title><rect x="13.9374%" y="1077" width="0.0174%" height="15" fill="rgb(223,179,41)" fg:x="782293142" fg:w="978773"/><text x="14.1874%" y="1087.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (978,773 samples, 0.02%)</title><rect x="13.9374%" y="1061" width="0.0174%" height="15" fill="rgb(218,9,34)" fg:x="782293142" fg:w="978773"/><text x="14.1874%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,426,425 samples, 0.03%)</title><rect x="13.9548%" y="1093" width="0.0254%" height="15" fill="rgb(222,106,8)" fg:x="783271915" fg:w="1426425"/><text x="14.2048%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,426,425 samples, 0.03%)</title><rect x="13.9548%" y="1077" width="0.0254%" height="15" fill="rgb(211,220,0)" fg:x="783271915" fg:w="1426425"/><text x="14.2048%" y="1087.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,426,425 samples, 0.03%)</title><rect x="13.9548%" y="1061" width="0.0254%" height="15" fill="rgb(229,52,16)" fg:x="783271915" fg:w="1426425"/><text x="14.2048%" y="1071.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,426,425 samples, 0.03%)</title><rect x="13.9548%" y="1045" width="0.0254%" height="15" fill="rgb(212,155,18)" fg:x="783271915" fg:w="1426425"/><text x="14.2048%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7,694,006 samples, 0.14%)</title><rect x="13.8521%" y="1189" width="0.1371%" height="15" fill="rgb(242,21,14)" fg:x="777505838" fg:w="7694006"/><text x="14.1021%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,906,702 samples, 0.05%)</title><rect x="13.9374%" y="1173" width="0.0518%" height="15" fill="rgb(222,19,48)" fg:x="782293142" fg:w="2906702"/><text x="14.1874%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,906,702 samples, 0.05%)</title><rect x="13.9374%" y="1157" width="0.0518%" height="15" fill="rgb(232,45,27)" fg:x="782293142" fg:w="2906702"/><text x="14.1874%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,906,702 samples, 0.05%)</title><rect x="13.9374%" y="1141" width="0.0518%" height="15" fill="rgb(249,103,42)" fg:x="782293142" fg:w="2906702"/><text x="14.1874%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,906,702 samples, 0.05%)</title><rect x="13.9374%" y="1125" width="0.0518%" height="15" fill="rgb(246,81,33)" fg:x="782293142" fg:w="2906702"/><text x="14.1874%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,906,702 samples, 0.05%)</title><rect x="13.9374%" y="1109" width="0.0518%" height="15" fill="rgb(252,33,42)" fg:x="782293142" fg:w="2906702"/><text x="14.1874%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,602,029 samples, 0.17%)</title><rect x="13.8271%" y="1205" width="0.1711%" height="15" fill="rgb(209,212,41)" fg:x="776099319" fg:w="9602029"/><text x="14.0771%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12,753,525 samples, 0.23%)</title><rect x="13.7836%" y="1221" width="0.2272%" height="15" fill="rgb(207,154,6)" fg:x="773661443" fg:w="12753525"/><text x="14.0336%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (713,620 samples, 0.01%)</title><rect x="13.9981%" y="1205" width="0.0127%" height="15" fill="rgb(223,64,47)" fg:x="785701348" fg:w="713620"/><text x="14.2481%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (713,620 samples, 0.01%)</title><rect x="13.9981%" y="1189" width="0.0127%" height="15" fill="rgb(211,161,38)" fg:x="785701348" fg:w="713620"/><text x="14.2481%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (713,620 samples, 0.01%)</title><rect x="13.9981%" y="1173" width="0.0127%" height="15" fill="rgb(219,138,40)" fg:x="785701348" fg:w="713620"/><text x="14.2481%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (713,620 samples, 0.01%)</title><rect x="13.9981%" y="1157" width="0.0127%" height="15" fill="rgb(241,228,46)" fg:x="785701348" fg:w="713620"/><text x="14.2481%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (713,620 samples, 0.01%)</title><rect x="13.9981%" y="1141" width="0.0127%" height="15" fill="rgb(223,209,38)" fg:x="785701348" fg:w="713620"/><text x="14.2481%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (713,620 samples, 0.01%)</title><rect x="13.9981%" y="1125" width="0.0127%" height="15" fill="rgb(236,164,45)" fg:x="785701348" fg:w="713620"/><text x="14.2481%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (713,620 samples, 0.01%)</title><rect x="13.9981%" y="1109" width="0.0127%" height="15" fill="rgb(231,15,5)" fg:x="785701348" fg:w="713620"/><text x="14.2481%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,770,424 samples, 0.03%)</title><rect x="14.0108%" y="1141" width="0.0315%" height="15" fill="rgb(252,35,15)" fg:x="786414968" fg:w="1770424"/><text x="14.2608%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,770,424 samples, 0.03%)</title><rect x="14.0108%" y="1125" width="0.0315%" height="15" fill="rgb(248,181,18)" fg:x="786414968" fg:w="1770424"/><text x="14.2608%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,770,424 samples, 0.03%)</title><rect x="14.0108%" y="1109" width="0.0315%" height="15" fill="rgb(233,39,42)" fg:x="786414968" fg:w="1770424"/><text x="14.2608%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,770,424 samples, 0.03%)</title><rect x="14.0108%" y="1093" width="0.0315%" height="15" fill="rgb(238,110,33)" fg:x="786414968" fg:w="1770424"/><text x="14.2608%" y="1103.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,770,424 samples, 0.03%)</title><rect x="14.0108%" y="1077" width="0.0315%" height="15" fill="rgb(233,195,10)" fg:x="786414968" fg:w="1770424"/><text x="14.2608%" y="1087.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,770,424 samples, 0.03%)</title><rect x="14.0108%" y="1061" width="0.0315%" height="15" fill="rgb(254,105,3)" fg:x="786414968" fg:w="1770424"/><text x="14.2608%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,256,664 samples, 0.04%)</title><rect x="14.0108%" y="1157" width="0.0402%" height="15" fill="rgb(221,225,9)" fg:x="786414968" fg:w="2256664"/><text x="14.2608%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,217,907 samples, 0.09%)</title><rect x="14.0108%" y="1205" width="0.0930%" height="15" fill="rgb(224,227,45)" fg:x="786414968" fg:w="5217907"/><text x="14.2608%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5,217,907 samples, 0.09%)</title><rect x="14.0108%" y="1189" width="0.0930%" height="15" fill="rgb(229,198,43)" fg:x="786414968" fg:w="5217907"/><text x="14.2608%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,217,907 samples, 0.09%)</title><rect x="14.0108%" y="1173" width="0.0930%" height="15" fill="rgb(206,209,35)" fg:x="786414968" fg:w="5217907"/><text x="14.2608%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,961,243 samples, 0.05%)</title><rect x="14.0510%" y="1157" width="0.0528%" height="15" fill="rgb(245,195,53)" fg:x="788671632" fg:w="2961243"/><text x="14.3010%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,961,243 samples, 0.05%)</title><rect x="14.0510%" y="1141" width="0.0528%" height="15" fill="rgb(240,92,26)" fg:x="788671632" fg:w="2961243"/><text x="14.3010%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,961,243 samples, 0.05%)</title><rect x="14.0510%" y="1125" width="0.0528%" height="15" fill="rgb(207,40,23)" fg:x="788671632" fg:w="2961243"/><text x="14.3010%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,961,243 samples, 0.05%)</title><rect x="14.0510%" y="1109" width="0.0528%" height="15" fill="rgb(223,111,35)" fg:x="788671632" fg:w="2961243"/><text x="14.3010%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="1093" width="0.0349%" height="15" fill="rgb(229,147,28)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="1077" width="0.0349%" height="15" fill="rgb(211,29,28)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="1061" width="0.0349%" height="15" fill="rgb(228,72,33)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="1045" width="0.0349%" height="15" fill="rgb(205,214,31)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="1029" width="0.0349%" height="15" fill="rgb(224,111,15)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="1039.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="1013" width="0.0349%" height="15" fill="rgb(253,21,26)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="997" width="0.0349%" height="15" fill="rgb(245,139,43)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="981" width="0.0349%" height="15" fill="rgb(252,170,7)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,960,064 samples, 0.03%)</title><rect x="14.0689%" y="965" width="0.0349%" height="15" fill="rgb(231,118,14)" fg:x="789672811" fg:w="1960064"/><text x="14.3189%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,400,864 samples, 0.04%)</title><rect x="14.1038%" y="1189" width="0.0428%" height="15" fill="rgb(238,83,0)" fg:x="791632875" fg:w="2400864"/><text x="14.3538%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (50,770,491 samples, 0.90%)</title><rect x="13.2563%" y="1333" width="0.9045%" height="15" fill="rgb(221,39,39)" fg:x="744063713" fg:w="50770491"/><text x="13.5063%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49,813,105 samples, 0.89%)</title><rect x="13.2734%" y="1317" width="0.8875%" height="15" fill="rgb(222,119,46)" fg:x="745021099" fg:w="49813105"/><text x="13.5234%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (49,813,105 samples, 0.89%)</title><rect x="13.2734%" y="1301" width="0.8875%" height="15" fill="rgb(222,165,49)" fg:x="745021099" fg:w="49813105"/><text x="13.5234%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (21,172,761 samples, 0.38%)</title><rect x="13.7836%" y="1285" width="0.3772%" height="15" fill="rgb(219,113,52)" fg:x="773661443" fg:w="21172761"/><text x="14.0336%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (21,172,761 samples, 0.38%)</title><rect x="13.7836%" y="1269" width="0.3772%" height="15" fill="rgb(214,7,15)" fg:x="773661443" fg:w="21172761"/><text x="14.0336%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21,172,761 samples, 0.38%)</title><rect x="13.7836%" y="1253" width="0.3772%" height="15" fill="rgb(235,32,4)" fg:x="773661443" fg:w="21172761"/><text x="14.0336%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21,172,761 samples, 0.38%)</title><rect x="13.7836%" y="1237" width="0.3772%" height="15" fill="rgb(238,90,54)" fg:x="773661443" fg:w="21172761"/><text x="14.0336%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8,419,236 samples, 0.15%)</title><rect x="14.0108%" y="1221" width="0.1500%" height="15" fill="rgb(213,208,19)" fg:x="786414968" fg:w="8419236"/><text x="14.2608%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (3,201,329 samples, 0.06%)</title><rect x="14.1038%" y="1205" width="0.0570%" height="15" fill="rgb(233,156,4)" fg:x="791632875" fg:w="3201329"/><text x="14.3538%" y="1215.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (800,465 samples, 0.01%)</title><rect x="14.1466%" y="1189" width="0.0143%" height="15" fill="rgb(207,194,5)" fg:x="794033739" fg:w="800465"/><text x="14.3966%" y="1199.50"></text></g><g><title>crossbeam_epoch::default::with_handle (800,465 samples, 0.01%)</title><rect x="14.1466%" y="1173" width="0.0143%" height="15" fill="rgb(206,111,30)" fg:x="794033739" fg:w="800465"/><text x="14.3966%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (589,928,764 samples, 10.51%)</title><rect x="3.6684%" y="1365" width="10.5102%" height="15" fill="rgb(243,70,54)" fg:x="205903599" fg:w="589928764"/><text x="3.9184%" y="1375.50">rayon_core::joi..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (51,768,650 samples, 0.92%)</title><rect x="13.2563%" y="1349" width="0.9223%" height="15" fill="rgb(242,28,8)" fg:x="744063713" fg:w="51768650"/><text x="13.5063%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (998,159 samples, 0.02%)</title><rect x="14.1608%" y="1333" width="0.0178%" height="15" fill="rgb(219,106,18)" fg:x="794834204" fg:w="998159"/><text x="14.4108%" y="1343.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (998,159 samples, 0.02%)</title><rect x="14.1608%" y="1317" width="0.0178%" height="15" fill="rgb(244,222,10)" fg:x="794834204" fg:w="998159"/><text x="14.4108%" y="1327.50"></text></g><g><title>crossbeam_epoch::default::with_handle (998,159 samples, 0.02%)</title><rect x="14.1608%" y="1301" width="0.0178%" height="15" fill="rgb(236,179,52)" fg:x="794834204" fg:w="998159"/><text x="14.4108%" y="1311.50"></text></g><g><title>[libc.so.6] (3,828,209 samples, 0.07%)</title><rect x="14.1954%" y="1269" width="0.0682%" height="15" fill="rgb(213,23,39)" fg:x="796773765" fg:w="3828209"/><text x="14.4454%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,831,217 samples, 0.09%)</title><rect x="14.1954%" y="1285" width="0.0861%" height="15" fill="rgb(238,48,10)" fg:x="796773765" fg:w="4831217"/><text x="14.4454%" y="1295.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (992,726 samples, 0.02%)</title><rect x="14.2815%" y="1253" width="0.0177%" height="15" fill="rgb(251,196,23)" fg:x="801604982" fg:w="992726"/><text x="14.5315%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,397,376 samples, 0.04%)</title><rect x="14.2815%" y="1269" width="0.0427%" height="15" fill="rgb(250,152,24)" fg:x="801604982" fg:w="2397376"/><text x="14.5315%" y="1279.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,404,650 samples, 0.03%)</title><rect x="14.2991%" y="1253" width="0.0250%" height="15" fill="rgb(209,150,17)" fg:x="802597708" fg:w="1404650"/><text x="14.5491%" y="1263.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,404,650 samples, 0.03%)</title><rect x="14.2991%" y="1237" width="0.0250%" height="15" fill="rgb(234,202,34)" fg:x="802597708" fg:w="1404650"/><text x="14.5491%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,785,869 samples, 0.03%)</title><rect x="14.3324%" y="1237" width="0.0318%" height="15" fill="rgb(253,148,53)" fg:x="804465055" fg:w="1785869"/><text x="14.5824%" y="1247.50"></text></g><g><title>[libc.so.6] (759,008 samples, 0.01%)</title><rect x="14.3642%" y="1237" width="0.0135%" height="15" fill="rgb(218,129,16)" fg:x="806250924" fg:w="759008"/><text x="14.6142%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (7,053,227 samples, 0.13%)</title><rect x="14.3242%" y="1253" width="0.1257%" height="15" fill="rgb(216,85,19)" fg:x="804002358" fg:w="7053227"/><text x="14.5742%" y="1263.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (4,045,653 samples, 0.07%)</title><rect x="14.3778%" y="1237" width="0.0721%" height="15" fill="rgb(235,228,7)" fg:x="807009932" fg:w="4045653"/><text x="14.6278%" y="1247.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (4,045,653 samples, 0.07%)</title><rect x="14.3778%" y="1221" width="0.0721%" height="15" fill="rgb(245,175,0)" fg:x="807009932" fg:w="4045653"/><text x="14.6278%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,035,162 samples, 0.05%)</title><rect x="14.4498%" y="1221" width="0.0541%" height="15" fill="rgb(208,168,36)" fg:x="811055585" fg:w="3035162"/><text x="14.6998%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::nth (877,076 samples, 0.02%)</title><rect x="14.5039%" y="1205" width="0.0156%" height="15" fill="rgb(246,171,24)" fg:x="814090747" fg:w="877076"/><text x="14.7539%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (6,610,126 samples, 0.12%)</title><rect x="14.4498%" y="1237" width="0.1178%" height="15" fill="rgb(215,142,24)" fg:x="811055585" fg:w="6610126"/><text x="14.6998%" y="1247.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,574,964 samples, 0.06%)</title><rect x="14.5039%" y="1221" width="0.0637%" height="15" fill="rgb(250,187,7)" fg:x="814090747" fg:w="3574964"/><text x="14.7539%" y="1231.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,697,888 samples, 0.05%)</title><rect x="14.5195%" y="1205" width="0.0481%" height="15" fill="rgb(228,66,33)" fg:x="814967823" fg:w="2697888"/><text x="14.7695%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,842,877 samples, 0.03%)</title><rect x="14.5676%" y="1221" width="0.0328%" height="15" fill="rgb(234,215,21)" fg:x="817665711" fg:w="1842877"/><text x="14.8176%" y="1231.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,353,839 samples, 0.02%)</title><rect x="14.5763%" y="1205" width="0.0241%" height="15" fill="rgb(222,191,20)" fg:x="818154749" fg:w="1353839"/><text x="14.8263%" y="1215.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,353,839 samples, 0.02%)</title><rect x="14.5763%" y="1189" width="0.0241%" height="15" fill="rgb(245,79,54)" fg:x="818154749" fg:w="1353839"/><text x="14.8263%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,737,418 samples, 0.07%)</title><rect x="14.5676%" y="1237" width="0.0666%" height="15" fill="rgb(240,10,37)" fg:x="817665711" fg:w="3737418"/><text x="14.8176%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,894,541 samples, 0.03%)</title><rect x="14.6004%" y="1221" width="0.0338%" height="15" fill="rgb(214,192,32)" fg:x="819508588" fg:w="1894541"/><text x="14.8504%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,894,541 samples, 0.03%)</title><rect x="14.6004%" y="1205" width="0.0338%" height="15" fill="rgb(209,36,54)" fg:x="819508588" fg:w="1894541"/><text x="14.8504%" y="1215.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,383,467 samples, 0.02%)</title><rect x="14.6095%" y="1189" width="0.0246%" height="15" fill="rgb(220,10,11)" fg:x="820019662" fg:w="1383467"/><text x="14.8595%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11,300,672 samples, 0.20%)</title><rect x="14.4498%" y="1253" width="0.2013%" height="15" fill="rgb(221,106,17)" fg:x="811055585" fg:w="11300672"/><text x="14.6998%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (953,128 samples, 0.02%)</title><rect x="14.6342%" y="1237" width="0.0170%" height="15" fill="rgb(251,142,44)" fg:x="821403129" fg:w="953128"/><text x="14.8842%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (953,128 samples, 0.02%)</title><rect x="14.6342%" y="1221" width="0.0170%" height="15" fill="rgb(238,13,15)" fg:x="821403129" fg:w="953128"/><text x="14.8842%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (953,128 samples, 0.02%)</title><rect x="14.6342%" y="1205" width="0.0170%" height="15" fill="rgb(208,107,27)" fg:x="821403129" fg:w="953128"/><text x="14.8842%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (953,128 samples, 0.02%)</title><rect x="14.6342%" y="1189" width="0.0170%" height="15" fill="rgb(205,136,37)" fg:x="821403129" fg:w="953128"/><text x="14.8842%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,452,357 samples, 0.03%)</title><rect x="14.6512%" y="1173" width="0.0259%" height="15" fill="rgb(250,205,27)" fg:x="822356257" fg:w="1452357"/><text x="14.9012%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,452,357 samples, 0.03%)</title><rect x="14.6512%" y="1157" width="0.0259%" height="15" fill="rgb(210,80,43)" fg:x="822356257" fg:w="1452357"/><text x="14.9012%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20,307,760 samples, 0.36%)</title><rect x="14.3242%" y="1269" width="0.3618%" height="15" fill="rgb(247,160,36)" fg:x="804002358" fg:w="20307760"/><text x="14.5742%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,953,861 samples, 0.03%)</title><rect x="14.6512%" y="1253" width="0.0348%" height="15" fill="rgb(234,13,49)" fg:x="822356257" fg:w="1953861"/><text x="14.9012%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,953,861 samples, 0.03%)</title><rect x="14.6512%" y="1237" width="0.0348%" height="15" fill="rgb(234,122,0)" fg:x="822356257" fg:w="1953861"/><text x="14.9012%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,953,861 samples, 0.03%)</title><rect x="14.6512%" y="1221" width="0.0348%" height="15" fill="rgb(207,146,38)" fg:x="822356257" fg:w="1953861"/><text x="14.9012%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,953,861 samples, 0.03%)</title><rect x="14.6512%" y="1205" width="0.0348%" height="15" fill="rgb(207,177,25)" fg:x="822356257" fg:w="1953861"/><text x="14.9012%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,953,861 samples, 0.03%)</title><rect x="14.6512%" y="1189" width="0.0348%" height="15" fill="rgb(211,178,42)" fg:x="822356257" fg:w="1953861"/><text x="14.9012%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1205" width="0.0318%" height="15" fill="rgb(230,69,54)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1189" width="0.0318%" height="15" fill="rgb(214,135,41)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1173" width="0.0318%" height="15" fill="rgb(237,67,25)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1157" width="0.0318%" height="15" fill="rgb(222,189,50)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1141" width="0.0318%" height="15" fill="rgb(245,148,34)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1125" width="0.0318%" height="15" fill="rgb(222,29,6)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1109" width="0.0318%" height="15" fill="rgb(221,189,43)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1093" width="0.0318%" height="15" fill="rgb(207,36,27)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1077" width="0.0318%" height="15" fill="rgb(217,90,24)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1061" width="0.0318%" height="15" fill="rgb(224,66,35)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1045" width="0.0318%" height="15" fill="rgb(221,13,50)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1029" width="0.0318%" height="15" fill="rgb(236,68,49)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="1013" width="0.0318%" height="15" fill="rgb(229,146,28)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="997" width="0.0318%" height="15" fill="rgb(225,31,38)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="1007.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="981" width="0.0318%" height="15" fill="rgb(250,208,3)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="991.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,782,680 samples, 0.03%)</title><rect x="14.6860%" y="965" width="0.0318%" height="15" fill="rgb(246,54,23)" fg:x="824310118" fg:w="1782680"/><text x="14.9360%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26,560,660 samples, 0.47%)</title><rect x="14.2815%" y="1285" width="0.4732%" height="15" fill="rgb(243,76,11)" fg:x="801604982" fg:w="26560660"/><text x="14.5315%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,855,524 samples, 0.07%)</title><rect x="14.6860%" y="1269" width="0.0687%" height="15" fill="rgb(245,21,50)" fg:x="824310118" fg:w="3855524"/><text x="14.9360%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,855,524 samples, 0.07%)</title><rect x="14.6860%" y="1253" width="0.0687%" height="15" fill="rgb(228,9,43)" fg:x="824310118" fg:w="3855524"/><text x="14.9360%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,855,524 samples, 0.07%)</title><rect x="14.6860%" y="1237" width="0.0687%" height="15" fill="rgb(208,100,47)" fg:x="824310118" fg:w="3855524"/><text x="14.9360%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,855,524 samples, 0.07%)</title><rect x="14.6860%" y="1221" width="0.0687%" height="15" fill="rgb(232,26,8)" fg:x="824310118" fg:w="3855524"/><text x="14.9360%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,072,844 samples, 0.04%)</title><rect x="14.7177%" y="1205" width="0.0369%" height="15" fill="rgb(216,166,38)" fg:x="826092798" fg:w="2072844"/><text x="14.9677%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,072,844 samples, 0.04%)</title><rect x="14.7177%" y="1189" width="0.0369%" height="15" fill="rgb(251,202,51)" fg:x="826092798" fg:w="2072844"/><text x="14.9677%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,072,844 samples, 0.04%)</title><rect x="14.7177%" y="1173" width="0.0369%" height="15" fill="rgb(254,216,34)" fg:x="826092798" fg:w="2072844"/><text x="14.9677%" y="1183.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,072,844 samples, 0.04%)</title><rect x="14.7177%" y="1157" width="0.0369%" height="15" fill="rgb(251,32,27)" fg:x="826092798" fg:w="2072844"/><text x="14.9677%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,802,516 samples, 0.03%)</title><rect x="14.7765%" y="1205" width="0.0321%" height="15" fill="rgb(208,127,28)" fg:x="829393382" fg:w="1802516"/><text x="15.0265%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,802,516 samples, 0.03%)</title><rect x="14.7765%" y="1189" width="0.0321%" height="15" fill="rgb(224,137,22)" fg:x="829393382" fg:w="1802516"/><text x="15.0265%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,217,749 samples, 0.02%)</title><rect x="14.8087%" y="1189" width="0.0217%" height="15" fill="rgb(254,70,32)" fg:x="831195898" fg:w="1217749"/><text x="15.0587%" y="1199.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,217,749 samples, 0.02%)</title><rect x="14.8087%" y="1173" width="0.0217%" height="15" fill="rgb(229,75,37)" fg:x="831195898" fg:w="1217749"/><text x="15.0587%" y="1183.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,217,749 samples, 0.02%)</title><rect x="14.8087%" y="1157" width="0.0217%" height="15" fill="rgb(252,64,23)" fg:x="831195898" fg:w="1217749"/><text x="15.0587%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,855,401 samples, 0.05%)</title><rect x="14.8304%" y="1157" width="0.0509%" height="15" fill="rgb(232,162,48)" fg:x="832413647" fg:w="2855401"/><text x="15.0804%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,356,905 samples, 0.06%)</title><rect x="14.8304%" y="1173" width="0.0598%" height="15" fill="rgb(246,160,12)" fg:x="832413647" fg:w="3356905"/><text x="15.0804%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,741,954 samples, 0.08%)</title><rect x="14.8304%" y="1189" width="0.0845%" height="15" fill="rgb(247,166,0)" fg:x="832413647" fg:w="4741954"/><text x="15.0804%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,385,049 samples, 0.02%)</title><rect x="14.8902%" y="1173" width="0.0247%" height="15" fill="rgb(249,219,21)" fg:x="835770552" fg:w="1385049"/><text x="15.1402%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,385,049 samples, 0.02%)</title><rect x="14.8902%" y="1157" width="0.0247%" height="15" fill="rgb(205,209,3)" fg:x="835770552" fg:w="1385049"/><text x="15.1402%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,385,049 samples, 0.02%)</title><rect x="14.8902%" y="1141" width="0.0247%" height="15" fill="rgb(243,44,1)" fg:x="835770552" fg:w="1385049"/><text x="15.1402%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7,310,194 samples, 0.13%)</title><rect x="14.8087%" y="1205" width="0.1302%" height="15" fill="rgb(206,159,16)" fg:x="831195898" fg:w="7310194"/><text x="15.0587%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1189" width="0.0241%" height="15" fill="rgb(244,77,30)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1173" width="0.0241%" height="15" fill="rgb(218,69,12)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1157" width="0.0241%" height="15" fill="rgb(212,87,7)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1141" width="0.0241%" height="15" fill="rgb(245,114,25)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1125" width="0.0241%" height="15" fill="rgb(210,61,42)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1109" width="0.0241%" height="15" fill="rgb(211,52,33)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1093" width="0.0241%" height="15" fill="rgb(234,58,33)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1077" width="0.0241%" height="15" fill="rgb(220,115,36)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1061" width="0.0241%" height="15" fill="rgb(243,153,54)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1071.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1045" width="0.0241%" height="15" fill="rgb(251,47,18)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1029" width="0.0241%" height="15" fill="rgb(242,102,42)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="1013" width="0.0241%" height="15" fill="rgb(234,31,38)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="997" width="0.0241%" height="15" fill="rgb(221,117,51)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="1007.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="981" width="0.0241%" height="15" fill="rgb(212,20,18)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="965" width="0.0241%" height="15" fill="rgb(245,133,36)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="949" width="0.0241%" height="15" fill="rgb(212,6,19)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="933" width="0.0241%" height="15" fill="rgb(218,1,36)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="917" width="0.0241%" height="15" fill="rgb(246,84,54)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="901" width="0.0241%" height="15" fill="rgb(242,110,6)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="911.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,350,491 samples, 0.02%)</title><rect x="14.9148%" y="885" width="0.0241%" height="15" fill="rgb(214,47,5)" fg:x="837155601" fg:w="1350491"/><text x="15.1648%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11,657,651 samples, 0.21%)</title><rect x="14.7636%" y="1221" width="0.2077%" height="15" fill="rgb(218,159,25)" fg:x="828667146" fg:w="11657651"/><text x="15.0136%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,818,705 samples, 0.03%)</title><rect x="14.9389%" y="1205" width="0.0324%" height="15" fill="rgb(215,211,28)" fg:x="838506092" fg:w="1818705"/><text x="15.1889%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,317,201 samples, 0.02%)</title><rect x="14.9478%" y="1189" width="0.0235%" height="15" fill="rgb(238,59,32)" fg:x="839007596" fg:w="1317201"/><text x="15.1978%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,317,201 samples, 0.02%)</title><rect x="14.9478%" y="1173" width="0.0235%" height="15" fill="rgb(226,82,3)" fg:x="839007596" fg:w="1317201"/><text x="15.1978%" y="1183.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,317,201 samples, 0.02%)</title><rect x="14.9478%" y="1157" width="0.0235%" height="15" fill="rgb(240,164,32)" fg:x="839007596" fg:w="1317201"/><text x="15.1978%" y="1167.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,317,201 samples, 0.02%)</title><rect x="14.9478%" y="1141" width="0.0235%" height="15" fill="rgb(232,46,7)" fg:x="839007596" fg:w="1317201"/><text x="15.1978%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,889,069 samples, 0.03%)</title><rect x="14.9713%" y="1125" width="0.0337%" height="15" fill="rgb(229,129,53)" fg:x="840324797" fg:w="1889069"/><text x="15.2213%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,889,069 samples, 0.03%)</title><rect x="14.9713%" y="1109" width="0.0337%" height="15" fill="rgb(234,188,29)" fg:x="840324797" fg:w="1889069"/><text x="15.2213%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,357,795 samples, 0.06%)</title><rect x="14.9713%" y="1141" width="0.0598%" height="15" fill="rgb(246,141,4)" fg:x="840324797" fg:w="3357795"/><text x="15.2213%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,468,726 samples, 0.03%)</title><rect x="15.0050%" y="1125" width="0.0262%" height="15" fill="rgb(229,23,39)" fg:x="842213866" fg:w="1468726"/><text x="15.2550%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,468,726 samples, 0.03%)</title><rect x="15.0050%" y="1109" width="0.0262%" height="15" fill="rgb(206,12,3)" fg:x="842213866" fg:w="1468726"/><text x="15.2550%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (16,440,949 samples, 0.29%)</title><rect x="14.7547%" y="1269" width="0.2929%" height="15" fill="rgb(252,226,20)" fg:x="828165642" fg:w="16440949"/><text x="15.0047%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16,440,949 samples, 0.29%)</title><rect x="14.7547%" y="1253" width="0.2929%" height="15" fill="rgb(216,123,35)" fg:x="828165642" fg:w="16440949"/><text x="15.0047%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16,440,949 samples, 0.29%)</title><rect x="14.7547%" y="1237" width="0.2929%" height="15" fill="rgb(212,68,40)" fg:x="828165642" fg:w="16440949"/><text x="15.0047%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,281,794 samples, 0.08%)</title><rect x="14.9713%" y="1221" width="0.0763%" height="15" fill="rgb(254,125,32)" fg:x="840324797" fg:w="4281794"/><text x="15.2213%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,281,794 samples, 0.08%)</title><rect x="14.9713%" y="1205" width="0.0763%" height="15" fill="rgb(253,97,22)" fg:x="840324797" fg:w="4281794"/><text x="15.2213%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,281,794 samples, 0.08%)</title><rect x="14.9713%" y="1189" width="0.0763%" height="15" fill="rgb(241,101,14)" fg:x="840324797" fg:w="4281794"/><text x="15.2213%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,281,794 samples, 0.08%)</title><rect x="14.9713%" y="1173" width="0.0763%" height="15" fill="rgb(238,103,29)" fg:x="840324797" fg:w="4281794"/><text x="15.2213%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,281,794 samples, 0.08%)</title><rect x="14.9713%" y="1157" width="0.0763%" height="15" fill="rgb(233,195,47)" fg:x="840324797" fg:w="4281794"/><text x="15.2213%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (923,999 samples, 0.02%)</title><rect x="15.0311%" y="1141" width="0.0165%" height="15" fill="rgb(246,218,30)" fg:x="843682592" fg:w="923999"/><text x="15.2811%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (923,999 samples, 0.02%)</title><rect x="15.0311%" y="1125" width="0.0165%" height="15" fill="rgb(219,145,47)" fg:x="843682592" fg:w="923999"/><text x="15.2811%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (923,999 samples, 0.02%)</title><rect x="15.0311%" y="1109" width="0.0165%" height="15" fill="rgb(243,12,26)" fg:x="843682592" fg:w="923999"/><text x="15.2811%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (49,408,417 samples, 0.88%)</title><rect x="14.1954%" y="1301" width="0.8803%" height="15" fill="rgb(214,87,16)" fg:x="796773765" fg:w="49408417"/><text x="14.4454%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18,016,540 samples, 0.32%)</title><rect x="14.7547%" y="1285" width="0.3210%" height="15" fill="rgb(208,99,42)" fg:x="828165642" fg:w="18016540"/><text x="15.0047%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,575,591 samples, 0.03%)</title><rect x="15.0476%" y="1269" width="0.0281%" height="15" fill="rgb(253,99,2)" fg:x="844606591" fg:w="1575591"/><text x="15.2976%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,575,591 samples, 0.03%)</title><rect x="15.0476%" y="1253" width="0.0281%" height="15" fill="rgb(220,168,23)" fg:x="844606591" fg:w="1575591"/><text x="15.2976%" y="1263.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,575,591 samples, 0.03%)</title><rect x="15.0476%" y="1237" width="0.0281%" height="15" fill="rgb(242,38,24)" fg:x="844606591" fg:w="1575591"/><text x="15.2976%" y="1247.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,575,591 samples, 0.03%)</title><rect x="15.0476%" y="1221" width="0.0281%" height="15" fill="rgb(225,182,9)" fg:x="844606591" fg:w="1575591"/><text x="15.2976%" y="1231.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (771,326 samples, 0.01%)</title><rect x="15.0757%" y="1189" width="0.0137%" height="15" fill="rgb(243,178,37)" fg:x="846182182" fg:w="771326"/><text x="15.3257%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,674,953 samples, 0.03%)</title><rect x="15.0983%" y="1173" width="0.0298%" height="15" fill="rgb(232,139,19)" fg:x="847455012" fg:w="1674953"/><text x="15.3483%" y="1183.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,674,953 samples, 0.03%)</title><rect x="15.0983%" y="1157" width="0.0298%" height="15" fill="rgb(225,201,24)" fg:x="847455012" fg:w="1674953"/><text x="15.3483%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,512,710 samples, 0.06%)</title><rect x="15.0757%" y="1205" width="0.0626%" height="15" fill="rgb(221,47,46)" fg:x="846182182" fg:w="3512710"/><text x="15.3257%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,239,880 samples, 0.04%)</title><rect x="15.0983%" y="1189" width="0.0399%" height="15" fill="rgb(249,23,13)" fg:x="847455012" fg:w="2239880"/><text x="15.3483%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (564,927 samples, 0.01%)</title><rect x="15.1282%" y="1173" width="0.0101%" height="15" fill="rgb(219,9,5)" fg:x="849129965" fg:w="564927"/><text x="15.3782%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (564,927 samples, 0.01%)</title><rect x="15.1282%" y="1157" width="0.0101%" height="15" fill="rgb(254,171,16)" fg:x="849129965" fg:w="564927"/><text x="15.3782%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (564,927 samples, 0.01%)</title><rect x="15.1282%" y="1141" width="0.0101%" height="15" fill="rgb(230,171,20)" fg:x="849129965" fg:w="564927"/><text x="15.3782%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,707,566 samples, 0.08%)</title><rect x="15.0757%" y="1221" width="0.0839%" height="15" fill="rgb(210,71,41)" fg:x="846182182" fg:w="4707566"/><text x="15.3257%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1205" width="0.0213%" height="15" fill="rgb(206,173,20)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1189" width="0.0213%" height="15" fill="rgb(233,88,34)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1173" width="0.0213%" height="15" fill="rgb(223,209,46)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1157" width="0.0213%" height="15" fill="rgb(250,43,18)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1141" width="0.0213%" height="15" fill="rgb(208,13,10)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1125" width="0.0213%" height="15" fill="rgb(212,200,36)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1109" width="0.0213%" height="15" fill="rgb(225,90,30)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1093" width="0.0213%" height="15" fill="rgb(236,182,39)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1103.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1077" width="0.0213%" height="15" fill="rgb(212,144,35)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1087.50"></text></g><g><title>[libc.so.6] (1,194,856 samples, 0.02%)</title><rect x="15.1382%" y="1061" width="0.0213%" height="15" fill="rgb(228,63,44)" fg:x="849694892" fg:w="1194856"/><text x="15.3882%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,209,070 samples, 0.09%)</title><rect x="15.0757%" y="1237" width="0.0928%" height="15" fill="rgb(228,109,6)" fg:x="846182182" fg:w="5209070"/><text x="15.3257%" y="1247.50"></text></g><g><title>cfree (886,656 samples, 0.02%)</title><rect x="15.1774%" y="1109" width="0.0158%" height="15" fill="rgb(238,117,24)" fg:x="851892756" fg:w="886656"/><text x="15.4274%" y="1119.50"></text></g><g><title>[libc.so.6] (886,656 samples, 0.02%)</title><rect x="15.1774%" y="1093" width="0.0158%" height="15" fill="rgb(242,26,26)" fg:x="851892756" fg:w="886656"/><text x="15.4274%" y="1103.50"></text></g><g><title>[libc.so.6] (886,656 samples, 0.02%)</title><rect x="15.1774%" y="1077" width="0.0158%" height="15" fill="rgb(221,92,48)" fg:x="851892756" fg:w="886656"/><text x="15.4274%" y="1087.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,951,655 samples, 0.07%)</title><rect x="15.1774%" y="1125" width="0.0704%" height="15" fill="rgb(209,209,32)" fg:x="851892756" fg:w="3951655"/><text x="15.4274%" y="1135.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,064,999 samples, 0.05%)</title><rect x="15.1932%" y="1109" width="0.0546%" height="15" fill="rgb(221,70,22)" fg:x="852779412" fg:w="3064999"/><text x="15.4432%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,969,828 samples, 0.09%)</title><rect x="15.1685%" y="1173" width="0.0885%" height="15" fill="rgb(248,145,5)" fg:x="851391252" fg:w="4969828"/><text x="15.4185%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,468,324 samples, 0.08%)</title><rect x="15.1774%" y="1157" width="0.0796%" height="15" fill="rgb(226,116,26)" fg:x="851892756" fg:w="4468324"/><text x="15.4274%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,468,324 samples, 0.08%)</title><rect x="15.1774%" y="1141" width="0.0796%" height="15" fill="rgb(244,5,17)" fg:x="851892756" fg:w="4468324"/><text x="15.4274%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,542,890 samples, 0.12%)</title><rect x="15.1685%" y="1221" width="0.1166%" height="15" fill="rgb(252,159,33)" fg:x="851391252" fg:w="6542890"/><text x="15.4185%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,542,890 samples, 0.12%)</title><rect x="15.1685%" y="1205" width="0.1166%" height="15" fill="rgb(206,71,0)" fg:x="851391252" fg:w="6542890"/><text x="15.4185%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,542,890 samples, 0.12%)</title><rect x="15.1685%" y="1189" width="0.1166%" height="15" fill="rgb(233,118,54)" fg:x="851391252" fg:w="6542890"/><text x="15.4185%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,573,062 samples, 0.03%)</title><rect x="15.2570%" y="1173" width="0.0280%" height="15" fill="rgb(234,83,48)" fg:x="856361080" fg:w="1573062"/><text x="15.5070%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,573,062 samples, 0.03%)</title><rect x="15.2570%" y="1157" width="0.0280%" height="15" fill="rgb(228,3,54)" fg:x="856361080" fg:w="1573062"/><text x="15.5070%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,573,062 samples, 0.03%)</title><rect x="15.2570%" y="1141" width="0.0280%" height="15" fill="rgb(226,155,13)" fg:x="856361080" fg:w="1573062"/><text x="15.5070%" y="1151.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,573,062 samples, 0.03%)</title><rect x="15.2570%" y="1125" width="0.0280%" height="15" fill="rgb(241,28,37)" fg:x="856361080" fg:w="1573062"/><text x="15.5070%" y="1135.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,573,062 samples, 0.03%)</title><rect x="15.2570%" y="1109" width="0.0280%" height="15" fill="rgb(233,93,10)" fg:x="856361080" fg:w="1573062"/><text x="15.5070%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (63,980,043 samples, 1.14%)</title><rect x="14.1786%" y="1349" width="1.1399%" height="15" fill="rgb(225,113,19)" fg:x="795832363" fg:w="63980043"/><text x="14.4286%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (63,540,145 samples, 1.13%)</title><rect x="14.1865%" y="1333" width="1.1320%" height="15" fill="rgb(241,2,18)" fg:x="796272261" fg:w="63540145"/><text x="14.4365%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (63,540,145 samples, 1.13%)</title><rect x="14.1865%" y="1317" width="1.1320%" height="15" fill="rgb(228,207,21)" fg:x="796272261" fg:w="63540145"/><text x="14.4365%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13,630,224 samples, 0.24%)</title><rect x="15.0757%" y="1301" width="0.2428%" height="15" fill="rgb(213,211,35)" fg:x="846182182" fg:w="13630224"/><text x="15.3257%" y="1311.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13,630,224 samples, 0.24%)</title><rect x="15.0757%" y="1285" width="0.2428%" height="15" fill="rgb(209,83,10)" fg:x="846182182" fg:w="13630224"/><text x="15.3257%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13,630,224 samples, 0.24%)</title><rect x="15.0757%" y="1269" width="0.2428%" height="15" fill="rgb(209,164,1)" fg:x="846182182" fg:w="13630224"/><text x="15.3257%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13,630,224 samples, 0.24%)</title><rect x="15.0757%" y="1253" width="0.2428%" height="15" fill="rgb(213,184,43)" fg:x="846182182" fg:w="13630224"/><text x="15.3257%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8,421,154 samples, 0.15%)</title><rect x="15.1685%" y="1237" width="0.1500%" height="15" fill="rgb(231,61,34)" fg:x="851391252" fg:w="8421154"/><text x="15.4185%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,878,264 samples, 0.03%)</title><rect x="15.2850%" y="1221" width="0.0335%" height="15" fill="rgb(235,75,3)" fg:x="857934142" fg:w="1878264"/><text x="15.5350%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,878,264 samples, 0.03%)</title><rect x="15.2850%" y="1205" width="0.0335%" height="15" fill="rgb(220,106,47)" fg:x="857934142" fg:w="1878264"/><text x="15.5350%" y="1215.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,878,264 samples, 0.03%)</title><rect x="15.2850%" y="1189" width="0.0335%" height="15" fill="rgb(210,196,33)" fg:x="857934142" fg:w="1878264"/><text x="15.5350%" y="1199.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,878,264 samples, 0.03%)</title><rect x="15.2850%" y="1173" width="0.0335%" height="15" fill="rgb(229,154,42)" fg:x="857934142" fg:w="1878264"/><text x="15.5350%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (709,107,330 samples, 12.63%)</title><rect x="2.7178%" y="1381" width="12.6335%" height="15" fill="rgb(228,114,26)" fg:x="152544772" fg:w="709107330"/><text x="2.9678%" y="1391.50">rayon_core::join::j..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (65,819,739 samples, 1.17%)</title><rect x="14.1786%" y="1365" width="1.1727%" height="15" fill="rgb(208,144,1)" fg:x="795832363" fg:w="65819739"/><text x="14.4286%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,346,864 samples, 0.02%)</title><rect x="15.3273%" y="1349" width="0.0240%" height="15" fill="rgb(239,112,37)" fg:x="860305238" fg:w="1346864"/><text x="15.5773%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,346,864 samples, 0.02%)</title><rect x="15.3273%" y="1333" width="0.0240%" height="15" fill="rgb(210,96,50)" fg:x="860305238" fg:w="1346864"/><text x="15.5773%" y="1343.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,346,864 samples, 0.02%)</title><rect x="15.3273%" y="1317" width="0.0240%" height="15" fill="rgb(222,178,2)" fg:x="860305238" fg:w="1346864"/><text x="15.5773%" y="1327.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,346,864 samples, 0.02%)</title><rect x="15.3273%" y="1301" width="0.0240%" height="15" fill="rgb(226,74,18)" fg:x="860305238" fg:w="1346864"/><text x="15.5773%" y="1311.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,480,542 samples, 0.03%)</title><rect x="15.4016%" y="1285" width="0.0264%" height="15" fill="rgb(225,67,54)" fg:x="864479374" fg:w="1480542"/><text x="15.6516%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,982,046 samples, 0.04%)</title><rect x="15.4016%" y="1301" width="0.0353%" height="15" fill="rgb(251,92,32)" fg:x="864479374" fg:w="1982046"/><text x="15.6516%" y="1311.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,318,223 samples, 0.04%)</title><rect x="15.4370%" y="1269" width="0.0413%" height="15" fill="rgb(228,149,22)" fg:x="866461420" fg:w="2318223"/><text x="15.6870%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,819,727 samples, 0.05%)</title><rect x="15.4370%" y="1285" width="0.0502%" height="15" fill="rgb(243,54,13)" fg:x="866461420" fg:w="2819727"/><text x="15.6870%" y="1295.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (955,425 samples, 0.02%)</title><rect x="15.5040%" y="1253" width="0.0170%" height="15" fill="rgb(243,180,28)" fg:x="870223860" fg:w="955425"/><text x="15.7540%" y="1263.50"></text></g><g><title>malloc (955,425 samples, 0.02%)</title><rect x="15.5040%" y="1237" width="0.0170%" height="15" fill="rgb(208,167,24)" fg:x="870223860" fg:w="955425"/><text x="15.7540%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (6,005,384 samples, 0.11%)</title><rect x="15.5210%" y="1253" width="0.1070%" height="15" fill="rgb(245,73,45)" fg:x="871179285" fg:w="6005384"/><text x="15.7710%" y="1263.50"></text></g><g><title>[libc.so.6] (1,014,060 samples, 0.02%)</title><rect x="15.6280%" y="1253" width="0.0181%" height="15" fill="rgb(237,203,48)" fg:x="877184669" fg:w="1014060"/><text x="15.8780%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (10,181,369 samples, 0.18%)</title><rect x="15.5040%" y="1269" width="0.1814%" height="15" fill="rgb(211,197,16)" fg:x="870223860" fg:w="10181369"/><text x="15.7540%" y="1279.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,206,500 samples, 0.04%)</title><rect x="15.6461%" y="1253" width="0.0393%" height="15" fill="rgb(243,99,51)" fg:x="878198729" fg:w="2206500"/><text x="15.8961%" y="1263.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,206,500 samples, 0.04%)</title><rect x="15.6461%" y="1237" width="0.0393%" height="15" fill="rgb(215,123,29)" fg:x="878198729" fg:w="2206500"/><text x="15.8961%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,237,527 samples, 0.06%)</title><rect x="15.6854%" y="1237" width="0.0577%" height="15" fill="rgb(239,186,37)" fg:x="880405229" fg:w="3237527"/><text x="15.9354%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (8,066,148 samples, 0.14%)</title><rect x="15.6854%" y="1253" width="0.1437%" height="15" fill="rgb(252,136,39)" fg:x="880405229" fg:w="8066148"/><text x="15.9354%" y="1263.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (4,437,754 samples, 0.08%)</title><rect x="15.7500%" y="1237" width="0.0791%" height="15" fill="rgb(223,213,32)" fg:x="884033623" fg:w="4437754"/><text x="16.0000%" y="1247.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (4,437,754 samples, 0.08%)</title><rect x="15.7500%" y="1221" width="0.0791%" height="15" fill="rgb(233,115,5)" fg:x="884033623" fg:w="4437754"/><text x="16.0000%" y="1231.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (863,395 samples, 0.02%)</title><rect x="15.8291%" y="1221" width="0.0154%" height="15" fill="rgb(207,226,44)" fg:x="888471377" fg:w="863395"/><text x="16.0791%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,749,005 samples, 0.05%)</title><rect x="15.8445%" y="1221" width="0.0490%" height="15" fill="rgb(208,126,0)" fg:x="889334772" fg:w="2749005"/><text x="16.0945%" y="1231.50"></text></g><g><title>[libc.so.6] (1,001,206 samples, 0.02%)</title><rect x="15.8934%" y="1221" width="0.0178%" height="15" fill="rgb(244,66,21)" fg:x="892083777" fg:w="1001206"/><text x="16.1434%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (6,763,987 samples, 0.12%)</title><rect x="15.8291%" y="1237" width="0.1205%" height="15" fill="rgb(222,97,12)" fg:x="888471377" fg:w="6763987"/><text x="16.0791%" y="1247.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,150,381 samples, 0.04%)</title><rect x="15.9113%" y="1221" width="0.0383%" height="15" fill="rgb(219,213,19)" fg:x="893084983" fg:w="2150381"/><text x="16.1613%" y="1231.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,150,381 samples, 0.04%)</title><rect x="15.9113%" y="1205" width="0.0383%" height="15" fill="rgb(252,169,30)" fg:x="893084983" fg:w="2150381"/><text x="16.1613%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,863,010 samples, 0.07%)</title><rect x="15.9496%" y="1237" width="0.0688%" height="15" fill="rgb(206,32,51)" fg:x="895235364" fg:w="3863010"/><text x="16.1996%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,361,506 samples, 0.06%)</title><rect x="15.9585%" y="1221" width="0.0599%" height="15" fill="rgb(250,172,42)" fg:x="895736868" fg:w="3361506"/><text x="16.2085%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,361,506 samples, 0.06%)</title><rect x="15.9585%" y="1205" width="0.0599%" height="15" fill="rgb(209,34,43)" fg:x="895736868" fg:w="3361506"/><text x="16.2085%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,361,506 samples, 0.06%)</title><rect x="15.9585%" y="1189" width="0.0599%" height="15" fill="rgb(223,11,35)" fg:x="895736868" fg:w="3361506"/><text x="16.2085%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22,516,848 samples, 0.40%)</title><rect x="15.6854%" y="1269" width="0.4012%" height="15" fill="rgb(251,219,26)" fg:x="880405229" fg:w="22516848"/><text x="15.9354%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14,450,700 samples, 0.26%)</title><rect x="15.8291%" y="1253" width="0.2575%" height="15" fill="rgb(231,119,3)" fg:x="888471377" fg:w="14450700"/><text x="16.0791%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1237" width="0.0681%" height="15" fill="rgb(216,97,11)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1221" width="0.0681%" height="15" fill="rgb(223,59,9)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1205" width="0.0681%" height="15" fill="rgb(233,93,31)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1189" width="0.0681%" height="15" fill="rgb(239,81,33)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1173" width="0.0681%" height="15" fill="rgb(213,120,34)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1157" width="0.0681%" height="15" fill="rgb(243,49,53)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1141" width="0.0681%" height="15" fill="rgb(247,216,33)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1125" width="0.0681%" height="15" fill="rgb(226,26,14)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1109" width="0.0681%" height="15" fill="rgb(215,49,53)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1093" width="0.0681%" height="15" fill="rgb(245,162,40)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1077" width="0.0681%" height="15" fill="rgb(229,68,17)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1087.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1061" width="0.0681%" height="15" fill="rgb(213,182,10)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1071.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1045" width="0.0681%" height="15" fill="rgb(245,125,30)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1055.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,823,703 samples, 0.07%)</title><rect x="16.0184%" y="1029" width="0.0681%" height="15" fill="rgb(232,202,2)" fg:x="899098374" fg:w="3823703"/><text x="16.2684%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (35,164,614 samples, 0.63%)</title><rect x="15.4872%" y="1285" width="0.6265%" height="15" fill="rgb(237,140,51)" fg:x="869281147" fg:w="35164614"/><text x="15.7372%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1269" width="0.0271%" height="15" fill="rgb(236,157,25)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1253" width="0.0271%" height="15" fill="rgb(219,209,0)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1237" width="0.0271%" height="15" fill="rgb(240,116,54)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1221" width="0.0271%" height="15" fill="rgb(216,10,36)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1205" width="0.0271%" height="15" fill="rgb(222,72,44)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1189" width="0.0271%" height="15" fill="rgb(232,159,9)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1173" width="0.0271%" height="15" fill="rgb(210,39,32)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1157" width="0.0271%" height="15" fill="rgb(216,194,45)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,523,684 samples, 0.03%)</title><rect x="16.0865%" y="1141" width="0.0271%" height="15" fill="rgb(218,18,35)" fg:x="902922077" fg:w="1523684"/><text x="16.3365%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,489,258 samples, 0.04%)</title><rect x="16.1137%" y="1173" width="0.0443%" height="15" fill="rgb(207,83,51)" fg:x="904445761" fg:w="2489258"/><text x="16.3637%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,489,258 samples, 0.04%)</title><rect x="16.1137%" y="1157" width="0.0443%" height="15" fill="rgb(225,63,43)" fg:x="904445761" fg:w="2489258"/><text x="16.3637%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,042,277 samples, 0.09%)</title><rect x="16.1137%" y="1221" width="0.0898%" height="15" fill="rgb(207,57,36)" fg:x="904445761" fg:w="5042277"/><text x="16.3637%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,042,277 samples, 0.09%)</title><rect x="16.1137%" y="1205" width="0.0898%" height="15" fill="rgb(216,99,33)" fg:x="904445761" fg:w="5042277"/><text x="16.3637%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,042,277 samples, 0.09%)</title><rect x="16.1137%" y="1189" width="0.0898%" height="15" fill="rgb(225,42,16)" fg:x="904445761" fg:w="5042277"/><text x="16.3637%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,553,019 samples, 0.05%)</title><rect x="16.1580%" y="1173" width="0.0455%" height="15" fill="rgb(220,201,45)" fg:x="906935019" fg:w="2553019"/><text x="16.4080%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,553,019 samples, 0.05%)</title><rect x="16.1580%" y="1157" width="0.0455%" height="15" fill="rgb(225,33,4)" fg:x="906935019" fg:w="2553019"/><text x="16.4080%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,553,019 samples, 0.05%)</title><rect x="16.1580%" y="1141" width="0.0455%" height="15" fill="rgb(224,33,50)" fg:x="906935019" fg:w="2553019"/><text x="16.4080%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4,535,604 samples, 0.08%)</title><rect x="16.2035%" y="1189" width="0.0808%" height="15" fill="rgb(246,198,51)" fg:x="909488038" fg:w="4535604"/><text x="16.4535%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (48,561,806 samples, 0.87%)</title><rect x="15.4370%" y="1301" width="0.8652%" height="15" fill="rgb(205,22,4)" fg:x="866461420" fg:w="48561806"/><text x="15.6870%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10,577,465 samples, 0.19%)</title><rect x="16.1137%" y="1285" width="0.1884%" height="15" fill="rgb(206,3,8)" fg:x="904445761" fg:w="10577465"/><text x="16.3637%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10,577,465 samples, 0.19%)</title><rect x="16.1137%" y="1269" width="0.1884%" height="15" fill="rgb(251,23,15)" fg:x="904445761" fg:w="10577465"/><text x="16.3637%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10,577,465 samples, 0.19%)</title><rect x="16.1137%" y="1253" width="0.1884%" height="15" fill="rgb(252,88,28)" fg:x="904445761" fg:w="10577465"/><text x="16.3637%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10,577,465 samples, 0.19%)</title><rect x="16.1137%" y="1237" width="0.1884%" height="15" fill="rgb(212,127,14)" fg:x="904445761" fg:w="10577465"/><text x="16.3637%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5,535,188 samples, 0.10%)</title><rect x="16.2035%" y="1221" width="0.0986%" height="15" fill="rgb(247,145,37)" fg:x="909488038" fg:w="5535188"/><text x="16.4535%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,535,188 samples, 0.10%)</title><rect x="16.2035%" y="1205" width="0.0986%" height="15" fill="rgb(209,117,53)" fg:x="909488038" fg:w="5535188"/><text x="16.4535%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1189" width="0.0178%" height="15" fill="rgb(212,90,42)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1173" width="0.0178%" height="15" fill="rgb(218,164,37)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1157" width="0.0178%" height="15" fill="rgb(246,65,34)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1141" width="0.0178%" height="15" fill="rgb(231,100,33)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1125" width="0.0178%" height="15" fill="rgb(228,126,14)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1109" width="0.0178%" height="15" fill="rgb(215,173,21)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1093" width="0.0178%" height="15" fill="rgb(210,6,40)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1077" width="0.0178%" height="15" fill="rgb(212,48,18)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1061" width="0.0178%" height="15" fill="rgb(230,214,11)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1045" width="0.0178%" height="15" fill="rgb(254,105,39)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1029" width="0.0178%" height="15" fill="rgb(245,158,5)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1039.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (999,584 samples, 0.02%)</title><rect x="16.2843%" y="1013" width="0.0178%" height="15" fill="rgb(249,208,11)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (999,584 samples, 0.02%)</title><rect x="16.2843%" y="997" width="0.0178%" height="15" fill="rgb(210,39,28)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="981" width="0.0178%" height="15" fill="rgb(211,56,53)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="965" width="0.0178%" height="15" fill="rgb(226,201,30)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="949" width="0.0178%" height="15" fill="rgb(239,101,34)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="933" width="0.0178%" height="15" fill="rgb(226,209,5)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="917" width="0.0178%" height="15" fill="rgb(250,105,47)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (999,584 samples, 0.02%)</title><rect x="16.2843%" y="901" width="0.0178%" height="15" fill="rgb(230,72,3)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="911.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (999,584 samples, 0.02%)</title><rect x="16.2843%" y="885" width="0.0178%" height="15" fill="rgb(232,218,39)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="895.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (999,584 samples, 0.02%)</title><rect x="16.2843%" y="869" width="0.0178%" height="15" fill="rgb(248,166,6)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="879.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (999,584 samples, 0.02%)</title><rect x="16.2843%" y="853" width="0.0178%" height="15" fill="rgb(247,89,20)" fg:x="914023642" fg:w="999584"/><text x="16.5343%" y="863.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (700,555 samples, 0.01%)</title><rect x="16.3021%" y="1221" width="0.0125%" height="15" fill="rgb(248,130,54)" fg:x="915023226" fg:w="700555"/><text x="16.5521%" y="1231.50"></text></g><g><title>[libc.so.6] (700,555 samples, 0.01%)</title><rect x="16.3021%" y="1205" width="0.0125%" height="15" fill="rgb(234,196,4)" fg:x="915023226" fg:w="700555"/><text x="16.5521%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,131,119 samples, 0.04%)</title><rect x="16.3146%" y="1205" width="0.0380%" height="15" fill="rgb(250,143,31)" fg:x="915723781" fg:w="2131119"/><text x="16.5646%" y="1215.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,131,119 samples, 0.04%)</title><rect x="16.3146%" y="1189" width="0.0380%" height="15" fill="rgb(211,110,34)" fg:x="915723781" fg:w="2131119"/><text x="16.5646%" y="1199.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,131,119 samples, 0.04%)</title><rect x="16.3146%" y="1173" width="0.0380%" height="15" fill="rgb(215,124,48)" fg:x="915723781" fg:w="2131119"/><text x="16.5646%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,583,793 samples, 0.05%)</title><rect x="16.3526%" y="1189" width="0.0460%" height="15" fill="rgb(216,46,13)" fg:x="917854900" fg:w="2583793"/><text x="16.6026%" y="1199.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,583,793 samples, 0.05%)</title><rect x="16.3526%" y="1173" width="0.0460%" height="15" fill="rgb(205,184,25)" fg:x="917854900" fg:w="2583793"/><text x="16.6026%" y="1183.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,583,793 samples, 0.05%)</title><rect x="16.3526%" y="1157" width="0.0460%" height="15" fill="rgb(228,1,10)" fg:x="917854900" fg:w="2583793"/><text x="16.6026%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (766,167 samples, 0.01%)</title><rect x="16.3986%" y="1173" width="0.0137%" height="15" fill="rgb(213,116,27)" fg:x="920438693" fg:w="766167"/><text x="16.6486%" y="1183.50"></text></g><g><title>[libc.so.6] (766,167 samples, 0.01%)</title><rect x="16.3986%" y="1157" width="0.0137%" height="15" fill="rgb(241,95,50)" fg:x="920438693" fg:w="766167"/><text x="16.6486%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,267,671 samples, 0.02%)</title><rect x="16.3986%" y="1189" width="0.0226%" height="15" fill="rgb(238,48,32)" fg:x="920438693" fg:w="1267671"/><text x="16.6486%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,300,665 samples, 0.08%)</title><rect x="16.3526%" y="1205" width="0.0766%" height="15" fill="rgb(235,113,49)" fg:x="917854900" fg:w="4300665"/><text x="16.6026%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (922,960 samples, 0.02%)</title><rect x="16.4292%" y="1173" width="0.0164%" height="15" fill="rgb(205,127,43)" fg:x="922155565" fg:w="922960"/><text x="16.6792%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (922,960 samples, 0.02%)</title><rect x="16.4292%" y="1157" width="0.0164%" height="15" fill="rgb(250,162,2)" fg:x="922155565" fg:w="922960"/><text x="16.6792%" y="1167.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (922,960 samples, 0.02%)</title><rect x="16.4292%" y="1141" width="0.0164%" height="15" fill="rgb(220,13,41)" fg:x="922155565" fg:w="922960"/><text x="16.6792%" y="1151.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (922,960 samples, 0.02%)</title><rect x="16.4292%" y="1125" width="0.0164%" height="15" fill="rgb(249,221,25)" fg:x="922155565" fg:w="922960"/><text x="16.6792%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,187,157 samples, 0.15%)</title><rect x="16.3146%" y="1221" width="0.1459%" height="15" fill="rgb(215,208,19)" fg:x="915723781" fg:w="8187157"/><text x="16.5646%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,755,373 samples, 0.03%)</title><rect x="16.4292%" y="1205" width="0.0313%" height="15" fill="rgb(236,175,2)" fg:x="922155565" fg:w="1755373"/><text x="16.6792%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,755,373 samples, 0.03%)</title><rect x="16.4292%" y="1189" width="0.0313%" height="15" fill="rgb(241,52,2)" fg:x="922155565" fg:w="1755373"/><text x="16.6792%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1173" width="0.0148%" height="15" fill="rgb(248,140,14)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1157" width="0.0148%" height="15" fill="rgb(253,22,42)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1141" width="0.0148%" height="15" fill="rgb(234,61,47)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1125" width="0.0148%" height="15" fill="rgb(208,226,15)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1109" width="0.0148%" height="15" fill="rgb(217,221,4)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1093" width="0.0148%" height="15" fill="rgb(212,174,34)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1077" width="0.0148%" height="15" fill="rgb(253,83,4)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1061" width="0.0148%" height="15" fill="rgb(250,195,49)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1045" width="0.0148%" height="15" fill="rgb(241,192,25)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1029" width="0.0148%" height="15" fill="rgb(208,124,10)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="1013" width="0.0148%" height="15" fill="rgb(222,33,0)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (832,413 samples, 0.01%)</title><rect x="16.4456%" y="997" width="0.0148%" height="15" fill="rgb(234,209,28)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="1007.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (832,413 samples, 0.01%)</title><rect x="16.4456%" y="981" width="0.0148%" height="15" fill="rgb(224,11,23)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="991.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (832,413 samples, 0.01%)</title><rect x="16.4456%" y="965" width="0.0148%" height="15" fill="rgb(232,99,1)" fg:x="923078525" fg:w="832413"/><text x="16.6956%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,389,216 samples, 0.17%)</title><rect x="16.3021%" y="1237" width="0.1673%" height="15" fill="rgb(237,95,45)" fg:x="915023226" fg:w="9389216"/><text x="16.5521%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,202,342 samples, 0.02%)</title><rect x="16.4694%" y="1125" width="0.0214%" height="15" fill="rgb(208,109,11)" fg:x="924412442" fg:w="1202342"/><text x="16.7194%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,202,342 samples, 0.02%)</title><rect x="16.4694%" y="1109" width="0.0214%" height="15" fill="rgb(216,190,48)" fg:x="924412442" fg:w="1202342"/><text x="16.7194%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,709,456 samples, 0.03%)</title><rect x="16.4694%" y="1173" width="0.0305%" height="15" fill="rgb(251,171,36)" fg:x="924412442" fg:w="1709456"/><text x="16.7194%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,709,456 samples, 0.03%)</title><rect x="16.4694%" y="1157" width="0.0305%" height="15" fill="rgb(230,62,22)" fg:x="924412442" fg:w="1709456"/><text x="16.7194%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,709,456 samples, 0.03%)</title><rect x="16.4694%" y="1141" width="0.0305%" height="15" fill="rgb(225,114,35)" fg:x="924412442" fg:w="1709456"/><text x="16.7194%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11,600,176 samples, 0.21%)</title><rect x="16.3021%" y="1285" width="0.2067%" height="15" fill="rgb(215,118,42)" fg:x="915023226" fg:w="11600176"/><text x="16.5521%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11,600,176 samples, 0.21%)</title><rect x="16.3021%" y="1269" width="0.2067%" height="15" fill="rgb(243,119,21)" fg:x="915023226" fg:w="11600176"/><text x="16.5521%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11,600,176 samples, 0.21%)</title><rect x="16.3021%" y="1253" width="0.2067%" height="15" fill="rgb(252,177,53)" fg:x="915023226" fg:w="11600176"/><text x="16.5521%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,210,960 samples, 0.04%)</title><rect x="16.4694%" y="1237" width="0.0394%" height="15" fill="rgb(237,209,29)" fg:x="924412442" fg:w="2210960"/><text x="16.7194%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,210,960 samples, 0.04%)</title><rect x="16.4694%" y="1221" width="0.0394%" height="15" fill="rgb(212,65,23)" fg:x="924412442" fg:w="2210960"/><text x="16.7194%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,210,960 samples, 0.04%)</title><rect x="16.4694%" y="1205" width="0.0394%" height="15" fill="rgb(230,222,46)" fg:x="924412442" fg:w="2210960"/><text x="16.7194%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,210,960 samples, 0.04%)</title><rect x="16.4694%" y="1189" width="0.0394%" height="15" fill="rgb(215,135,32)" fg:x="924412442" fg:w="2210960"/><text x="16.7194%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (63,238,881 samples, 1.13%)</title><rect x="15.4016%" y="1317" width="1.1267%" height="15" fill="rgb(246,101,22)" fg:x="864479374" fg:w="63238881"/><text x="15.6516%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12,695,029 samples, 0.23%)</title><rect x="16.3021%" y="1301" width="0.2262%" height="15" fill="rgb(206,107,13)" fg:x="915023226" fg:w="12695029"/><text x="16.5521%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,094,853 samples, 0.02%)</title><rect x="16.5088%" y="1285" width="0.0195%" height="15" fill="rgb(250,100,44)" fg:x="926623402" fg:w="1094853"/><text x="16.7588%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,094,853 samples, 0.02%)</title><rect x="16.5088%" y="1269" width="0.0195%" height="15" fill="rgb(231,147,38)" fg:x="926623402" fg:w="1094853"/><text x="16.7588%" y="1279.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,094,853 samples, 0.02%)</title><rect x="16.5088%" y="1253" width="0.0195%" height="15" fill="rgb(229,8,40)" fg:x="926623402" fg:w="1094853"/><text x="16.7588%" y="1263.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,094,853 samples, 0.02%)</title><rect x="16.5088%" y="1237" width="0.0195%" height="15" fill="rgb(221,135,30)" fg:x="926623402" fg:w="1094853"/><text x="16.7588%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,756,638 samples, 0.03%)</title><rect x="16.6059%" y="1253" width="0.0313%" height="15" fill="rgb(249,193,18)" fg:x="932074743" fg:w="1756638"/><text x="16.8559%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,756,638 samples, 0.03%)</title><rect x="16.6059%" y="1237" width="0.0313%" height="15" fill="rgb(209,133,39)" fg:x="932074743" fg:w="1756638"/><text x="16.8559%" y="1247.50"></text></g><g><title>cfree (2,038,808 samples, 0.04%)</title><rect x="16.6372%" y="1221" width="0.0363%" height="15" fill="rgb(232,100,14)" fg:x="933831381" fg:w="2038808"/><text x="16.8872%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,540,312 samples, 0.05%)</title><rect x="16.6372%" y="1237" width="0.0453%" height="15" fill="rgb(224,185,1)" fg:x="933831381" fg:w="2540312"/><text x="16.8872%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,203,740 samples, 0.02%)</title><rect x="16.6825%" y="1221" width="0.0214%" height="15" fill="rgb(223,139,8)" fg:x="936371693" fg:w="1203740"/><text x="16.9325%" y="1231.50"></text></g><g><title>[libc.so.6] (729,523 samples, 0.01%)</title><rect x="16.6909%" y="1205" width="0.0130%" height="15" fill="rgb(232,213,38)" fg:x="936845910" fg:w="729523"/><text x="16.9409%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,825,586 samples, 0.03%)</title><rect x="16.7039%" y="1205" width="0.0325%" height="15" fill="rgb(207,94,22)" fg:x="937575433" fg:w="1825586"/><text x="16.9539%" y="1215.50"></text></g><g><title>[libc.so.6] (822,578 samples, 0.01%)</title><rect x="16.7218%" y="1189" width="0.0147%" height="15" fill="rgb(219,183,54)" fg:x="938578441" fg:w="822578"/><text x="16.9718%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,586,639 samples, 0.08%)</title><rect x="16.7364%" y="1189" width="0.0817%" height="15" fill="rgb(216,185,54)" fg:x="939401019" fg:w="4586639"/><text x="16.9864%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,586,639 samples, 0.08%)</title><rect x="16.7364%" y="1173" width="0.0817%" height="15" fill="rgb(254,217,39)" fg:x="939401019" fg:w="4586639"/><text x="16.9864%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,730,552 samples, 0.05%)</title><rect x="16.8182%" y="1173" width="0.0486%" height="15" fill="rgb(240,178,23)" fg:x="943987658" fg:w="2730552"/><text x="17.0682%" y="1183.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,730,552 samples, 0.05%)</title><rect x="16.8182%" y="1157" width="0.0486%" height="15" fill="rgb(218,11,47)" fg:x="943987658" fg:w="2730552"/><text x="17.0682%" y="1167.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,730,552 samples, 0.05%)</title><rect x="16.8182%" y="1141" width="0.0486%" height="15" fill="rgb(218,51,51)" fg:x="943987658" fg:w="2730552"/><text x="17.0682%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,235,513 samples, 0.15%)</title><rect x="16.7364%" y="1205" width="0.1467%" height="15" fill="rgb(238,126,27)" fg:x="939401019" fg:w="8235513"/><text x="16.9864%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,648,874 samples, 0.07%)</title><rect x="16.8182%" y="1189" width="0.0650%" height="15" fill="rgb(249,202,22)" fg:x="943987658" fg:w="3648874"/><text x="17.0682%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (918,322 samples, 0.02%)</title><rect x="16.8668%" y="1173" width="0.0164%" height="15" fill="rgb(254,195,49)" fg:x="946718210" fg:w="918322"/><text x="17.1168%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (918,322 samples, 0.02%)</title><rect x="16.8668%" y="1157" width="0.0164%" height="15" fill="rgb(208,123,14)" fg:x="946718210" fg:w="918322"/><text x="17.1168%" y="1167.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (918,322 samples, 0.02%)</title><rect x="16.8668%" y="1141" width="0.0164%" height="15" fill="rgb(224,200,8)" fg:x="946718210" fg:w="918322"/><text x="17.1168%" y="1151.50"></text></g><g><title>malloc (918,322 samples, 0.02%)</title><rect x="16.8668%" y="1125" width="0.0164%" height="15" fill="rgb(217,61,36)" fg:x="946718210" fg:w="918322"/><text x="17.1168%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1189" width="0.0253%" height="15" fill="rgb(206,35,45)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1173" width="0.0253%" height="15" fill="rgb(217,65,33)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1157" width="0.0253%" height="15" fill="rgb(222,158,48)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1141" width="0.0253%" height="15" fill="rgb(254,2,54)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1125" width="0.0253%" height="15" fill="rgb(250,143,38)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1109" width="0.0253%" height="15" fill="rgb(248,25,0)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1093" width="0.0253%" height="15" fill="rgb(206,152,27)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1077" width="0.0253%" height="15" fill="rgb(240,77,30)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1061" width="0.0253%" height="15" fill="rgb(231,5,3)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1045" width="0.0253%" height="15" fill="rgb(207,226,32)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1029" width="0.0253%" height="15" fill="rgb(222,207,47)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1039.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="1013" width="0.0253%" height="15" fill="rgb(229,115,45)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="997" width="0.0253%" height="15" fill="rgb(224,191,6)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="981" width="0.0253%" height="15" fill="rgb(230,227,24)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="991.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="965" width="0.0253%" height="15" fill="rgb(228,80,19)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="975.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="949" width="0.0253%" height="15" fill="rgb(247,229,0)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="933" width="0.0253%" height="15" fill="rgb(237,194,15)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="917" width="0.0253%" height="15" fill="rgb(219,203,20)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="901" width="0.0253%" height="15" fill="rgb(234,128,8)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="885" width="0.0253%" height="15" fill="rgb(248,202,8)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="869" width="0.0253%" height="15" fill="rgb(206,104,37)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="879.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="853" width="0.0253%" height="15" fill="rgb(223,8,27)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="863.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="837" width="0.0253%" height="15" fill="rgb(216,217,28)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="821" width="0.0253%" height="15" fill="rgb(249,199,1)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="831.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="805" width="0.0253%" height="15" fill="rgb(240,85,17)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="815.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="789" width="0.0253%" height="15" fill="rgb(206,108,45)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="799.50"></text></g><g><title>cfree (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="773" width="0.0253%" height="15" fill="rgb(245,210,41)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="783.50"></text></g><g><title>[libc.so.6] (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="757" width="0.0253%" height="15" fill="rgb(206,13,37)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="767.50"></text></g><g><title>[libc.so.6] (1,422,248 samples, 0.03%)</title><rect x="16.8832%" y="741" width="0.0253%" height="15" fill="rgb(250,61,18)" fg:x="947636532" fg:w="1422248"/><text x="17.1332%" y="751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12,842,854 samples, 0.23%)</title><rect x="16.7039%" y="1221" width="0.2288%" height="15" fill="rgb(235,172,48)" fg:x="937575433" fg:w="12842854"/><text x="16.9539%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,781,755 samples, 0.05%)</title><rect x="16.8832%" y="1205" width="0.0496%" height="15" fill="rgb(249,201,17)" fg:x="947636532" fg:w="2781755"/><text x="17.1332%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,359,507 samples, 0.02%)</title><rect x="16.9085%" y="1189" width="0.0242%" height="15" fill="rgb(219,208,6)" fg:x="949058780" fg:w="1359507"/><text x="17.1585%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,359,507 samples, 0.02%)</title><rect x="16.9085%" y="1173" width="0.0242%" height="15" fill="rgb(248,31,23)" fg:x="949058780" fg:w="1359507"/><text x="17.1585%" y="1183.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,359,507 samples, 0.02%)</title><rect x="16.9085%" y="1157" width="0.0242%" height="15" fill="rgb(245,15,42)" fg:x="949058780" fg:w="1359507"/><text x="17.1585%" y="1167.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,359,507 samples, 0.02%)</title><rect x="16.9085%" y="1141" width="0.0242%" height="15" fill="rgb(222,217,39)" fg:x="949058780" fg:w="1359507"/><text x="17.1585%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15,285,818 samples, 0.27%)</title><rect x="16.6825%" y="1237" width="0.2723%" height="15" fill="rgb(210,219,27)" fg:x="936371693" fg:w="15285818"/><text x="16.9325%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,239,224 samples, 0.02%)</title><rect x="16.9327%" y="1221" width="0.0221%" height="15" fill="rgb(252,166,36)" fg:x="950418287" fg:w="1239224"/><text x="17.1827%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,239,224 samples, 0.02%)</title><rect x="16.9327%" y="1205" width="0.0221%" height="15" fill="rgb(245,132,34)" fg:x="950418287" fg:w="1239224"/><text x="17.1827%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,239,224 samples, 0.02%)</title><rect x="16.9327%" y="1189" width="0.0221%" height="15" fill="rgb(236,54,3)" fg:x="950418287" fg:w="1239224"/><text x="17.1827%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,239,224 samples, 0.02%)</title><rect x="16.9327%" y="1173" width="0.0221%" height="15" fill="rgb(241,173,43)" fg:x="950418287" fg:w="1239224"/><text x="17.1827%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,239,224 samples, 0.02%)</title><rect x="16.9327%" y="1157" width="0.0221%" height="15" fill="rgb(215,190,9)" fg:x="950418287" fg:w="1239224"/><text x="17.1827%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,239,224 samples, 0.02%)</title><rect x="16.9327%" y="1141" width="0.0221%" height="15" fill="rgb(242,101,16)" fg:x="950418287" fg:w="1239224"/><text x="17.1827%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19,704,785 samples, 0.35%)</title><rect x="16.6372%" y="1253" width="0.3511%" height="15" fill="rgb(223,190,21)" fg:x="933831381" fg:w="19704785"/><text x="16.8872%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1237" width="0.0335%" height="15" fill="rgb(215,228,25)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1221" width="0.0335%" height="15" fill="rgb(225,36,22)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1205" width="0.0335%" height="15" fill="rgb(251,106,46)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1189" width="0.0335%" height="15" fill="rgb(208,90,1)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1173" width="0.0335%" height="15" fill="rgb(243,10,4)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1157" width="0.0335%" height="15" fill="rgb(212,137,27)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1141" width="0.0335%" height="15" fill="rgb(231,220,49)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1125" width="0.0335%" height="15" fill="rgb(237,96,20)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1109" width="0.0335%" height="15" fill="rgb(239,229,30)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1093" width="0.0335%" height="15" fill="rgb(219,65,33)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1077" width="0.0335%" height="15" fill="rgb(243,134,7)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1061" width="0.0335%" height="15" fill="rgb(216,177,54)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1045" width="0.0335%" height="15" fill="rgb(211,160,20)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1055.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1029" width="0.0335%" height="15" fill="rgb(239,85,39)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="1013" width="0.0335%" height="15" fill="rgb(232,125,22)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="997" width="0.0335%" height="15" fill="rgb(244,57,34)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="981" width="0.0335%" height="15" fill="rgb(214,203,32)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="991.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="965" width="0.0335%" height="15" fill="rgb(207,58,43)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="975.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="949" width="0.0335%" height="15" fill="rgb(215,193,15)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="933" width="0.0335%" height="15" fill="rgb(232,15,44)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="917" width="0.0335%" height="15" fill="rgb(212,3,48)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="901" width="0.0335%" height="15" fill="rgb(218,128,7)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="885" width="0.0335%" height="15" fill="rgb(226,216,39)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="895.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="869" width="0.0335%" height="15" fill="rgb(243,47,51)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="853" width="0.0335%" height="15" fill="rgb(241,183,40)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="837" width="0.0335%" height="15" fill="rgb(231,217,32)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="847.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,878,655 samples, 0.03%)</title><rect x="16.9548%" y="821" width="0.0335%" height="15" fill="rgb(229,61,38)" fg:x="951657511" fg:w="1878655"/><text x="17.2048%" y="831.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,424,568 samples, 0.03%)</title><rect x="16.9883%" y="1157" width="0.0254%" height="15" fill="rgb(225,210,5)" fg:x="953536166" fg:w="1424568"/><text x="17.2383%" y="1167.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,424,568 samples, 0.03%)</title><rect x="16.9883%" y="1141" width="0.0254%" height="15" fill="rgb(231,79,45)" fg:x="953536166" fg:w="1424568"/><text x="17.2383%" y="1151.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,424,568 samples, 0.03%)</title><rect x="16.9883%" y="1125" width="0.0254%" height="15" fill="rgb(224,100,7)" fg:x="953536166" fg:w="1424568"/><text x="17.2383%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,236,512 samples, 0.06%)</title><rect x="16.9883%" y="1173" width="0.0577%" height="15" fill="rgb(241,198,18)" fg:x="953536166" fg:w="3236512"/><text x="17.2383%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,811,944 samples, 0.03%)</title><rect x="17.0137%" y="1157" width="0.0323%" height="15" fill="rgb(252,97,53)" fg:x="954960734" fg:w="1811944"/><text x="17.2637%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,366,071 samples, 0.02%)</title><rect x="17.0216%" y="1141" width="0.0243%" height="15" fill="rgb(220,88,7)" fg:x="955406607" fg:w="1366071"/><text x="17.2716%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,366,071 samples, 0.02%)</title><rect x="17.0216%" y="1125" width="0.0243%" height="15" fill="rgb(213,176,14)" fg:x="955406607" fg:w="1366071"/><text x="17.2716%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,366,071 samples, 0.02%)</title><rect x="17.0216%" y="1109" width="0.0243%" height="15" fill="rgb(246,73,7)" fg:x="955406607" fg:w="1366071"/><text x="17.2716%" y="1119.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,366,071 samples, 0.02%)</title><rect x="17.0216%" y="1093" width="0.0243%" height="15" fill="rgb(245,64,36)" fg:x="955406607" fg:w="1366071"/><text x="17.2716%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,022,713 samples, 0.07%)</title><rect x="16.9883%" y="1189" width="0.0717%" height="15" fill="rgb(245,80,10)" fg:x="953536166" fg:w="4022713"/><text x="17.2383%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1173" width="0.0140%" height="15" fill="rgb(232,107,50)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1157" width="0.0140%" height="15" fill="rgb(253,3,0)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1141" width="0.0140%" height="15" fill="rgb(212,99,53)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1125" width="0.0140%" height="15" fill="rgb(249,111,54)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1109" width="0.0140%" height="15" fill="rgb(249,55,30)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1093" width="0.0140%" height="15" fill="rgb(237,47,42)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1077" width="0.0140%" height="15" fill="rgb(211,20,18)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1061" width="0.0140%" height="15" fill="rgb(231,203,46)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1045" width="0.0140%" height="15" fill="rgb(237,142,3)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1029" width="0.0140%" height="15" fill="rgb(241,107,1)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1039.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (786,201 samples, 0.01%)</title><rect x="17.0459%" y="1013" width="0.0140%" height="15" fill="rgb(229,83,13)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1023.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (786,201 samples, 0.01%)</title><rect x="17.0459%" y="997" width="0.0140%" height="15" fill="rgb(241,91,40)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="1007.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (786,201 samples, 0.01%)</title><rect x="17.0459%" y="981" width="0.0140%" height="15" fill="rgb(225,3,45)" fg:x="956772678" fg:w="786201"/><text x="17.2959%" y="991.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,860,934 samples, 0.09%)</title><rect x="17.0600%" y="1173" width="0.0866%" height="15" fill="rgb(244,223,14)" fg:x="957558879" fg:w="4860934"/><text x="17.3100%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,860,934 samples, 0.09%)</title><rect x="17.0600%" y="1157" width="0.0866%" height="15" fill="rgb(224,124,37)" fg:x="957558879" fg:w="4860934"/><text x="17.3100%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,860,934 samples, 0.09%)</title><rect x="17.0600%" y="1141" width="0.0866%" height="15" fill="rgb(251,171,30)" fg:x="957558879" fg:w="4860934"/><text x="17.3100%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,394,608 samples, 0.08%)</title><rect x="17.0683%" y="1125" width="0.0783%" height="15" fill="rgb(236,46,54)" fg:x="958025205" fg:w="4394608"/><text x="17.3183%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,893,104 samples, 0.07%)</title><rect x="17.0772%" y="1109" width="0.0694%" height="15" fill="rgb(245,213,5)" fg:x="958526709" fg:w="3893104"/><text x="17.3272%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,893,104 samples, 0.07%)</title><rect x="17.0772%" y="1093" width="0.0694%" height="15" fill="rgb(230,144,27)" fg:x="958526709" fg:w="3893104"/><text x="17.3272%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,893,104 samples, 0.07%)</title><rect x="17.0772%" y="1077" width="0.0694%" height="15" fill="rgb(220,86,6)" fg:x="958526709" fg:w="3893104"/><text x="17.3272%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,893,104 samples, 0.07%)</title><rect x="17.0772%" y="1061" width="0.0694%" height="15" fill="rgb(240,20,13)" fg:x="958526709" fg:w="3893104"/><text x="17.3272%" y="1071.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,893,104 samples, 0.07%)</title><rect x="17.0772%" y="1045" width="0.0694%" height="15" fill="rgb(217,89,34)" fg:x="958526709" fg:w="3893104"/><text x="17.3272%" y="1055.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,893,104 samples, 0.07%)</title><rect x="17.0772%" y="1029" width="0.0694%" height="15" fill="rgb(229,13,5)" fg:x="958526709" fg:w="3893104"/><text x="17.3272%" y="1039.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,893,104 samples, 0.07%)</title><rect x="17.0772%" y="1013" width="0.0694%" height="15" fill="rgb(244,67,35)" fg:x="958526709" fg:w="3893104"/><text x="17.3272%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10,310,072 samples, 0.18%)</title><rect x="16.9883%" y="1237" width="0.1837%" height="15" fill="rgb(221,40,2)" fg:x="953536166" fg:w="10310072"/><text x="17.2383%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10,310,072 samples, 0.18%)</title><rect x="16.9883%" y="1221" width="0.1837%" height="15" fill="rgb(237,157,21)" fg:x="953536166" fg:w="10310072"/><text x="17.2383%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10,310,072 samples, 0.18%)</title><rect x="16.9883%" y="1205" width="0.1837%" height="15" fill="rgb(222,94,11)" fg:x="953536166" fg:w="10310072"/><text x="17.2383%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,287,359 samples, 0.11%)</title><rect x="17.0600%" y="1189" width="0.1120%" height="15" fill="rgb(249,113,6)" fg:x="957558879" fg:w="6287359"/><text x="17.3100%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,426,425 samples, 0.03%)</title><rect x="17.1466%" y="1173" width="0.0254%" height="15" fill="rgb(238,137,36)" fg:x="962419813" fg:w="1426425"/><text x="17.3966%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,426,425 samples, 0.03%)</title><rect x="17.1466%" y="1157" width="0.0254%" height="15" fill="rgb(210,102,26)" fg:x="962419813" fg:w="1426425"/><text x="17.3966%" y="1167.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,426,425 samples, 0.03%)</title><rect x="17.1466%" y="1141" width="0.0254%" height="15" fill="rgb(218,30,30)" fg:x="962419813" fg:w="1426425"/><text x="17.3966%" y="1151.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,426,425 samples, 0.03%)</title><rect x="17.1466%" y="1125" width="0.0254%" height="15" fill="rgb(214,67,26)" fg:x="962419813" fg:w="1426425"/><text x="17.3966%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (34,190,774 samples, 0.61%)</title><rect x="16.6059%" y="1301" width="0.6091%" height="15" fill="rgb(251,9,53)" fg:x="932074743" fg:w="34190774"/><text x="16.8559%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34,190,774 samples, 0.61%)</title><rect x="16.6059%" y="1285" width="0.6091%" height="15" fill="rgb(228,204,25)" fg:x="932074743" fg:w="34190774"/><text x="16.8559%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (34,190,774 samples, 0.61%)</title><rect x="16.6059%" y="1269" width="0.6091%" height="15" fill="rgb(207,153,8)" fg:x="932074743" fg:w="34190774"/><text x="16.8559%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12,729,351 samples, 0.23%)</title><rect x="16.9883%" y="1253" width="0.2268%" height="15" fill="rgb(242,9,16)" fg:x="953536166" fg:w="12729351"/><text x="17.2383%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,419,279 samples, 0.04%)</title><rect x="17.1720%" y="1237" width="0.0431%" height="15" fill="rgb(217,211,10)" fg:x="963846238" fg:w="2419279"/><text x="17.4220%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,419,279 samples, 0.04%)</title><rect x="17.1720%" y="1221" width="0.0431%" height="15" fill="rgb(219,228,52)" fg:x="963846238" fg:w="2419279"/><text x="17.4220%" y="1231.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,419,279 samples, 0.04%)</title><rect x="17.1720%" y="1205" width="0.0431%" height="15" fill="rgb(231,92,29)" fg:x="963846238" fg:w="2419279"/><text x="17.4220%" y="1215.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,419,279 samples, 0.04%)</title><rect x="17.1720%" y="1189" width="0.0431%" height="15" fill="rgb(232,8,23)" fg:x="963846238" fg:w="2419279"/><text x="17.4220%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (109,125,729 samples, 1.94%)</title><rect x="15.3513%" y="1365" width="1.9442%" height="15" fill="rgb(216,211,34)" fg:x="861652102" fg:w="109125729"/><text x="15.6013%" y="1375.50">&lt;..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (107,246,911 samples, 1.91%)</title><rect x="15.3847%" y="1349" width="1.9107%" height="15" fill="rgb(236,151,0)" fg:x="863530920" fg:w="107246911"/><text x="15.6347%" y="1359.50">r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (107,246,911 samples, 1.91%)</title><rect x="15.3847%" y="1333" width="1.9107%" height="15" fill="rgb(209,168,3)" fg:x="863530920" fg:w="107246911"/><text x="15.6347%" y="1343.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (43,059,576 samples, 0.77%)</title><rect x="16.5283%" y="1317" width="0.7672%" height="15" fill="rgb(208,129,28)" fg:x="927718255" fg:w="43059576"/><text x="16.7783%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (4,512,314 samples, 0.08%)</title><rect x="17.2151%" y="1301" width="0.0804%" height="15" fill="rgb(229,78,22)" fg:x="966265517" fg:w="4512314"/><text x="17.4651%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,512,314 samples, 0.08%)</title><rect x="17.2151%" y="1285" width="0.0804%" height="15" fill="rgb(228,187,13)" fg:x="966265517" fg:w="4512314"/><text x="17.4651%" y="1295.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (4,512,314 samples, 0.08%)</title><rect x="17.2151%" y="1269" width="0.0804%" height="15" fill="rgb(240,119,24)" fg:x="966265517" fg:w="4512314"/><text x="17.4651%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,905,562 samples, 0.03%)</title><rect x="17.2955%" y="1349" width="0.0339%" height="15" fill="rgb(209,194,42)" fg:x="970777831" fg:w="1905562"/><text x="17.5455%" y="1359.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,905,562 samples, 0.03%)</title><rect x="17.2955%" y="1333" width="0.0339%" height="15" fill="rgb(247,200,46)" fg:x="970777831" fg:w="1905562"/><text x="17.5455%" y="1343.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,905,562 samples, 0.03%)</title><rect x="17.2955%" y="1317" width="0.0339%" height="15" fill="rgb(218,76,16)" fg:x="970777831" fg:w="1905562"/><text x="17.5455%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (843,559,435 samples, 15.03%)</title><rect x="2.3143%" y="1397" width="15.0289%" height="15" fill="rgb(225,21,48)" fg:x="129898144" fg:w="843559435"/><text x="2.5643%" y="1407.50">rayon_core::join::join_..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (111,805,477 samples, 1.99%)</title><rect x="15.3513%" y="1381" width="1.9919%" height="15" fill="rgb(239,223,50)" fg:x="861652102" fg:w="111805477"/><text x="15.6013%" y="1391.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,679,748 samples, 0.05%)</title><rect x="17.2955%" y="1365" width="0.0477%" height="15" fill="rgb(244,45,21)" fg:x="970777831" fg:w="2679748"/><text x="17.5455%" y="1375.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (774,186 samples, 0.01%)</title><rect x="17.3294%" y="1349" width="0.0138%" height="15" fill="rgb(232,33,43)" fg:x="972683393" fg:w="774186"/><text x="17.5794%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,797,926 samples, 0.03%)</title><rect x="17.3432%" y="1365" width="0.0320%" height="15" fill="rgb(209,8,3)" fg:x="973457579" fg:w="1797926"/><text x="17.5932%" y="1375.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,797,926 samples, 0.03%)</title><rect x="17.3432%" y="1349" width="0.0320%" height="15" fill="rgb(214,25,53)" fg:x="973457579" fg:w="1797926"/><text x="17.5932%" y="1359.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,797,926 samples, 0.03%)</title><rect x="17.3432%" y="1333" width="0.0320%" height="15" fill="rgb(254,186,54)" fg:x="973457579" fg:w="1797926"/><text x="17.5932%" y="1343.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (900,320 samples, 0.02%)</title><rect x="17.3752%" y="1317" width="0.0160%" height="15" fill="rgb(208,174,49)" fg:x="975255505" fg:w="900320"/><text x="17.6252%" y="1327.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,038,036 samples, 0.07%)</title><rect x="17.3752%" y="1333" width="0.0719%" height="15" fill="rgb(233,191,51)" fg:x="975255505" fg:w="4038036"/><text x="17.6252%" y="1343.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,137,716 samples, 0.06%)</title><rect x="17.3913%" y="1317" width="0.0559%" height="15" fill="rgb(222,134,10)" fg:x="976155825" fg:w="3137716"/><text x="17.6413%" y="1327.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,137,716 samples, 0.06%)</title><rect x="17.3913%" y="1301" width="0.0559%" height="15" fill="rgb(230,226,20)" fg:x="976155825" fg:w="3137716"/><text x="17.6413%" y="1311.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,426,175 samples, 0.08%)</title><rect x="17.4472%" y="1301" width="0.0789%" height="15" fill="rgb(251,111,25)" fg:x="979293541" fg:w="4426175"/><text x="17.6972%" y="1311.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (6,800,591 samples, 0.12%)</title><rect x="17.4472%" y="1317" width="0.1212%" height="15" fill="rgb(224,40,46)" fg:x="979293541" fg:w="6800591"/><text x="17.6972%" y="1327.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,872,912 samples, 0.03%)</title><rect x="17.5350%" y="1301" width="0.0334%" height="15" fill="rgb(236,108,47)" fg:x="984221220" fg:w="1872912"/><text x="17.7850%" y="1311.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,872,912 samples, 0.03%)</title><rect x="17.5350%" y="1285" width="0.0334%" height="15" fill="rgb(234,93,0)" fg:x="984221220" fg:w="1872912"/><text x="17.7850%" y="1295.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,405,354 samples, 0.08%)</title><rect x="17.5773%" y="1285" width="0.0785%" height="15" fill="rgb(224,213,32)" fg:x="986595636" fg:w="4405354"/><text x="17.8273%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (8,327,404 samples, 0.15%)</title><rect x="17.5773%" y="1301" width="0.1484%" height="15" fill="rgb(251,11,48)" fg:x="986595636" fg:w="8327404"/><text x="17.8273%" y="1311.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,922,050 samples, 0.07%)</title><rect x="17.6558%" y="1285" width="0.0699%" height="15" fill="rgb(236,173,5)" fg:x="991000990" fg:w="3922050"/><text x="17.9058%" y="1295.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,646,803 samples, 0.05%)</title><rect x="17.6785%" y="1269" width="0.0472%" height="15" fill="rgb(230,95,12)" fg:x="992276237" fg:w="2646803"/><text x="17.9285%" y="1279.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,518,962 samples, 0.04%)</title><rect x="17.7256%" y="1269" width="0.0449%" height="15" fill="rgb(232,209,1)" fg:x="994923040" fg:w="2518962"/><text x="17.9756%" y="1279.50"></text></g><g><title>[libc.so.6] (2,518,962 samples, 0.04%)</title><rect x="17.7256%" y="1253" width="0.0449%" height="15" fill="rgb(232,6,1)" fg:x="994923040" fg:w="2518962"/><text x="17.9756%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (7,712,190 samples, 0.14%)</title><rect x="17.7705%" y="1269" width="0.1374%" height="15" fill="rgb(210,224,50)" fg:x="997442002" fg:w="7712190"/><text x="18.0205%" y="1279.50"></text></g><g><title>[libc.so.6] (2,128,069 samples, 0.04%)</title><rect x="17.9079%" y="1269" width="0.0379%" height="15" fill="rgb(228,127,35)" fg:x="1005154192" fg:w="2128069"/><text x="18.1579%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (13,077,246 samples, 0.23%)</title><rect x="17.7256%" y="1285" width="0.2330%" height="15" fill="rgb(245,102,45)" fg:x="994923040" fg:w="13077246"/><text x="17.9756%" y="1295.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (718,025 samples, 0.01%)</title><rect x="17.9458%" y="1269" width="0.0128%" height="15" fill="rgb(214,1,49)" fg:x="1007282261" fg:w="718025"/><text x="18.1958%" y="1279.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (718,025 samples, 0.01%)</title><rect x="17.9458%" y="1253" width="0.0128%" height="15" fill="rgb(226,163,40)" fg:x="1007282261" fg:w="718025"/><text x="18.1958%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (13,340,150 samples, 0.24%)</title><rect x="17.9586%" y="1253" width="0.2377%" height="15" fill="rgb(239,212,28)" fg:x="1008000286" fg:w="13340150"/><text x="18.2086%" y="1263.50"></text></g><g><title>[libc.so.6] (1,879,968 samples, 0.03%)</title><rect x="18.1963%" y="1253" width="0.0335%" height="15" fill="rgb(220,20,13)" fg:x="1021340436" fg:w="1879968"/><text x="18.4463%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (21,630,596 samples, 0.39%)</title><rect x="17.9586%" y="1269" width="0.3854%" height="15" fill="rgb(210,164,35)" fg:x="1008000286" fg:w="21630596"/><text x="18.2086%" y="1279.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (6,410,478 samples, 0.11%)</title><rect x="18.2298%" y="1253" width="0.1142%" height="15" fill="rgb(248,109,41)" fg:x="1023220404" fg:w="6410478"/><text x="18.4798%" y="1263.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (6,410,478 samples, 0.11%)</title><rect x="18.2298%" y="1237" width="0.1142%" height="15" fill="rgb(238,23,50)" fg:x="1023220404" fg:w="6410478"/><text x="18.4798%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,220,310 samples, 0.08%)</title><rect x="18.3601%" y="1237" width="0.0752%" height="15" fill="rgb(211,48,49)" fg:x="1030532947" fg:w="4220310"/><text x="18.6101%" y="1247.50"></text></g><g><title>[libc.so.6] (967,548 samples, 0.02%)</title><rect x="18.4353%" y="1237" width="0.0172%" height="15" fill="rgb(223,36,21)" fg:x="1034753257" fg:w="967548"/><text x="18.6853%" y="1247.50"></text></g><g><title>cfree (2,249,990 samples, 0.04%)</title><rect x="18.4525%" y="1237" width="0.0401%" height="15" fill="rgb(207,123,46)" fg:x="1035720805" fg:w="2249990"/><text x="18.7025%" y="1247.50"></text></g><g><title>[libc.so.6] (2,249,990 samples, 0.04%)</title><rect x="18.4525%" y="1221" width="0.0401%" height="15" fill="rgb(240,218,32)" fg:x="1035720805" fg:w="2249990"/><text x="18.7025%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (13,491,434 samples, 0.24%)</title><rect x="18.3440%" y="1253" width="0.2404%" height="15" fill="rgb(252,5,43)" fg:x="1029630882" fg:w="13491434"/><text x="18.5940%" y="1263.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (5,151,521 samples, 0.09%)</title><rect x="18.4926%" y="1237" width="0.0918%" height="15" fill="rgb(252,84,19)" fg:x="1037970795" fg:w="5151521"/><text x="18.7426%" y="1247.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (5,151,521 samples, 0.09%)</title><rect x="18.4926%" y="1221" width="0.0918%" height="15" fill="rgb(243,152,39)" fg:x="1037970795" fg:w="5151521"/><text x="18.7426%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (17,638,194 samples, 0.31%)</title><rect x="18.5844%" y="1221" width="0.3142%" height="15" fill="rgb(234,160,15)" fg:x="1043122316" fg:w="17638194"/><text x="18.8344%" y="1231.50"></text></g><g><title>[libc.so.6] (1,557,530 samples, 0.03%)</title><rect x="18.8986%" y="1221" width="0.0277%" height="15" fill="rgb(237,34,20)" fg:x="1060760510" fg:w="1557530"/><text x="19.1486%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (21,611,262 samples, 0.39%)</title><rect x="18.5844%" y="1237" width="0.3850%" height="15" fill="rgb(229,97,13)" fg:x="1043122316" fg:w="21611262"/><text x="18.8344%" y="1247.50"></text></g><g><title>cfree (2,415,538 samples, 0.04%)</title><rect x="18.9263%" y="1221" width="0.0430%" height="15" fill="rgb(234,71,50)" fg:x="1062318040" fg:w="2415538"/><text x="19.1763%" y="1231.50"></text></g><g><title>[libc.so.6] (1,914,034 samples, 0.03%)</title><rect x="18.9353%" y="1205" width="0.0341%" height="15" fill="rgb(253,155,4)" fg:x="1062819544" fg:w="1914034"/><text x="19.1853%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,001,030 samples, 0.05%)</title><rect x="18.9694%" y="1237" width="0.0535%" height="15" fill="rgb(222,185,37)" fg:x="1064733578" fg:w="3001030"/><text x="19.2194%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,001,030 samples, 0.05%)</title><rect x="18.9694%" y="1221" width="0.0535%" height="15" fill="rgb(251,177,13)" fg:x="1064733578" fg:w="3001030"/><text x="19.2194%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,001,030 samples, 0.05%)</title><rect x="18.9694%" y="1205" width="0.0535%" height="15" fill="rgb(250,179,40)" fg:x="1064733578" fg:w="3001030"/><text x="19.2194%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (39,007,281 samples, 0.69%)</title><rect x="18.3440%" y="1269" width="0.6950%" height="15" fill="rgb(242,44,2)" fg:x="1029630882" fg:w="39007281"/><text x="18.5940%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25,515,847 samples, 0.45%)</title><rect x="18.5844%" y="1253" width="0.4546%" height="15" fill="rgb(216,177,13)" fg:x="1043122316" fg:w="25515847"/><text x="18.8344%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1237" width="0.0161%" height="15" fill="rgb(216,106,43)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1221" width="0.0161%" height="15" fill="rgb(216,183,2)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1205" width="0.0161%" height="15" fill="rgb(249,75,3)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1189" width="0.0161%" height="15" fill="rgb(219,67,39)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1173" width="0.0161%" height="15" fill="rgb(253,228,2)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1157" width="0.0161%" height="15" fill="rgb(235,138,27)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1141" width="0.0161%" height="15" fill="rgb(236,97,51)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1125" width="0.0161%" height="15" fill="rgb(240,80,30)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1109" width="0.0161%" height="15" fill="rgb(230,178,19)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1093" width="0.0161%" height="15" fill="rgb(210,190,27)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1077" width="0.0161%" height="15" fill="rgb(222,107,31)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1061" width="0.0161%" height="15" fill="rgb(216,127,34)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1045" width="0.0161%" height="15" fill="rgb(234,116,52)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1029" width="0.0161%" height="15" fill="rgb(222,124,15)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (903,555 samples, 0.02%)</title><rect x="19.0229%" y="1013" width="0.0161%" height="15" fill="rgb(231,179,28)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (903,555 samples, 0.02%)</title><rect x="19.0229%" y="997" width="0.0161%" height="15" fill="rgb(226,93,45)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (903,555 samples, 0.02%)</title><rect x="19.0229%" y="981" width="0.0161%" height="15" fill="rgb(215,8,51)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (903,555 samples, 0.02%)</title><rect x="19.0229%" y="965" width="0.0161%" height="15" fill="rgb(223,106,5)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (903,555 samples, 0.02%)</title><rect x="19.0229%" y="949" width="0.0161%" height="15" fill="rgb(250,191,5)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="959.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (903,555 samples, 0.02%)</title><rect x="19.0229%" y="933" width="0.0161%" height="15" fill="rgb(242,132,44)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (903,555 samples, 0.02%)</title><rect x="19.0229%" y="917" width="0.0161%" height="15" fill="rgb(251,152,29)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (903,555 samples, 0.02%)</title><rect x="19.0229%" y="901" width="0.0161%" height="15" fill="rgb(218,179,5)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="911.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (903,555 samples, 0.02%)</title><rect x="19.0229%" y="885" width="0.0161%" height="15" fill="rgb(227,67,19)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="895.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (903,555 samples, 0.02%)</title><rect x="19.0229%" y="869" width="0.0161%" height="15" fill="rgb(233,119,31)" fg:x="1067734608" fg:w="903555"/><text x="19.2729%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1173" width="0.0347%" height="15" fill="rgb(241,120,22)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1157" width="0.0347%" height="15" fill="rgb(224,102,30)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1141" width="0.0347%" height="15" fill="rgb(210,164,37)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1125" width="0.0347%" height="15" fill="rgb(226,191,16)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1109" width="0.0347%" height="15" fill="rgb(214,40,45)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1093" width="0.0347%" height="15" fill="rgb(244,29,26)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1077" width="0.0347%" height="15" fill="rgb(216,16,5)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1061" width="0.0347%" height="15" fill="rgb(249,76,35)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1045" width="0.0347%" height="15" fill="rgb(207,11,44)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1029" width="0.0347%" height="15" fill="rgb(228,190,49)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1039.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="1013" width="0.0347%" height="15" fill="rgb(214,173,12)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1023.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="997" width="0.0347%" height="15" fill="rgb(218,26,35)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="1007.50"></text></g><g><title>[libc.so.6] (1,948,722 samples, 0.03%)</title><rect x="19.0479%" y="981" width="0.0347%" height="15" fill="rgb(220,200,19)" fg:x="1069139667" fg:w="1948722"/><text x="19.2979%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,523,569 samples, 0.06%)</title><rect x="19.0389%" y="1205" width="0.0628%" height="15" fill="rgb(239,95,49)" fg:x="1068638163" fg:w="3523569"/><text x="19.2889%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,523,569 samples, 0.06%)</title><rect x="19.0389%" y="1189" width="0.0628%" height="15" fill="rgb(235,85,53)" fg:x="1068638163" fg:w="3523569"/><text x="19.2889%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1173" width="0.0191%" height="15" fill="rgb(233,133,31)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1157" width="0.0191%" height="15" fill="rgb(218,25,20)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1141" width="0.0191%" height="15" fill="rgb(252,210,38)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1125" width="0.0191%" height="15" fill="rgb(242,134,21)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1109" width="0.0191%" height="15" fill="rgb(213,28,48)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1093" width="0.0191%" height="15" fill="rgb(250,196,2)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1077" width="0.0191%" height="15" fill="rgb(227,5,17)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1061" width="0.0191%" height="15" fill="rgb(221,226,24)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1045" width="0.0191%" height="15" fill="rgb(211,5,48)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1055.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1029" width="0.0191%" height="15" fill="rgb(219,150,6)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1039.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,073,343 samples, 0.02%)</title><rect x="19.0826%" y="1013" width="0.0191%" height="15" fill="rgb(251,46,16)" fg:x="1071088389" fg:w="1073343"/><text x="19.3326%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (66,051,185 samples, 1.18%)</title><rect x="17.9586%" y="1285" width="1.1768%" height="15" fill="rgb(220,204,40)" fg:x="1008000286" fg:w="66051185"/><text x="18.2086%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5,413,308 samples, 0.10%)</title><rect x="19.0389%" y="1269" width="0.0964%" height="15" fill="rgb(211,85,2)" fg:x="1068638163" fg:w="5413308"/><text x="19.2889%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,413,308 samples, 0.10%)</title><rect x="19.0389%" y="1253" width="0.0964%" height="15" fill="rgb(229,17,7)" fg:x="1068638163" fg:w="5413308"/><text x="19.2889%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5,413,308 samples, 0.10%)</title><rect x="19.0389%" y="1237" width="0.0964%" height="15" fill="rgb(239,72,28)" fg:x="1068638163" fg:w="5413308"/><text x="19.2889%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,413,308 samples, 0.10%)</title><rect x="19.0389%" y="1221" width="0.0964%" height="15" fill="rgb(230,47,54)" fg:x="1068638163" fg:w="5413308"/><text x="19.2889%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,889,739 samples, 0.03%)</title><rect x="19.1017%" y="1205" width="0.0337%" height="15" fill="rgb(214,50,8)" fg:x="1072161732" fg:w="1889739"/><text x="19.3517%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,889,739 samples, 0.03%)</title><rect x="19.1017%" y="1189" width="0.0337%" height="15" fill="rgb(216,198,43)" fg:x="1072161732" fg:w="1889739"/><text x="19.3517%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,889,739 samples, 0.03%)</title><rect x="19.1017%" y="1173" width="0.0337%" height="15" fill="rgb(234,20,35)" fg:x="1072161732" fg:w="1889739"/><text x="19.3517%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,889,739 samples, 0.03%)</title><rect x="19.1017%" y="1157" width="0.0337%" height="15" fill="rgb(254,45,19)" fg:x="1072161732" fg:w="1889739"/><text x="19.3517%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,889,739 samples, 0.03%)</title><rect x="19.1017%" y="1141" width="0.0337%" height="15" fill="rgb(219,14,44)" fg:x="1072161732" fg:w="1889739"/><text x="19.3517%" y="1151.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,889,739 samples, 0.03%)</title><rect x="19.1017%" y="1125" width="0.0337%" height="15" fill="rgb(217,220,26)" fg:x="1072161732" fg:w="1889739"/><text x="19.3517%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,715,243 samples, 0.03%)</title><rect x="19.1354%" y="1157" width="0.0306%" height="15" fill="rgb(213,158,28)" fg:x="1074051471" fg:w="1715243"/><text x="19.3854%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,715,243 samples, 0.03%)</title><rect x="19.1354%" y="1141" width="0.0306%" height="15" fill="rgb(252,51,52)" fg:x="1074051471" fg:w="1715243"/><text x="19.3854%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,606,575 samples, 0.05%)</title><rect x="19.1354%" y="1221" width="0.0464%" height="15" fill="rgb(246,89,16)" fg:x="1074051471" fg:w="2606575"/><text x="19.3854%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,606,575 samples, 0.05%)</title><rect x="19.1354%" y="1205" width="0.0464%" height="15" fill="rgb(216,158,49)" fg:x="1074051471" fg:w="2606575"/><text x="19.3854%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,606,575 samples, 0.05%)</title><rect x="19.1354%" y="1189" width="0.0464%" height="15" fill="rgb(236,107,19)" fg:x="1074051471" fg:w="2606575"/><text x="19.3854%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,606,575 samples, 0.05%)</title><rect x="19.1354%" y="1173" width="0.0464%" height="15" fill="rgb(228,185,30)" fg:x="1074051471" fg:w="2606575"/><text x="19.3854%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (891,332 samples, 0.02%)</title><rect x="19.1660%" y="1157" width="0.0159%" height="15" fill="rgb(246,134,8)" fg:x="1075766714" fg:w="891332"/><text x="19.4160%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (891,332 samples, 0.02%)</title><rect x="19.1660%" y="1141" width="0.0159%" height="15" fill="rgb(214,143,50)" fg:x="1075766714" fg:w="891332"/><text x="19.4160%" y="1151.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (891,332 samples, 0.02%)</title><rect x="19.1660%" y="1125" width="0.0159%" height="15" fill="rgb(228,75,8)" fg:x="1075766714" fg:w="891332"/><text x="19.4160%" y="1135.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (891,332 samples, 0.02%)</title><rect x="19.1660%" y="1109" width="0.0159%" height="15" fill="rgb(207,175,4)" fg:x="1075766714" fg:w="891332"/><text x="19.4160%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1157" width="0.0365%" height="15" fill="rgb(205,108,24)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1141" width="0.0365%" height="15" fill="rgb(244,120,49)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1125" width="0.0365%" height="15" fill="rgb(223,47,38)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1109" width="0.0365%" height="15" fill="rgb(229,179,11)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1093" width="0.0365%" height="15" fill="rgb(231,122,1)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1077" width="0.0365%" height="15" fill="rgb(245,119,9)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1061" width="0.0365%" height="15" fill="rgb(241,163,25)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1045" width="0.0365%" height="15" fill="rgb(217,214,3)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1029" width="0.0365%" height="15" fill="rgb(240,86,28)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,047,797 samples, 0.04%)</title><rect x="19.1818%" y="1013" width="0.0365%" height="15" fill="rgb(215,47,9)" fg:x="1076658046" fg:w="2047797"/><text x="19.4318%" y="1023.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (984,119 samples, 0.02%)</title><rect x="19.2183%" y="1045" width="0.0175%" height="15" fill="rgb(252,25,45)" fg:x="1078705843" fg:w="984119"/><text x="19.4683%" y="1055.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (984,119 samples, 0.02%)</title><rect x="19.2183%" y="1029" width="0.0175%" height="15" fill="rgb(251,164,9)" fg:x="1078705843" fg:w="984119"/><text x="19.4683%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (85,748,913 samples, 1.53%)</title><rect x="17.7256%" y="1301" width="1.5277%" height="15" fill="rgb(233,194,0)" fg:x="994923040" fg:w="85748913"/><text x="17.9756%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,620,482 samples, 0.12%)</title><rect x="19.1354%" y="1285" width="0.1180%" height="15" fill="rgb(249,111,24)" fg:x="1074051471" fg:w="6620482"/><text x="19.3854%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,620,482 samples, 0.12%)</title><rect x="19.1354%" y="1269" width="0.1180%" height="15" fill="rgb(250,223,3)" fg:x="1074051471" fg:w="6620482"/><text x="19.3854%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,620,482 samples, 0.12%)</title><rect x="19.1354%" y="1253" width="0.1180%" height="15" fill="rgb(236,178,37)" fg:x="1074051471" fg:w="6620482"/><text x="19.3854%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,620,482 samples, 0.12%)</title><rect x="19.1354%" y="1237" width="0.1180%" height="15" fill="rgb(241,158,50)" fg:x="1074051471" fg:w="6620482"/><text x="19.3854%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,013,907 samples, 0.07%)</title><rect x="19.1818%" y="1221" width="0.0715%" height="15" fill="rgb(213,121,41)" fg:x="1076658046" fg:w="4013907"/><text x="19.4318%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,013,907 samples, 0.07%)</title><rect x="19.1818%" y="1205" width="0.0715%" height="15" fill="rgb(240,92,3)" fg:x="1076658046" fg:w="4013907"/><text x="19.4318%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,013,907 samples, 0.07%)</title><rect x="19.1818%" y="1189" width="0.0715%" height="15" fill="rgb(205,123,3)" fg:x="1076658046" fg:w="4013907"/><text x="19.4318%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,013,907 samples, 0.07%)</title><rect x="19.1818%" y="1173" width="0.0715%" height="15" fill="rgb(205,97,47)" fg:x="1076658046" fg:w="4013907"/><text x="19.4318%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,966,110 samples, 0.04%)</title><rect x="19.2183%" y="1157" width="0.0350%" height="15" fill="rgb(247,152,14)" fg:x="1078705843" fg:w="1966110"/><text x="19.4683%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,966,110 samples, 0.04%)</title><rect x="19.2183%" y="1141" width="0.0350%" height="15" fill="rgb(248,195,53)" fg:x="1078705843" fg:w="1966110"/><text x="19.4683%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,966,110 samples, 0.04%)</title><rect x="19.2183%" y="1125" width="0.0350%" height="15" fill="rgb(226,201,16)" fg:x="1078705843" fg:w="1966110"/><text x="19.4683%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,966,110 samples, 0.04%)</title><rect x="19.2183%" y="1109" width="0.0350%" height="15" fill="rgb(205,98,0)" fg:x="1078705843" fg:w="1966110"/><text x="19.4683%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,966,110 samples, 0.04%)</title><rect x="19.2183%" y="1093" width="0.0350%" height="15" fill="rgb(214,191,48)" fg:x="1078705843" fg:w="1966110"/><text x="19.4683%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,966,110 samples, 0.04%)</title><rect x="19.2183%" y="1077" width="0.0350%" height="15" fill="rgb(237,112,39)" fg:x="1078705843" fg:w="1966110"/><text x="19.4683%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,966,110 samples, 0.04%)</title><rect x="19.2183%" y="1061" width="0.0350%" height="15" fill="rgb(247,203,27)" fg:x="1078705843" fg:w="1966110"/><text x="19.4683%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (981,991 samples, 0.02%)</title><rect x="19.2358%" y="1045" width="0.0175%" height="15" fill="rgb(235,124,28)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (981,991 samples, 0.02%)</title><rect x="19.2358%" y="1029" width="0.0175%" height="15" fill="rgb(208,207,46)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="1039.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (981,991 samples, 0.02%)</title><rect x="19.2358%" y="1013" width="0.0175%" height="15" fill="rgb(234,176,4)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (981,991 samples, 0.02%)</title><rect x="19.2358%" y="997" width="0.0175%" height="15" fill="rgb(230,133,28)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (981,991 samples, 0.02%)</title><rect x="19.2358%" y="981" width="0.0175%" height="15" fill="rgb(211,137,40)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (981,991 samples, 0.02%)</title><rect x="19.2358%" y="965" width="0.0175%" height="15" fill="rgb(254,35,13)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (981,991 samples, 0.02%)</title><rect x="19.2358%" y="949" width="0.0175%" height="15" fill="rgb(225,49,51)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="959.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (981,991 samples, 0.02%)</title><rect x="19.2358%" y="933" width="0.0175%" height="15" fill="rgb(251,10,15)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="943.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (981,991 samples, 0.02%)</title><rect x="19.2358%" y="917" width="0.0175%" height="15" fill="rgb(228,207,15)" fg:x="1079689962" fg:w="981991"/><text x="19.4858%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (825,382 samples, 0.01%)</title><rect x="19.3080%" y="1237" width="0.0147%" height="15" fill="rgb(241,99,19)" fg:x="1083736952" fg:w="825382"/><text x="19.5580%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (825,382 samples, 0.01%)</title><rect x="19.3080%" y="1221" width="0.0147%" height="15" fill="rgb(207,104,49)" fg:x="1083736952" fg:w="825382"/><text x="19.5580%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (825,382 samples, 0.01%)</title><rect x="19.3080%" y="1205" width="0.0147%" height="15" fill="rgb(234,99,18)" fg:x="1083736952" fg:w="825382"/><text x="19.5580%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,960,064 samples, 0.03%)</title><rect x="19.3227%" y="1125" width="0.0349%" height="15" fill="rgb(213,191,49)" fg:x="1084562334" fg:w="1960064"/><text x="19.5727%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,960,064 samples, 0.03%)</title><rect x="19.3227%" y="1109" width="0.0349%" height="15" fill="rgb(210,226,19)" fg:x="1084562334" fg:w="1960064"/><text x="19.5727%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,367,515 samples, 0.08%)</title><rect x="19.3227%" y="1157" width="0.0778%" height="15" fill="rgb(229,97,18)" fg:x="1084562334" fg:w="4367515"/><text x="19.5727%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,367,515 samples, 0.08%)</title><rect x="19.3227%" y="1141" width="0.0778%" height="15" fill="rgb(211,167,15)" fg:x="1084562334" fg:w="4367515"/><text x="19.5727%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,407,451 samples, 0.04%)</title><rect x="19.3576%" y="1125" width="0.0429%" height="15" fill="rgb(210,169,34)" fg:x="1086522398" fg:w="2407451"/><text x="19.6076%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,407,451 samples, 0.04%)</title><rect x="19.3576%" y="1109" width="0.0429%" height="15" fill="rgb(241,121,31)" fg:x="1086522398" fg:w="2407451"/><text x="19.6076%" y="1119.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,407,451 samples, 0.04%)</title><rect x="19.3576%" y="1093" width="0.0429%" height="15" fill="rgb(232,40,11)" fg:x="1086522398" fg:w="2407451"/><text x="19.6076%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,343,459 samples, 0.02%)</title><rect x="19.4005%" y="1061" width="0.0239%" height="15" fill="rgb(205,86,26)" fg:x="1088929849" fg:w="1343459"/><text x="19.6505%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,343,459 samples, 0.02%)</title><rect x="19.4005%" y="1045" width="0.0239%" height="15" fill="rgb(231,126,28)" fg:x="1088929849" fg:w="1343459"/><text x="19.6505%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,343,459 samples, 0.02%)</title><rect x="19.4005%" y="1029" width="0.0239%" height="15" fill="rgb(219,221,18)" fg:x="1088929849" fg:w="1343459"/><text x="19.6505%" y="1039.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,343,459 samples, 0.02%)</title><rect x="19.4005%" y="1013" width="0.0239%" height="15" fill="rgb(211,40,0)" fg:x="1088929849" fg:w="1343459"/><text x="19.6505%" y="1023.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,343,459 samples, 0.02%)</title><rect x="19.4005%" y="997" width="0.0239%" height="15" fill="rgb(239,85,43)" fg:x="1088929849" fg:w="1343459"/><text x="19.6505%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,169,379 samples, 0.11%)</title><rect x="19.3227%" y="1173" width="0.1099%" height="15" fill="rgb(231,55,21)" fg:x="1084562334" fg:w="6169379"/><text x="19.5727%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,801,864 samples, 0.03%)</title><rect x="19.4005%" y="1157" width="0.0321%" height="15" fill="rgb(225,184,43)" fg:x="1088929849" fg:w="1801864"/><text x="19.6505%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,801,864 samples, 0.03%)</title><rect x="19.4005%" y="1141" width="0.0321%" height="15" fill="rgb(251,158,41)" fg:x="1088929849" fg:w="1801864"/><text x="19.6505%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,801,864 samples, 0.03%)</title><rect x="19.4005%" y="1125" width="0.0321%" height="15" fill="rgb(234,159,37)" fg:x="1088929849" fg:w="1801864"/><text x="19.6505%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,801,864 samples, 0.03%)</title><rect x="19.4005%" y="1109" width="0.0321%" height="15" fill="rgb(216,204,22)" fg:x="1088929849" fg:w="1801864"/><text x="19.6505%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,801,864 samples, 0.03%)</title><rect x="19.4005%" y="1093" width="0.0321%" height="15" fill="rgb(214,17,3)" fg:x="1088929849" fg:w="1801864"/><text x="19.6505%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,801,864 samples, 0.03%)</title><rect x="19.4005%" y="1077" width="0.0321%" height="15" fill="rgb(212,111,17)" fg:x="1088929849" fg:w="1801864"/><text x="19.6505%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11,156,842 samples, 0.20%)</title><rect x="19.2533%" y="1285" width="0.1988%" height="15" fill="rgb(221,157,24)" fg:x="1080671953" fg:w="11156842"/><text x="19.5033%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8,091,843 samples, 0.14%)</title><rect x="19.3080%" y="1269" width="0.1442%" height="15" fill="rgb(252,16,13)" fg:x="1083736952" fg:w="8091843"/><text x="19.5580%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,091,843 samples, 0.14%)</title><rect x="19.3080%" y="1253" width="0.1442%" height="15" fill="rgb(221,62,2)" fg:x="1083736952" fg:w="8091843"/><text x="19.5580%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7,266,461 samples, 0.13%)</title><rect x="19.3227%" y="1237" width="0.1295%" height="15" fill="rgb(247,87,22)" fg:x="1084562334" fg:w="7266461"/><text x="19.5727%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7,266,461 samples, 0.13%)</title><rect x="19.3227%" y="1221" width="0.1295%" height="15" fill="rgb(215,73,9)" fg:x="1084562334" fg:w="7266461"/><text x="19.5727%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7,266,461 samples, 0.13%)</title><rect x="19.3227%" y="1205" width="0.1295%" height="15" fill="rgb(207,175,33)" fg:x="1084562334" fg:w="7266461"/><text x="19.5727%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7,266,461 samples, 0.13%)</title><rect x="19.3227%" y="1189" width="0.1295%" height="15" fill="rgb(243,129,54)" fg:x="1084562334" fg:w="7266461"/><text x="19.5727%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,097,082 samples, 0.02%)</title><rect x="19.4326%" y="1173" width="0.0195%" height="15" fill="rgb(227,119,45)" fg:x="1090731713" fg:w="1097082"/><text x="19.6826%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,097,082 samples, 0.02%)</title><rect x="19.4326%" y="1157" width="0.0195%" height="15" fill="rgb(205,109,36)" fg:x="1090731713" fg:w="1097082"/><text x="19.6826%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,097,082 samples, 0.02%)</title><rect x="19.4326%" y="1141" width="0.0195%" height="15" fill="rgb(205,6,39)" fg:x="1090731713" fg:w="1097082"/><text x="19.6826%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,097,082 samples, 0.02%)</title><rect x="19.4326%" y="1125" width="0.0195%" height="15" fill="rgb(221,32,16)" fg:x="1090731713" fg:w="1097082"/><text x="19.6826%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,097,082 samples, 0.02%)</title><rect x="19.4326%" y="1109" width="0.0195%" height="15" fill="rgb(228,144,50)" fg:x="1090731713" fg:w="1097082"/><text x="19.6826%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (106,236,167 samples, 1.89%)</title><rect x="17.5683%" y="1317" width="1.8927%" height="15" fill="rgb(229,201,53)" fg:x="986094132" fg:w="106236167"/><text x="17.8183%" y="1327.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11,658,346 samples, 0.21%)</title><rect x="19.2533%" y="1301" width="0.2077%" height="15" fill="rgb(249,153,27)" fg:x="1080671953" fg:w="11658346"/><text x="19.5033%" y="1311.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (965,684 samples, 0.02%)</title><rect x="19.4611%" y="1237" width="0.0172%" height="15" fill="rgb(227,106,25)" fg:x="1092330299" fg:w="965684"/><text x="19.7111%" y="1247.50"></text></g><g><title>[libc.so.6] (877,446 samples, 0.02%)</title><rect x="19.4783%" y="1237" width="0.0156%" height="15" fill="rgb(230,65,29)" fg:x="1093295983" fg:w="877446"/><text x="19.7283%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (5,563,596 samples, 0.10%)</title><rect x="19.4611%" y="1253" width="0.0991%" height="15" fill="rgb(221,57,46)" fg:x="1092330299" fg:w="5563596"/><text x="19.7111%" y="1263.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,720,466 samples, 0.07%)</title><rect x="19.4939%" y="1237" width="0.0663%" height="15" fill="rgb(229,161,17)" fg:x="1094173429" fg:w="3720466"/><text x="19.7439%" y="1247.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,720,466 samples, 0.07%)</title><rect x="19.4939%" y="1221" width="0.0663%" height="15" fill="rgb(222,213,11)" fg:x="1094173429" fg:w="3720466"/><text x="19.7439%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,825,053 samples, 0.03%)</title><rect x="19.5602%" y="1221" width="0.0325%" height="15" fill="rgb(235,35,13)" fg:x="1097893895" fg:w="1825053"/><text x="19.8102%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,825,053 samples, 0.03%)</title><rect x="19.5602%" y="1205" width="0.0325%" height="15" fill="rgb(233,158,34)" fg:x="1097893895" fg:w="1825053"/><text x="19.8102%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,809,728 samples, 0.03%)</title><rect x="19.5927%" y="1173" width="0.0322%" height="15" fill="rgb(215,151,48)" fg:x="1099718948" fg:w="1809728"/><text x="19.8427%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,809,728 samples, 0.03%)</title><rect x="19.5927%" y="1157" width="0.0322%" height="15" fill="rgb(229,84,14)" fg:x="1099718948" fg:w="1809728"/><text x="19.8427%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,311,232 samples, 0.04%)</title><rect x="19.5927%" y="1189" width="0.0412%" height="15" fill="rgb(229,68,14)" fg:x="1099718948" fg:w="2311232"/><text x="19.8427%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,427,907 samples, 0.10%)</title><rect x="19.5602%" y="1237" width="0.0967%" height="15" fill="rgb(243,106,26)" fg:x="1097893895" fg:w="5427907"/><text x="19.8102%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,602,854 samples, 0.06%)</title><rect x="19.5927%" y="1221" width="0.0642%" height="15" fill="rgb(206,45,38)" fg:x="1099718948" fg:w="3602854"/><text x="19.8427%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,602,854 samples, 0.06%)</title><rect x="19.5927%" y="1205" width="0.0642%" height="15" fill="rgb(226,6,15)" fg:x="1099718948" fg:w="3602854"/><text x="19.8427%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1189" width="0.0230%" height="15" fill="rgb(232,22,54)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1173" width="0.0230%" height="15" fill="rgb(229,222,32)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1157" width="0.0230%" height="15" fill="rgb(228,62,29)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1141" width="0.0230%" height="15" fill="rgb(251,103,34)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1125" width="0.0230%" height="15" fill="rgb(233,12,30)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1109" width="0.0230%" height="15" fill="rgb(238,52,0)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1093" width="0.0230%" height="15" fill="rgb(223,98,5)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1077" width="0.0230%" height="15" fill="rgb(228,75,37)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1061" width="0.0230%" height="15" fill="rgb(205,115,49)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1045" width="0.0230%" height="15" fill="rgb(250,154,43)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1029" width="0.0230%" height="15" fill="rgb(226,43,29)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1039.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="1013" width="0.0230%" height="15" fill="rgb(249,228,39)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="997" width="0.0230%" height="15" fill="rgb(216,79,43)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="981" width="0.0230%" height="15" fill="rgb(228,95,12)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="991.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="965" width="0.0230%" height="15" fill="rgb(249,221,15)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="949" width="0.0230%" height="15" fill="rgb(233,34,13)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="933" width="0.0230%" height="15" fill="rgb(214,103,39)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="943.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="917" width="0.0230%" height="15" fill="rgb(251,126,39)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,291,622 samples, 0.02%)</title><rect x="19.6339%" y="901" width="0.0230%" height="15" fill="rgb(214,216,36)" fg:x="1102030180" fg:w="1291622"/><text x="19.8839%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,492,906 samples, 0.15%)</title><rect x="19.5602%" y="1253" width="0.1513%" height="15" fill="rgb(220,221,8)" fg:x="1097893895" fg:w="8492906"/><text x="19.8102%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1237" width="0.0546%" height="15" fill="rgb(240,216,3)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1221" width="0.0546%" height="15" fill="rgb(232,218,17)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1205" width="0.0546%" height="15" fill="rgb(229,163,45)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1189" width="0.0546%" height="15" fill="rgb(231,110,42)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1173" width="0.0546%" height="15" fill="rgb(208,170,48)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1157" width="0.0546%" height="15" fill="rgb(239,116,25)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1141" width="0.0546%" height="15" fill="rgb(219,200,50)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1125" width="0.0546%" height="15" fill="rgb(245,200,0)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,064,999 samples, 0.05%)</title><rect x="19.6569%" y="1109" width="0.0546%" height="15" fill="rgb(245,119,33)" fg:x="1103321802" fg:w="3064999"/><text x="19.9069%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,212,186 samples, 0.02%)</title><rect x="19.7370%" y="1189" width="0.0216%" height="15" fill="rgb(231,125,12)" fg:x="1107820508" fg:w="1212186"/><text x="19.9870%" y="1199.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,212,186 samples, 0.02%)</title><rect x="19.7370%" y="1173" width="0.0216%" height="15" fill="rgb(216,96,41)" fg:x="1107820508" fg:w="1212186"/><text x="19.9870%" y="1183.50"></text></g><g><title>malloc (1,212,186 samples, 0.02%)</title><rect x="19.7370%" y="1157" width="0.0216%" height="15" fill="rgb(248,43,45)" fg:x="1107820508" fg:w="1212186"/><text x="19.9870%" y="1167.50"></text></g><g><title>[libc.so.6] (1,212,186 samples, 0.02%)</title><rect x="19.7370%" y="1141" width="0.0216%" height="15" fill="rgb(217,222,7)" fg:x="1107820508" fg:w="1212186"/><text x="19.9870%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,204,163 samples, 0.02%)</title><rect x="19.7586%" y="1173" width="0.0215%" height="15" fill="rgb(233,28,6)" fg:x="1109032694" fg:w="1204163"/><text x="20.0086%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,204,163 samples, 0.02%)</title><rect x="19.7586%" y="1157" width="0.0215%" height="15" fill="rgb(231,218,15)" fg:x="1109032694" fg:w="1204163"/><text x="20.0086%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (867,158 samples, 0.02%)</title><rect x="19.7801%" y="1157" width="0.0154%" height="15" fill="rgb(226,171,48)" fg:x="1110236857" fg:w="867158"/><text x="20.0301%" y="1167.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (867,158 samples, 0.02%)</title><rect x="19.7801%" y="1141" width="0.0154%" height="15" fill="rgb(235,201,9)" fg:x="1110236857" fg:w="867158"/><text x="20.0301%" y="1151.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (867,158 samples, 0.02%)</title><rect x="19.7801%" y="1125" width="0.0154%" height="15" fill="rgb(217,80,15)" fg:x="1110236857" fg:w="867158"/><text x="20.0301%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (990,792 samples, 0.02%)</title><rect x="19.7955%" y="1141" width="0.0177%" height="15" fill="rgb(219,152,8)" fg:x="1111104015" fg:w="990792"/><text x="20.0455%" y="1151.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (990,792 samples, 0.02%)</title><rect x="19.7955%" y="1125" width="0.0177%" height="15" fill="rgb(243,107,38)" fg:x="1111104015" fg:w="990792"/><text x="20.0455%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,924,179 samples, 0.05%)</title><rect x="19.7801%" y="1173" width="0.0521%" height="15" fill="rgb(231,17,5)" fg:x="1110236857" fg:w="2924179"/><text x="20.0301%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,057,021 samples, 0.04%)</title><rect x="19.7955%" y="1157" width="0.0366%" height="15" fill="rgb(209,25,54)" fg:x="1111104015" fg:w="2057021"/><text x="20.0455%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1141" width="0.0190%" height="15" fill="rgb(219,0,2)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1125" width="0.0190%" height="15" fill="rgb(246,9,5)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1109" width="0.0190%" height="15" fill="rgb(226,159,4)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1093" width="0.0190%" height="15" fill="rgb(219,175,34)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1077" width="0.0190%" height="15" fill="rgb(236,10,46)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1061" width="0.0190%" height="15" fill="rgb(240,211,16)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1045" width="0.0190%" height="15" fill="rgb(205,3,43)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1029" width="0.0190%" height="15" fill="rgb(245,7,22)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="1013" width="0.0190%" height="15" fill="rgb(239,132,32)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1023.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="997" width="0.0190%" height="15" fill="rgb(228,202,34)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="1007.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,066,229 samples, 0.02%)</title><rect x="19.8132%" y="981" width="0.0190%" height="15" fill="rgb(254,200,22)" fg:x="1112094807" fg:w="1066229"/><text x="20.0632%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,582,791 samples, 0.12%)</title><rect x="19.7586%" y="1189" width="0.1173%" height="15" fill="rgb(219,10,39)" fg:x="1109032694" fg:w="6582791"/><text x="20.0086%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,454,449 samples, 0.04%)</title><rect x="19.8322%" y="1173" width="0.0437%" height="15" fill="rgb(226,210,39)" fg:x="1113161036" fg:w="2454449"/><text x="20.0822%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,454,449 samples, 0.04%)</title><rect x="19.8322%" y="1157" width="0.0437%" height="15" fill="rgb(208,219,16)" fg:x="1113161036" fg:w="2454449"/><text x="20.0822%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,454,449 samples, 0.04%)</title><rect x="19.8322%" y="1141" width="0.0437%" height="15" fill="rgb(216,158,51)" fg:x="1113161036" fg:w="2454449"/><text x="20.0822%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8,792,427 samples, 0.16%)</title><rect x="19.7370%" y="1237" width="0.1566%" height="15" fill="rgb(233,14,44)" fg:x="1107820508" fg:w="8792427"/><text x="19.9870%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8,792,427 samples, 0.16%)</title><rect x="19.7370%" y="1221" width="0.1566%" height="15" fill="rgb(237,97,39)" fg:x="1107820508" fg:w="8792427"/><text x="19.9870%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,792,427 samples, 0.16%)</title><rect x="19.7370%" y="1205" width="0.1566%" height="15" fill="rgb(218,198,43)" fg:x="1107820508" fg:w="8792427"/><text x="19.9870%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (997,450 samples, 0.02%)</title><rect x="19.8759%" y="1189" width="0.0178%" height="15" fill="rgb(231,104,20)" fg:x="1115615485" fg:w="997450"/><text x="20.1259%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (997,450 samples, 0.02%)</title><rect x="19.8759%" y="1173" width="0.0178%" height="15" fill="rgb(254,36,13)" fg:x="1115615485" fg:w="997450"/><text x="20.1259%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (997,450 samples, 0.02%)</title><rect x="19.8759%" y="1157" width="0.0178%" height="15" fill="rgb(248,14,50)" fg:x="1115615485" fg:w="997450"/><text x="20.1259%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (997,450 samples, 0.02%)</title><rect x="19.8759%" y="1141" width="0.0178%" height="15" fill="rgb(217,107,29)" fg:x="1115615485" fg:w="997450"/><text x="20.1259%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (997,450 samples, 0.02%)</title><rect x="19.8759%" y="1125" width="0.0178%" height="15" fill="rgb(251,169,33)" fg:x="1115615485" fg:w="997450"/><text x="20.1259%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (997,450 samples, 0.02%)</title><rect x="19.8759%" y="1109" width="0.0178%" height="15" fill="rgb(217,108,32)" fg:x="1115615485" fg:w="997450"/><text x="20.1259%" y="1119.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (997,450 samples, 0.02%)</title><rect x="19.8759%" y="1093" width="0.0178%" height="15" fill="rgb(219,66,42)" fg:x="1115615485" fg:w="997450"/><text x="20.1259%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (140,338,817 samples, 2.50%)</title><rect x="17.4472%" y="1333" width="2.5003%" height="15" fill="rgb(206,180,7)" fg:x="979293541" fg:w="140338817"/><text x="17.6972%" y="1343.50">ra..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (27,302,059 samples, 0.49%)</title><rect x="19.4611%" y="1317" width="0.4864%" height="15" fill="rgb(208,226,31)" fg:x="1092330299" fg:w="27302059"/><text x="19.7111%" y="1327.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27,302,059 samples, 0.49%)</title><rect x="19.4611%" y="1301" width="0.4864%" height="15" fill="rgb(218,26,49)" fg:x="1092330299" fg:w="27302059"/><text x="19.7111%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27,302,059 samples, 0.49%)</title><rect x="19.4611%" y="1285" width="0.4864%" height="15" fill="rgb(233,197,48)" fg:x="1092330299" fg:w="27302059"/><text x="19.7111%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (27,302,059 samples, 0.49%)</title><rect x="19.4611%" y="1269" width="0.4864%" height="15" fill="rgb(252,181,51)" fg:x="1092330299" fg:w="27302059"/><text x="19.7111%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13,245,557 samples, 0.24%)</title><rect x="19.7115%" y="1253" width="0.2360%" height="15" fill="rgb(253,90,19)" fg:x="1106386801" fg:w="13245557"/><text x="19.9615%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (3,019,423 samples, 0.05%)</title><rect x="19.8937%" y="1237" width="0.0538%" height="15" fill="rgb(215,171,30)" fg:x="1116612935" fg:w="3019423"/><text x="20.1437%" y="1247.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (3,019,423 samples, 0.05%)</title><rect x="19.8937%" y="1221" width="0.0538%" height="15" fill="rgb(214,222,9)" fg:x="1116612935" fg:w="3019423"/><text x="20.1437%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (882,130 samples, 0.02%)</title><rect x="19.9475%" y="1301" width="0.0157%" height="15" fill="rgb(223,3,22)" fg:x="1119632358" fg:w="882130"/><text x="20.1975%" y="1311.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (882,130 samples, 0.02%)</title><rect x="19.9475%" y="1285" width="0.0157%" height="15" fill="rgb(225,196,46)" fg:x="1119632358" fg:w="882130"/><text x="20.1975%" y="1295.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (882,130 samples, 0.02%)</title><rect x="19.9475%" y="1269" width="0.0157%" height="15" fill="rgb(209,110,37)" fg:x="1119632358" fg:w="882130"/><text x="20.1975%" y="1279.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (882,130 samples, 0.02%)</title><rect x="19.9475%" y="1253" width="0.0157%" height="15" fill="rgb(249,89,12)" fg:x="1119632358" fg:w="882130"/><text x="20.1975%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (918,952 samples, 0.02%)</title><rect x="19.9632%" y="1253" width="0.0164%" height="15" fill="rgb(226,27,33)" fg:x="1120514488" fg:w="918952"/><text x="20.2132%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,997,303 samples, 0.04%)</title><rect x="19.9632%" y="1269" width="0.0356%" height="15" fill="rgb(213,82,22)" fg:x="1120514488" fg:w="1997303"/><text x="20.2132%" y="1279.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,078,351 samples, 0.02%)</title><rect x="19.9796%" y="1253" width="0.0192%" height="15" fill="rgb(248,140,0)" fg:x="1121433440" fg:w="1078351"/><text x="20.2296%" y="1263.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,078,351 samples, 0.02%)</title><rect x="19.9796%" y="1237" width="0.0192%" height="15" fill="rgb(228,106,3)" fg:x="1121433440" fg:w="1078351"/><text x="20.2296%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,257,107 samples, 0.02%)</title><rect x="19.9988%" y="1237" width="0.0224%" height="15" fill="rgb(209,23,37)" fg:x="1122511791" fg:w="1257107"/><text x="20.2488%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,324,869 samples, 0.08%)</title><rect x="19.9988%" y="1253" width="0.0771%" height="15" fill="rgb(241,93,50)" fg:x="1122511791" fg:w="4324869"/><text x="20.2488%" y="1263.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,067,762 samples, 0.05%)</title><rect x="20.0212%" y="1237" width="0.0547%" height="15" fill="rgb(253,46,43)" fg:x="1123768898" fg:w="3067762"/><text x="20.2712%" y="1247.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,067,762 samples, 0.05%)</title><rect x="20.0212%" y="1221" width="0.0547%" height="15" fill="rgb(226,206,43)" fg:x="1123768898" fg:w="3067762"/><text x="20.2712%" y="1231.50"></text></g><g><title>__libc_calloc (3,230,302 samples, 0.06%)</title><rect x="20.0758%" y="1221" width="0.0576%" height="15" fill="rgb(217,54,7)" fg:x="1126836660" fg:w="3230302"/><text x="20.3258%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::nth (875,126 samples, 0.02%)</title><rect x="20.1334%" y="1205" width="0.0156%" height="15" fill="rgb(223,5,52)" fg:x="1130066962" fg:w="875126"/><text x="20.3834%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (5,810,521 samples, 0.10%)</title><rect x="20.0758%" y="1237" width="0.1035%" height="15" fill="rgb(206,52,46)" fg:x="1126836660" fg:w="5810521"/><text x="20.3258%" y="1247.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,580,219 samples, 0.05%)</title><rect x="20.1334%" y="1221" width="0.0460%" height="15" fill="rgb(253,136,11)" fg:x="1130066962" fg:w="2580219"/><text x="20.3834%" y="1231.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,705,093 samples, 0.03%)</title><rect x="20.1490%" y="1205" width="0.0304%" height="15" fill="rgb(208,106,33)" fg:x="1130942088" fg:w="1705093"/><text x="20.3990%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,559,835 samples, 0.05%)</title><rect x="20.1793%" y="1221" width="0.0456%" height="15" fill="rgb(206,54,4)" fg:x="1132647181" fg:w="2559835"/><text x="20.4293%" y="1231.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,111,055 samples, 0.02%)</title><rect x="20.2052%" y="1205" width="0.0198%" height="15" fill="rgb(213,3,15)" fg:x="1134095961" fg:w="1111055"/><text x="20.4552%" y="1215.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,111,055 samples, 0.02%)</title><rect x="20.2052%" y="1189" width="0.0198%" height="15" fill="rgb(252,211,39)" fg:x="1134095961" fg:w="1111055"/><text x="20.4552%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,001,644 samples, 0.02%)</title><rect x="20.2249%" y="1189" width="0.0178%" height="15" fill="rgb(223,6,36)" fg:x="1135207016" fg:w="1001644"/><text x="20.4749%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,999,222 samples, 0.04%)</title><rect x="20.2249%" y="1205" width="0.0356%" height="15" fill="rgb(252,169,45)" fg:x="1135207016" fg:w="1999222"/><text x="20.4749%" y="1215.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (997,578 samples, 0.02%)</title><rect x="20.2428%" y="1189" width="0.0178%" height="15" fill="rgb(212,48,26)" fg:x="1136208660" fg:w="997578"/><text x="20.4928%" y="1199.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (997,578 samples, 0.02%)</title><rect x="20.2428%" y="1173" width="0.0178%" height="15" fill="rgb(251,102,48)" fg:x="1136208660" fg:w="997578"/><text x="20.4928%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,140,762 samples, 0.07%)</title><rect x="20.2606%" y="1173" width="0.0738%" height="15" fill="rgb(243,208,16)" fg:x="1137206238" fg:w="4140762"/><text x="20.5106%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,664,103 samples, 0.08%)</title><rect x="20.2606%" y="1189" width="0.0831%" height="15" fill="rgb(219,96,24)" fg:x="1137206238" fg:w="4664103"/><text x="20.5106%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,406,273 samples, 0.15%)</title><rect x="20.2249%" y="1221" width="0.1498%" height="15" fill="rgb(219,33,29)" fg:x="1135207016" fg:w="8406273"/><text x="20.4749%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,407,051 samples, 0.11%)</title><rect x="20.2606%" y="1205" width="0.1141%" height="15" fill="rgb(223,176,5)" fg:x="1137206238" fg:w="6407051"/><text x="20.5106%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,742,948 samples, 0.03%)</title><rect x="20.3437%" y="1189" width="0.0311%" height="15" fill="rgb(228,140,14)" fg:x="1141870341" fg:w="1742948"/><text x="20.5937%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,742,948 samples, 0.03%)</title><rect x="20.3437%" y="1173" width="0.0311%" height="15" fill="rgb(217,179,31)" fg:x="1141870341" fg:w="1742948"/><text x="20.5937%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,742,948 samples, 0.03%)</title><rect x="20.3437%" y="1157" width="0.0311%" height="15" fill="rgb(230,9,30)" fg:x="1141870341" fg:w="1742948"/><text x="20.5937%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,170,217 samples, 0.04%)</title><rect x="20.3747%" y="1157" width="0.0387%" height="15" fill="rgb(230,136,20)" fg:x="1143613289" fg:w="2170217"/><text x="20.6247%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,170,217 samples, 0.04%)</title><rect x="20.3747%" y="1141" width="0.0387%" height="15" fill="rgb(215,210,22)" fg:x="1143613289" fg:w="2170217"/><text x="20.6247%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,170,217 samples, 0.04%)</title><rect x="20.3747%" y="1125" width="0.0387%" height="15" fill="rgb(218,43,5)" fg:x="1143613289" fg:w="2170217"/><text x="20.6247%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,170,217 samples, 0.04%)</title><rect x="20.3747%" y="1109" width="0.0387%" height="15" fill="rgb(216,11,5)" fg:x="1143613289" fg:w="2170217"/><text x="20.6247%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,170,217 samples, 0.04%)</title><rect x="20.3747%" y="1093" width="0.0387%" height="15" fill="rgb(209,82,29)" fg:x="1143613289" fg:w="2170217"/><text x="20.6247%" y="1103.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,170,217 samples, 0.04%)</title><rect x="20.3747%" y="1077" width="0.0387%" height="15" fill="rgb(244,115,12)" fg:x="1143613289" fg:w="2170217"/><text x="20.6247%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14,102,661 samples, 0.25%)</title><rect x="20.1793%" y="1237" width="0.2513%" height="15" fill="rgb(222,82,18)" fg:x="1132647181" fg:w="14102661"/><text x="20.4293%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,136,553 samples, 0.06%)</title><rect x="20.3747%" y="1221" width="0.0559%" height="15" fill="rgb(249,227,8)" fg:x="1143613289" fg:w="3136553"/><text x="20.6247%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,136,553 samples, 0.06%)</title><rect x="20.3747%" y="1205" width="0.0559%" height="15" fill="rgb(253,141,45)" fg:x="1143613289" fg:w="3136553"/><text x="20.6247%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,136,553 samples, 0.06%)</title><rect x="20.3747%" y="1189" width="0.0559%" height="15" fill="rgb(234,184,4)" fg:x="1143613289" fg:w="3136553"/><text x="20.6247%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,136,553 samples, 0.06%)</title><rect x="20.3747%" y="1173" width="0.0559%" height="15" fill="rgb(218,194,23)" fg:x="1143613289" fg:w="3136553"/><text x="20.6247%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1157" width="0.0172%" height="15" fill="rgb(235,66,41)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1141" width="0.0172%" height="15" fill="rgb(245,217,1)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1125" width="0.0172%" height="15" fill="rgb(229,91,1)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1109" width="0.0172%" height="15" fill="rgb(207,101,30)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1093" width="0.0172%" height="15" fill="rgb(223,82,49)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1077" width="0.0172%" height="15" fill="rgb(218,167,17)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1061" width="0.0172%" height="15" fill="rgb(208,103,14)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1045" width="0.0172%" height="15" fill="rgb(238,20,8)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1029" width="0.0172%" height="15" fill="rgb(218,80,54)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,336 samples, 0.02%)</title><rect x="20.4134%" y="1013" width="0.0172%" height="15" fill="rgb(240,144,17)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,336 samples, 0.02%)</title><rect x="20.4134%" y="997" width="0.0172%" height="15" fill="rgb(245,27,50)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,336 samples, 0.02%)</title><rect x="20.4134%" y="981" width="0.0172%" height="15" fill="rgb(251,51,7)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="991.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (966,336 samples, 0.02%)</title><rect x="20.4134%" y="965" width="0.0172%" height="15" fill="rgb(245,217,29)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="975.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (966,336 samples, 0.02%)</title><rect x="20.4134%" y="949" width="0.0172%" height="15" fill="rgb(221,176,29)" fg:x="1145783506" fg:w="966336"/><text x="20.6634%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20,414,686 samples, 0.36%)</title><rect x="20.0758%" y="1253" width="0.3637%" height="15" fill="rgb(212,180,24)" fg:x="1126836660" fg:w="20414686"/><text x="20.3258%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,338,864 samples, 0.02%)</title><rect x="20.4395%" y="1189" width="0.0239%" height="15" fill="rgb(254,24,2)" fg:x="1147251346" fg:w="1338864"/><text x="20.6895%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,338,864 samples, 0.02%)</title><rect x="20.4395%" y="1173" width="0.0239%" height="15" fill="rgb(230,100,2)" fg:x="1147251346" fg:w="1338864"/><text x="20.6895%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26,579,923 samples, 0.47%)</title><rect x="19.9988%" y="1269" width="0.4736%" height="15" fill="rgb(219,142,25)" fg:x="1122511791" fg:w="26579923"/><text x="20.2488%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,840,368 samples, 0.03%)</title><rect x="20.4395%" y="1253" width="0.0328%" height="15" fill="rgb(240,73,43)" fg:x="1147251346" fg:w="1840368"/><text x="20.6895%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,840,368 samples, 0.03%)</title><rect x="20.4395%" y="1237" width="0.0328%" height="15" fill="rgb(214,114,15)" fg:x="1147251346" fg:w="1840368"/><text x="20.6895%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,840,368 samples, 0.03%)</title><rect x="20.4395%" y="1221" width="0.0328%" height="15" fill="rgb(207,130,4)" fg:x="1147251346" fg:w="1840368"/><text x="20.6895%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,840,368 samples, 0.03%)</title><rect x="20.4395%" y="1205" width="0.0328%" height="15" fill="rgb(221,25,40)" fg:x="1147251346" fg:w="1840368"/><text x="20.6895%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,260 samples, 0.02%)</title><rect x="20.4813%" y="1173" width="0.0172%" height="15" fill="rgb(241,184,7)" fg:x="1149593218" fg:w="966260"/><text x="20.7313%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,260 samples, 0.02%)</title><rect x="20.4813%" y="1157" width="0.0172%" height="15" fill="rgb(235,159,4)" fg:x="1149593218" fg:w="966260"/><text x="20.7313%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,260 samples, 0.02%)</title><rect x="20.4813%" y="1141" width="0.0172%" height="15" fill="rgb(214,87,48)" fg:x="1149593218" fg:w="966260"/><text x="20.7313%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (966,260 samples, 0.02%)</title><rect x="20.4813%" y="1125" width="0.0172%" height="15" fill="rgb(246,198,24)" fg:x="1149593218" fg:w="966260"/><text x="20.7313%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (966,260 samples, 0.02%)</title><rect x="20.4813%" y="1109" width="0.0172%" height="15" fill="rgb(209,66,40)" fg:x="1149593218" fg:w="966260"/><text x="20.7313%" y="1119.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (966,260 samples, 0.02%)</title><rect x="20.4813%" y="1093" width="0.0172%" height="15" fill="rgb(233,147,39)" fg:x="1149593218" fg:w="966260"/><text x="20.7313%" y="1103.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (966,260 samples, 0.02%)</title><rect x="20.4813%" y="1077" width="0.0172%" height="15" fill="rgb(231,145,52)" fg:x="1149593218" fg:w="966260"/><text x="20.7313%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,509,270 samples, 0.06%)</title><rect x="20.4813%" y="1205" width="0.0625%" height="15" fill="rgb(206,20,26)" fg:x="1149593218" fg:w="3509270"/><text x="20.7313%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,509,270 samples, 0.06%)</title><rect x="20.4813%" y="1189" width="0.0625%" height="15" fill="rgb(238,220,4)" fg:x="1149593218" fg:w="3509270"/><text x="20.7313%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1173" width="0.0453%" height="15" fill="rgb(252,195,42)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1157" width="0.0453%" height="15" fill="rgb(209,10,6)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1141" width="0.0453%" height="15" fill="rgb(229,3,52)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1125" width="0.0453%" height="15" fill="rgb(253,49,37)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1109" width="0.0453%" height="15" fill="rgb(240,103,49)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1093" width="0.0453%" height="15" fill="rgb(250,182,30)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1077" width="0.0453%" height="15" fill="rgb(248,8,30)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1061" width="0.0453%" height="15" fill="rgb(237,120,30)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1071.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1045" width="0.0453%" height="15" fill="rgb(221,146,34)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1055.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,543,010 samples, 0.05%)</title><rect x="20.4985%" y="1029" width="0.0453%" height="15" fill="rgb(242,55,13)" fg:x="1150559478" fg:w="2543010"/><text x="20.7485%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (796,343 samples, 0.01%)</title><rect x="20.5438%" y="1141" width="0.0142%" height="15" fill="rgb(242,112,31)" fg:x="1153102488" fg:w="796343"/><text x="20.7938%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (796,343 samples, 0.01%)</title><rect x="20.5438%" y="1125" width="0.0142%" height="15" fill="rgb(249,192,27)" fg:x="1153102488" fg:w="796343"/><text x="20.7938%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (796,343 samples, 0.01%)</title><rect x="20.5438%" y="1109" width="0.0142%" height="15" fill="rgb(208,204,44)" fg:x="1153102488" fg:w="796343"/><text x="20.7938%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (796,343 samples, 0.01%)</title><rect x="20.5438%" y="1093" width="0.0142%" height="15" fill="rgb(208,93,54)" fg:x="1153102488" fg:w="796343"/><text x="20.7938%" y="1103.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (796,343 samples, 0.01%)</title><rect x="20.5438%" y="1077" width="0.0142%" height="15" fill="rgb(242,1,31)" fg:x="1153102488" fg:w="796343"/><text x="20.7938%" y="1087.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (796,343 samples, 0.01%)</title><rect x="20.5438%" y="1061" width="0.0142%" height="15" fill="rgb(241,83,25)" fg:x="1153102488" fg:w="796343"/><text x="20.7938%" y="1071.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (796,343 samples, 0.01%)</title><rect x="20.5438%" y="1045" width="0.0142%" height="15" fill="rgb(205,169,50)" fg:x="1153102488" fg:w="796343"/><text x="20.7938%" y="1055.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,799,351 samples, 0.03%)</title><rect x="20.5438%" y="1189" width="0.0321%" height="15" fill="rgb(239,186,37)" fg:x="1153102488" fg:w="1799351"/><text x="20.7938%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,799,351 samples, 0.03%)</title><rect x="20.5438%" y="1173" width="0.0321%" height="15" fill="rgb(205,221,10)" fg:x="1153102488" fg:w="1799351"/><text x="20.7938%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,799,351 samples, 0.03%)</title><rect x="20.5438%" y="1157" width="0.0321%" height="15" fill="rgb(218,196,15)" fg:x="1153102488" fg:w="1799351"/><text x="20.7938%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,003,008 samples, 0.02%)</title><rect x="20.5580%" y="1141" width="0.0179%" height="15" fill="rgb(218,196,35)" fg:x="1153898831" fg:w="1003008"/><text x="20.8080%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,003,008 samples, 0.02%)</title><rect x="20.5580%" y="1125" width="0.0179%" height="15" fill="rgb(233,63,24)" fg:x="1153898831" fg:w="1003008"/><text x="20.8080%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,003,008 samples, 0.02%)</title><rect x="20.5580%" y="1109" width="0.0179%" height="15" fill="rgb(225,8,4)" fg:x="1153898831" fg:w="1003008"/><text x="20.8080%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,003,008 samples, 0.02%)</title><rect x="20.5580%" y="1093" width="0.0179%" height="15" fill="rgb(234,105,35)" fg:x="1153898831" fg:w="1003008"/><text x="20.8080%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (36,175,733 samples, 0.64%)</title><rect x="19.9475%" y="1317" width="0.6445%" height="15" fill="rgb(236,21,32)" fg:x="1119632358" fg:w="36175733"/><text x="20.1975%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35,293,603 samples, 0.63%)</title><rect x="19.9632%" y="1301" width="0.6288%" height="15" fill="rgb(228,109,6)" fg:x="1120514488" fg:w="35293603"/><text x="20.2132%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (35,293,603 samples, 0.63%)</title><rect x="19.9632%" y="1285" width="0.6288%" height="15" fill="rgb(229,215,31)" fg:x="1120514488" fg:w="35293603"/><text x="20.2132%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,716,377 samples, 0.12%)</title><rect x="20.4723%" y="1269" width="0.1197%" height="15" fill="rgb(221,52,54)" fg:x="1149091714" fg:w="6716377"/><text x="20.7223%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,716,377 samples, 0.12%)</title><rect x="20.4723%" y="1253" width="0.1197%" height="15" fill="rgb(252,129,43)" fg:x="1149091714" fg:w="6716377"/><text x="20.7223%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,716,377 samples, 0.12%)</title><rect x="20.4723%" y="1237" width="0.1197%" height="15" fill="rgb(248,183,27)" fg:x="1149091714" fg:w="6716377"/><text x="20.7223%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,716,377 samples, 0.12%)</title><rect x="20.4723%" y="1221" width="0.1197%" height="15" fill="rgb(250,0,22)" fg:x="1149091714" fg:w="6716377"/><text x="20.7223%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,705,603 samples, 0.05%)</title><rect x="20.5438%" y="1205" width="0.0482%" height="15" fill="rgb(213,166,10)" fg:x="1153102488" fg:w="2705603"/><text x="20.7938%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (906,252 samples, 0.02%)</title><rect x="20.5758%" y="1189" width="0.0161%" height="15" fill="rgb(207,163,36)" fg:x="1154901839" fg:w="906252"/><text x="20.8258%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (906,252 samples, 0.02%)</title><rect x="20.5758%" y="1173" width="0.0161%" height="15" fill="rgb(208,122,22)" fg:x="1154901839" fg:w="906252"/><text x="20.8258%" y="1183.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (906,252 samples, 0.02%)</title><rect x="20.5758%" y="1157" width="0.0161%" height="15" fill="rgb(207,104,49)" fg:x="1154901839" fg:w="906252"/><text x="20.8258%" y="1167.50"></text></g><g><title>crossbeam_epoch::default::with_handle (906,252 samples, 0.02%)</title><rect x="20.5758%" y="1141" width="0.0161%" height="15" fill="rgb(248,211,50)" fg:x="1154901839" fg:w="906252"/><text x="20.8258%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (906,252 samples, 0.02%)</title><rect x="20.5758%" y="1125" width="0.0161%" height="15" fill="rgb(217,13,45)" fg:x="1154901839" fg:w="906252"/><text x="20.8258%" y="1135.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (906,252 samples, 0.02%)</title><rect x="20.5758%" y="1109" width="0.0161%" height="15" fill="rgb(211,216,49)" fg:x="1154901839" fg:w="906252"/><text x="20.8258%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,496,405 samples, 0.03%)</title><rect x="20.5920%" y="1301" width="0.0267%" height="15" fill="rgb(221,58,53)" fg:x="1155808091" fg:w="1496405"/><text x="20.8420%" y="1311.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,496,405 samples, 0.03%)</title><rect x="20.5920%" y="1285" width="0.0267%" height="15" fill="rgb(220,112,41)" fg:x="1155808091" fg:w="1496405"/><text x="20.8420%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (185,199,873 samples, 3.30%)</title><rect x="17.3432%" y="1381" width="3.2995%" height="15" fill="rgb(236,38,28)" fg:x="973457579" fg:w="185199873"/><text x="17.5932%" y="1391.50">&lt;ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (183,401,947 samples, 3.27%)</title><rect x="17.3752%" y="1365" width="3.2675%" height="15" fill="rgb(227,195,22)" fg:x="975255505" fg:w="183401947"/><text x="17.6252%" y="1375.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (183,401,947 samples, 3.27%)</title><rect x="17.3752%" y="1349" width="3.2675%" height="15" fill="rgb(214,55,33)" fg:x="975255505" fg:w="183401947"/><text x="17.6252%" y="1359.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (39,025,094 samples, 0.70%)</title><rect x="19.9475%" y="1333" width="0.6953%" height="15" fill="rgb(248,80,13)" fg:x="1119632358" fg:w="39025094"/><text x="20.1975%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,849,361 samples, 0.05%)</title><rect x="20.5920%" y="1317" width="0.0508%" height="15" fill="rgb(238,52,6)" fg:x="1155808091" fg:w="2849361"/><text x="20.8420%" y="1327.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,352,956 samples, 0.02%)</title><rect x="20.6186%" y="1301" width="0.0241%" height="15" fill="rgb(224,198,47)" fg:x="1157304496" fg:w="1352956"/><text x="20.8686%" y="1311.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,352,956 samples, 0.02%)</title><rect x="20.6186%" y="1285" width="0.0241%" height="15" fill="rgb(233,171,20)" fg:x="1157304496" fg:w="1352956"/><text x="20.8686%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,139,869 samples, 0.13%)</title><rect x="20.6427%" y="1365" width="0.1272%" height="15" fill="rgb(241,30,25)" fg:x="1158657452" fg:w="7139869"/><text x="20.8927%" y="1375.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (3,921,360 samples, 0.07%)</title><rect x="20.7001%" y="1349" width="0.0699%" height="15" fill="rgb(207,171,38)" fg:x="1161875961" fg:w="3921360"/><text x="20.9501%" y="1359.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,250,171 samples, 0.04%)</title><rect x="20.7299%" y="1333" width="0.0401%" height="15" fill="rgb(234,70,1)" fg:x="1163547150" fg:w="2250171"/><text x="20.9799%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (8,036,439 samples, 0.14%)</title><rect x="20.6427%" y="1381" width="0.1432%" height="15" fill="rgb(232,178,18)" fg:x="1158657452" fg:w="8036439"/><text x="20.8927%" y="1391.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (896,570 samples, 0.02%)</title><rect x="20.7699%" y="1365" width="0.0160%" height="15" fill="rgb(241,78,40)" fg:x="1165797321" fg:w="896570"/><text x="21.0199%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,048,461,206 samples, 18.68%)</title><rect x="2.1154%" y="1413" width="18.6795%" height="15" fill="rgb(222,35,25)" fg:x="118734189" fg:w="1048461206"/><text x="2.3654%" y="1423.50">rayon_core::join::join_contex..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (193,737,816 samples, 3.45%)</title><rect x="17.3432%" y="1397" width="3.4516%" height="15" fill="rgb(207,92,16)" fg:x="973457579" fg:w="193737816"/><text x="17.5932%" y="1407.50">ray..</text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,403,785 samples, 0.08%)</title><rect x="20.8306%" y="1317" width="0.0785%" height="15" fill="rgb(216,59,51)" fg:x="1169200706" fg:w="4403785"/><text x="21.0806%" y="1327.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (5,801,134 samples, 0.10%)</title><rect x="20.8306%" y="1333" width="0.1034%" height="15" fill="rgb(213,80,28)" fg:x="1169200706" fg:w="5801134"/><text x="21.0806%" y="1343.50"></text></g><g><title>[libc.so.6] (1,397,349 samples, 0.02%)</title><rect x="20.9090%" y="1317" width="0.0249%" height="15" fill="rgb(220,93,7)" fg:x="1173604491" fg:w="1397349"/><text x="21.1590%" y="1327.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,342,311 samples, 0.06%)</title><rect x="20.9414%" y="1301" width="0.0595%" height="15" fill="rgb(225,24,44)" fg:x="1175418432" fg:w="3342311"/><text x="21.1914%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::nth (1,146,970 samples, 0.02%)</title><rect x="21.0009%" y="1285" width="0.0204%" height="15" fill="rgb(243,74,40)" fg:x="1178760743" fg:w="1146970"/><text x="21.2509%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (7,231,173 samples, 0.13%)</title><rect x="20.9414%" y="1317" width="0.1288%" height="15" fill="rgb(228,39,7)" fg:x="1175418432" fg:w="7231173"/><text x="21.1914%" y="1327.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,888,862 samples, 0.07%)</title><rect x="21.0009%" y="1301" width="0.0693%" height="15" fill="rgb(227,79,8)" fg:x="1178760743" fg:w="3888862"/><text x="21.2509%" y="1311.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,741,892 samples, 0.05%)</title><rect x="21.0213%" y="1285" width="0.0488%" height="15" fill="rgb(236,58,11)" fg:x="1179907713" fg:w="2741892"/><text x="21.2713%" y="1295.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (15,654,973 samples, 0.28%)</title><rect x="21.0780%" y="1285" width="0.2789%" height="15" fill="rgb(249,63,35)" fg:x="1183089153" fg:w="15654973"/><text x="21.3280%" y="1295.50"></text></g><g><title>[libc.so.6] (4,961,261 samples, 0.09%)</title><rect x="21.3569%" y="1285" width="0.0884%" height="15" fill="rgb(252,114,16)" fg:x="1198744126" fg:w="4961261"/><text x="21.6069%" y="1295.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (22,058,790 samples, 0.39%)</title><rect x="21.0702%" y="1301" width="0.3930%" height="15" fill="rgb(254,151,24)" fg:x="1182649605" fg:w="22058790"/><text x="21.3202%" y="1311.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,003,008 samples, 0.02%)</title><rect x="21.4453%" y="1285" width="0.0179%" height="15" fill="rgb(253,54,39)" fg:x="1203705387" fg:w="1003008"/><text x="21.6953%" y="1295.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,003,008 samples, 0.02%)</title><rect x="21.4453%" y="1269" width="0.0179%" height="15" fill="rgb(243,25,45)" fg:x="1203705387" fg:w="1003008"/><text x="21.6953%" y="1279.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (15,861,960 samples, 0.28%)</title><rect x="21.4721%" y="1269" width="0.2826%" height="15" fill="rgb(234,134,9)" fg:x="1205209899" fg:w="15861960"/><text x="21.7221%" y="1279.50"></text></g><g><title>[libc.so.6] (2,696,567 samples, 0.05%)</title><rect x="21.7547%" y="1269" width="0.0480%" height="15" fill="rgb(227,166,31)" fg:x="1221071859" fg:w="2696567"/><text x="22.0047%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (27,673,860 samples, 0.49%)</title><rect x="21.4632%" y="1285" width="0.4930%" height="15" fill="rgb(245,143,41)" fg:x="1204708395" fg:w="27673860"/><text x="21.7132%" y="1295.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (8,112,325 samples, 0.14%)</title><rect x="21.8117%" y="1269" width="0.1445%" height="15" fill="rgb(238,181,32)" fg:x="1224269930" fg:w="8112325"/><text x="22.0617%" y="1279.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (6,346,119 samples, 0.11%)</title><rect x="21.8432%" y="1253" width="0.1131%" height="15" fill="rgb(224,113,18)" fg:x="1226036136" fg:w="6346119"/><text x="22.0932%" y="1263.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,332,296 samples, 0.02%)</title><rect x="21.9562%" y="1253" width="0.0237%" height="15" fill="rgb(240,229,28)" fg:x="1232382255" fg:w="1332296"/><text x="22.2062%" y="1263.50"></text></g><g><title>[libc.so.6] (1,332,296 samples, 0.02%)</title><rect x="21.9562%" y="1237" width="0.0237%" height="15" fill="rgb(250,185,3)" fg:x="1232382255" fg:w="1332296"/><text x="22.2062%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (20,921,268 samples, 0.37%)</title><rect x="21.9800%" y="1253" width="0.3727%" height="15" fill="rgb(212,59,25)" fg:x="1233714551" fg:w="20921268"/><text x="22.2300%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (25,264,473 samples, 0.45%)</title><rect x="21.9562%" y="1269" width="0.4501%" height="15" fill="rgb(221,87,20)" fg:x="1232382255" fg:w="25264473"/><text x="22.2062%" y="1279.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,010,909 samples, 0.05%)</title><rect x="22.3527%" y="1253" width="0.0536%" height="15" fill="rgb(213,74,28)" fg:x="1254635819" fg:w="3010909"/><text x="22.6027%" y="1263.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,010,909 samples, 0.05%)</title><rect x="22.3527%" y="1237" width="0.0536%" height="15" fill="rgb(224,132,34)" fg:x="1254635819" fg:w="3010909"/><text x="22.6027%" y="1247.50"></text></g><g><title>__rustc::__rdl_dealloc (1,782,900 samples, 0.03%)</title><rect x="22.4063%" y="1253" width="0.0318%" height="15" fill="rgb(222,101,24)" fg:x="1257646728" fg:w="1782900"/><text x="22.6563%" y="1263.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,347,252 samples, 0.04%)</title><rect x="22.4381%" y="1237" width="0.0418%" height="15" fill="rgb(254,142,4)" fg:x="1259429628" fg:w="2347252"/><text x="22.6881%" y="1247.50"></text></g><g><title>malloc (2,347,252 samples, 0.04%)</title><rect x="22.4381%" y="1221" width="0.0418%" height="15" fill="rgb(230,229,49)" fg:x="1259429628" fg:w="2347252"/><text x="22.6881%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (12,760,045 samples, 0.23%)</title><rect x="22.4799%" y="1237" width="0.2273%" height="15" fill="rgb(238,70,47)" fg:x="1261776880" fg:w="12760045"/><text x="22.7299%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (16,205,058 samples, 0.29%)</title><rect x="22.4381%" y="1253" width="0.2887%" height="15" fill="rgb(231,160,17)" fg:x="1259429628" fg:w="16205058"/><text x="22.6881%" y="1263.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,097,761 samples, 0.02%)</title><rect x="22.7073%" y="1237" width="0.0196%" height="15" fill="rgb(218,68,53)" fg:x="1274536925" fg:w="1097761"/><text x="22.9573%" y="1247.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,097,761 samples, 0.02%)</title><rect x="22.7073%" y="1221" width="0.0196%" height="15" fill="rgb(236,111,10)" fg:x="1274536925" fg:w="1097761"/><text x="22.9573%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,194,286 samples, 0.02%)</title><rect x="22.7268%" y="1253" width="0.0213%" height="15" fill="rgb(224,34,41)" fg:x="1275634686" fg:w="1194286"/><text x="22.9768%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,194,286 samples, 0.02%)</title><rect x="22.7268%" y="1237" width="0.0213%" height="15" fill="rgb(241,118,19)" fg:x="1275634686" fg:w="1194286"/><text x="22.9768%" y="1247.50"></text></g><g><title>[libc.so.6] (1,194,286 samples, 0.02%)</title><rect x="22.7268%" y="1221" width="0.0213%" height="15" fill="rgb(238,129,25)" fg:x="1275634686" fg:w="1194286"/><text x="22.9768%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (884,089 samples, 0.02%)</title><rect x="22.7481%" y="1189" width="0.0158%" height="15" fill="rgb(238,22,31)" fg:x="1276828972" fg:w="884089"/><text x="22.9981%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (884,089 samples, 0.02%)</title><rect x="22.7481%" y="1173" width="0.0158%" height="15" fill="rgb(222,174,48)" fg:x="1276828972" fg:w="884089"/><text x="22.9981%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,510,785 samples, 0.04%)</title><rect x="22.7638%" y="1189" width="0.0447%" height="15" fill="rgb(206,152,40)" fg:x="1277713061" fg:w="2510785"/><text x="23.0138%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,510,785 samples, 0.04%)</title><rect x="22.7638%" y="1173" width="0.0447%" height="15" fill="rgb(218,99,54)" fg:x="1277713061" fg:w="2510785"/><text x="23.0138%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,510,785 samples, 0.04%)</title><rect x="22.7638%" y="1157" width="0.0447%" height="15" fill="rgb(220,174,26)" fg:x="1277713061" fg:w="2510785"/><text x="23.0138%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,510,785 samples, 0.04%)</title><rect x="22.7638%" y="1141" width="0.0447%" height="15" fill="rgb(245,116,9)" fg:x="1277713061" fg:w="2510785"/><text x="23.0138%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,510,785 samples, 0.04%)</title><rect x="22.7638%" y="1125" width="0.0447%" height="15" fill="rgb(209,72,35)" fg:x="1277713061" fg:w="2510785"/><text x="23.0138%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,510,785 samples, 0.04%)</title><rect x="22.7638%" y="1109" width="0.0447%" height="15" fill="rgb(226,126,21)" fg:x="1277713061" fg:w="2510785"/><text x="23.0138%" y="1119.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,510,785 samples, 0.04%)</title><rect x="22.7638%" y="1093" width="0.0447%" height="15" fill="rgb(227,192,1)" fg:x="1277713061" fg:w="2510785"/><text x="23.0138%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23,078,622 samples, 0.41%)</title><rect x="22.4063%" y="1269" width="0.4112%" height="15" fill="rgb(237,180,29)" fg:x="1257646728" fg:w="23078622"/><text x="22.6563%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,896,378 samples, 0.07%)</title><rect x="22.7481%" y="1253" width="0.0694%" height="15" fill="rgb(230,197,35)" fg:x="1276828972" fg:w="3896378"/><text x="22.9981%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,896,378 samples, 0.07%)</title><rect x="22.7481%" y="1237" width="0.0694%" height="15" fill="rgb(246,193,31)" fg:x="1276828972" fg:w="3896378"/><text x="22.9981%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,896,378 samples, 0.07%)</title><rect x="22.7481%" y="1221" width="0.0694%" height="15" fill="rgb(241,36,4)" fg:x="1276828972" fg:w="3896378"/><text x="22.9981%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,896,378 samples, 0.07%)</title><rect x="22.7481%" y="1205" width="0.0694%" height="15" fill="rgb(241,130,17)" fg:x="1276828972" fg:w="3896378"/><text x="22.9981%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (49,936,975 samples, 0.89%)</title><rect x="21.9562%" y="1285" width="0.8897%" height="15" fill="rgb(206,137,32)" fg:x="1232382255" fg:w="49936975"/><text x="22.2062%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1269" width="0.0284%" height="15" fill="rgb(237,228,51)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1253" width="0.0284%" height="15" fill="rgb(243,6,42)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1237" width="0.0284%" height="15" fill="rgb(251,74,28)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1221" width="0.0284%" height="15" fill="rgb(218,20,49)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1205" width="0.0284%" height="15" fill="rgb(238,28,14)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1189" width="0.0284%" height="15" fill="rgb(229,40,46)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1173" width="0.0284%" height="15" fill="rgb(244,195,20)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1157" width="0.0284%" height="15" fill="rgb(253,56,35)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1141" width="0.0284%" height="15" fill="rgb(210,149,44)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1125" width="0.0284%" height="15" fill="rgb(240,135,12)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1109" width="0.0284%" height="15" fill="rgb(251,24,50)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1093" width="0.0284%" height="15" fill="rgb(243,200,47)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1077" width="0.0284%" height="15" fill="rgb(224,166,26)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1087.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1061" width="0.0284%" height="15" fill="rgb(233,0,47)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1071.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,593,880 samples, 0.03%)</title><rect x="22.8175%" y="1045" width="0.0284%" height="15" fill="rgb(253,80,5)" fg:x="1280725350" fg:w="1593880"/><text x="23.0675%" y="1055.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,333,606 samples, 0.02%)</title><rect x="22.8548%" y="1109" width="0.0238%" height="15" fill="rgb(214,133,25)" fg:x="1282820734" fg:w="1333606"/><text x="23.1048%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,333,606 samples, 0.02%)</title><rect x="22.8548%" y="1093" width="0.0238%" height="15" fill="rgb(209,27,14)" fg:x="1282820734" fg:w="1333606"/><text x="23.1048%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,333,606 samples, 0.02%)</title><rect x="22.8548%" y="1077" width="0.0238%" height="15" fill="rgb(219,102,51)" fg:x="1282820734" fg:w="1333606"/><text x="23.1048%" y="1087.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,333,606 samples, 0.02%)</title><rect x="22.8548%" y="1061" width="0.0238%" height="15" fill="rgb(237,18,16)" fg:x="1282820734" fg:w="1333606"/><text x="23.1048%" y="1071.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,333,606 samples, 0.02%)</title><rect x="22.8548%" y="1045" width="0.0238%" height="15" fill="rgb(241,85,17)" fg:x="1282820734" fg:w="1333606"/><text x="23.1048%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,994,484 samples, 0.05%)</title><rect x="22.8459%" y="1221" width="0.0533%" height="15" fill="rgb(236,90,42)" fg:x="1282319230" fg:w="2994484"/><text x="23.0959%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,492,980 samples, 0.04%)</title><rect x="22.8548%" y="1205" width="0.0444%" height="15" fill="rgb(249,57,21)" fg:x="1282820734" fg:w="2492980"/><text x="23.1048%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,492,980 samples, 0.04%)</title><rect x="22.8548%" y="1189" width="0.0444%" height="15" fill="rgb(243,12,36)" fg:x="1282820734" fg:w="2492980"/><text x="23.1048%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,492,980 samples, 0.04%)</title><rect x="22.8548%" y="1173" width="0.0444%" height="15" fill="rgb(253,128,47)" fg:x="1282820734" fg:w="2492980"/><text x="23.1048%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,492,980 samples, 0.04%)</title><rect x="22.8548%" y="1157" width="0.0444%" height="15" fill="rgb(207,33,20)" fg:x="1282820734" fg:w="2492980"/><text x="23.1048%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,492,980 samples, 0.04%)</title><rect x="22.8548%" y="1141" width="0.0444%" height="15" fill="rgb(233,215,35)" fg:x="1282820734" fg:w="2492980"/><text x="23.1048%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,492,980 samples, 0.04%)</title><rect x="22.8548%" y="1125" width="0.0444%" height="15" fill="rgb(249,188,52)" fg:x="1282820734" fg:w="2492980"/><text x="23.1048%" y="1135.50"></text></g><g><title>__sched_yield (1,159,374 samples, 0.02%)</title><rect x="22.8786%" y="1109" width="0.0207%" height="15" fill="rgb(225,12,32)" fg:x="1284154340" fg:w="1159374"/><text x="23.1286%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,222,951 samples, 0.02%)</title><rect x="22.8993%" y="1157" width="0.0218%" height="15" fill="rgb(247,98,14)" fg:x="1285313714" fg:w="1222951"/><text x="23.1493%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,222,951 samples, 0.02%)</title><rect x="22.8993%" y="1141" width="0.0218%" height="15" fill="rgb(247,219,48)" fg:x="1285313714" fg:w="1222951"/><text x="23.1493%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,222,951 samples, 0.02%)</title><rect x="22.8993%" y="1125" width="0.0218%" height="15" fill="rgb(253,60,48)" fg:x="1285313714" fg:w="1222951"/><text x="23.1493%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,222,951 samples, 0.02%)</title><rect x="22.8993%" y="1109" width="0.0218%" height="15" fill="rgb(245,15,52)" fg:x="1285313714" fg:w="1222951"/><text x="23.1493%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,222,951 samples, 0.02%)</title><rect x="22.8993%" y="1093" width="0.0218%" height="15" fill="rgb(220,133,28)" fg:x="1285313714" fg:w="1222951"/><text x="23.1493%" y="1103.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,222,951 samples, 0.02%)</title><rect x="22.8993%" y="1077" width="0.0218%" height="15" fill="rgb(217,180,4)" fg:x="1285313714" fg:w="1222951"/><text x="23.1493%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (82,321,909 samples, 1.47%)</title><rect x="21.4632%" y="1301" width="1.4667%" height="15" fill="rgb(251,24,1)" fg:x="1204708395" fg:w="82321909"/><text x="21.7132%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,711,074 samples, 0.08%)</title><rect x="22.8459%" y="1285" width="0.0839%" height="15" fill="rgb(212,185,49)" fg:x="1282319230" fg:w="4711074"/><text x="23.0959%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,711,074 samples, 0.08%)</title><rect x="22.8459%" y="1269" width="0.0839%" height="15" fill="rgb(215,175,22)" fg:x="1282319230" fg:w="4711074"/><text x="23.0959%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,711,074 samples, 0.08%)</title><rect x="22.8459%" y="1253" width="0.0839%" height="15" fill="rgb(250,205,14)" fg:x="1282319230" fg:w="4711074"/><text x="23.0959%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,711,074 samples, 0.08%)</title><rect x="22.8459%" y="1237" width="0.0839%" height="15" fill="rgb(225,211,22)" fg:x="1282319230" fg:w="4711074"/><text x="23.0959%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,716,590 samples, 0.03%)</title><rect x="22.8993%" y="1221" width="0.0306%" height="15" fill="rgb(251,179,42)" fg:x="1285313714" fg:w="1716590"/><text x="23.1493%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,716,590 samples, 0.03%)</title><rect x="22.8993%" y="1205" width="0.0306%" height="15" fill="rgb(208,216,51)" fg:x="1285313714" fg:w="1716590"/><text x="23.1493%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,716,590 samples, 0.03%)</title><rect x="22.8993%" y="1189" width="0.0306%" height="15" fill="rgb(235,36,11)" fg:x="1285313714" fg:w="1716590"/><text x="23.1493%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,716,590 samples, 0.03%)</title><rect x="22.8993%" y="1173" width="0.0306%" height="15" fill="rgb(213,189,28)" fg:x="1285313714" fg:w="1716590"/><text x="23.1493%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (5,042,923 samples, 0.09%)</title><rect x="22.9298%" y="1173" width="0.0898%" height="15" fill="rgb(227,203,42)" fg:x="1287030304" fg:w="5042923"/><text x="23.1798%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (5,544,427 samples, 0.10%)</title><rect x="22.9298%" y="1189" width="0.0988%" height="15" fill="rgb(244,72,36)" fg:x="1287030304" fg:w="5544427"/><text x="23.1798%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,330,953 samples, 0.15%)</title><rect x="22.9298%" y="1237" width="0.1484%" height="15" fill="rgb(213,53,17)" fg:x="1287030304" fg:w="8330953"/><text x="23.1798%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,330,953 samples, 0.15%)</title><rect x="22.9298%" y="1221" width="0.1484%" height="15" fill="rgb(207,167,3)" fg:x="1287030304" fg:w="8330953"/><text x="23.1798%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,330,953 samples, 0.15%)</title><rect x="22.9298%" y="1205" width="0.1484%" height="15" fill="rgb(216,98,30)" fg:x="1287030304" fg:w="8330953"/><text x="23.1798%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,786,526 samples, 0.05%)</title><rect x="23.0286%" y="1189" width="0.0496%" height="15" fill="rgb(236,123,15)" fg:x="1292574731" fg:w="2786526"/><text x="23.2786%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,289,804 samples, 0.04%)</title><rect x="23.0375%" y="1173" width="0.0408%" height="15" fill="rgb(248,81,50)" fg:x="1293071453" fg:w="2289804"/><text x="23.2875%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,289,804 samples, 0.04%)</title><rect x="23.0375%" y="1157" width="0.0408%" height="15" fill="rgb(214,120,4)" fg:x="1293071453" fg:w="2289804"/><text x="23.2875%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,337,441 samples, 0.02%)</title><rect x="23.0544%" y="1141" width="0.0238%" height="15" fill="rgb(208,179,34)" fg:x="1294023816" fg:w="1337441"/><text x="23.3044%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (115,604,641 samples, 2.06%)</title><rect x="21.0702%" y="1317" width="2.0596%" height="15" fill="rgb(227,140,7)" fg:x="1182649605" fg:w="115604641"/><text x="21.3202%" y="1327.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11,223,942 samples, 0.20%)</title><rect x="22.9298%" y="1301" width="0.2000%" height="15" fill="rgb(214,22,6)" fg:x="1287030304" fg:w="11223942"/><text x="23.1798%" y="1311.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11,223,942 samples, 0.20%)</title><rect x="22.9298%" y="1285" width="0.2000%" height="15" fill="rgb(207,137,27)" fg:x="1287030304" fg:w="11223942"/><text x="23.1798%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11,223,942 samples, 0.20%)</title><rect x="22.9298%" y="1269" width="0.2000%" height="15" fill="rgb(210,8,46)" fg:x="1287030304" fg:w="11223942"/><text x="23.1798%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11,223,942 samples, 0.20%)</title><rect x="22.9298%" y="1253" width="0.2000%" height="15" fill="rgb(240,16,54)" fg:x="1287030304" fg:w="11223942"/><text x="23.1798%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1237" width="0.0515%" height="15" fill="rgb(211,209,29)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1221" width="0.0515%" height="15" fill="rgb(226,228,24)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1205" width="0.0515%" height="15" fill="rgb(222,84,9)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1189" width="0.0515%" height="15" fill="rgb(234,203,30)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1173" width="0.0515%" height="15" fill="rgb(238,109,14)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1157" width="0.0515%" height="15" fill="rgb(233,206,34)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1141" width="0.0515%" height="15" fill="rgb(220,167,47)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,892,989 samples, 0.05%)</title><rect x="23.0783%" y="1125" width="0.0515%" height="15" fill="rgb(238,105,10)" fg:x="1295361257" fg:w="2892989"/><text x="23.3283%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="1109" width="0.0426%" height="15" fill="rgb(213,227,17)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="1093" width="0.0426%" height="15" fill="rgb(217,132,38)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="1077" width="0.0426%" height="15" fill="rgb(242,146,4)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="1061" width="0.0426%" height="15" fill="rgb(212,61,9)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="1045" width="0.0426%" height="15" fill="rgb(247,126,22)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="1029" width="0.0426%" height="15" fill="rgb(220,196,2)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="1013" width="0.0426%" height="15" fill="rgb(208,46,4)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1023.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="997" width="0.0426%" height="15" fill="rgb(252,104,46)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="1007.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,391,485 samples, 0.04%)</title><rect x="23.0872%" y="981" width="0.0426%" height="15" fill="rgb(237,152,48)" fg:x="1295862761" fg:w="2391485"/><text x="23.3372%" y="991.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,568,265 samples, 0.05%)</title><rect x="23.1558%" y="1205" width="0.0458%" height="15" fill="rgb(221,59,37)" fg:x="1299711797" fg:w="2568265"/><text x="23.4058%" y="1215.50"></text></g><g><title>[libc.so.6] (2,568,265 samples, 0.05%)</title><rect x="23.1558%" y="1189" width="0.0458%" height="15" fill="rgb(209,202,51)" fg:x="1299711797" fg:w="2568265"/><text x="23.4058%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,073,220 samples, 0.07%)</title><rect x="23.2015%" y="1189" width="0.0726%" height="15" fill="rgb(228,81,30)" fg:x="1302280062" fg:w="4073220"/><text x="23.4515%" y="1199.50"></text></g><g><title>cfree (4,073,220 samples, 0.07%)</title><rect x="23.2015%" y="1173" width="0.0726%" height="15" fill="rgb(227,42,39)" fg:x="1302280062" fg:w="4073220"/><text x="23.4515%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,324,002 samples, 0.17%)</title><rect x="23.1558%" y="1221" width="0.1661%" height="15" fill="rgb(221,26,2)" fg:x="1299711797" fg:w="9324002"/><text x="23.4058%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,755,737 samples, 0.12%)</title><rect x="23.2015%" y="1205" width="0.1204%" height="15" fill="rgb(254,61,31)" fg:x="1302280062" fg:w="6755737"/><text x="23.4515%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,682,517 samples, 0.05%)</title><rect x="23.2741%" y="1189" width="0.0478%" height="15" fill="rgb(222,173,38)" fg:x="1306353282" fg:w="2682517"/><text x="23.5241%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,682,517 samples, 0.05%)</title><rect x="23.2741%" y="1173" width="0.0478%" height="15" fill="rgb(218,50,12)" fg:x="1306353282" fg:w="2682517"/><text x="23.5241%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,682,517 samples, 0.05%)</title><rect x="23.2741%" y="1157" width="0.0478%" height="15" fill="rgb(223,88,40)" fg:x="1306353282" fg:w="2682517"/><text x="23.5241%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11,839,279 samples, 0.21%)</title><rect x="23.1475%" y="1237" width="0.2109%" height="15" fill="rgb(237,54,19)" fg:x="1299248144" fg:w="11839279"/><text x="23.3975%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,051,624 samples, 0.04%)</title><rect x="23.3219%" y="1221" width="0.0366%" height="15" fill="rgb(251,129,25)" fg:x="1309035799" fg:w="2051624"/><text x="23.5719%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,051,624 samples, 0.04%)</title><rect x="23.3219%" y="1205" width="0.0366%" height="15" fill="rgb(238,97,19)" fg:x="1309035799" fg:w="2051624"/><text x="23.5719%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,051,624 samples, 0.04%)</title><rect x="23.3219%" y="1189" width="0.0366%" height="15" fill="rgb(240,169,18)" fg:x="1309035799" fg:w="2051624"/><text x="23.5719%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,051,624 samples, 0.04%)</title><rect x="23.3219%" y="1173" width="0.0366%" height="15" fill="rgb(230,187,49)" fg:x="1309035799" fg:w="2051624"/><text x="23.5719%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,051,624 samples, 0.04%)</title><rect x="23.3219%" y="1157" width="0.0366%" height="15" fill="rgb(209,44,26)" fg:x="1309035799" fg:w="2051624"/><text x="23.5719%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1141" width="0.0133%" height="15" fill="rgb(244,0,6)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1125" width="0.0133%" height="15" fill="rgb(248,18,21)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1109" width="0.0133%" height="15" fill="rgb(245,180,19)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1093" width="0.0133%" height="15" fill="rgb(252,118,36)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1077" width="0.0133%" height="15" fill="rgb(210,224,19)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1061" width="0.0133%" height="15" fill="rgb(218,30,24)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1071.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1045" width="0.0133%" height="15" fill="rgb(219,75,50)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1029" width="0.0133%" height="15" fill="rgb(234,72,50)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="1013" width="0.0133%" height="15" fill="rgb(219,100,48)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="997" width="0.0133%" height="15" fill="rgb(253,5,41)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (746,026 samples, 0.01%)</title><rect x="23.3452%" y="981" width="0.0133%" height="15" fill="rgb(247,181,11)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="991.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (746,026 samples, 0.01%)</title><rect x="23.3452%" y="965" width="0.0133%" height="15" fill="rgb(222,223,25)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (746,026 samples, 0.01%)</title><rect x="23.3452%" y="949" width="0.0133%" height="15" fill="rgb(214,198,28)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="933" width="0.0133%" height="15" fill="rgb(230,46,43)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="917" width="0.0133%" height="15" fill="rgb(233,65,53)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="901" width="0.0133%" height="15" fill="rgb(221,121,27)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="885" width="0.0133%" height="15" fill="rgb(247,70,47)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="869" width="0.0133%" height="15" fill="rgb(228,85,35)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (746,026 samples, 0.01%)</title><rect x="23.3452%" y="853" width="0.0133%" height="15" fill="rgb(209,50,18)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="863.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (746,026 samples, 0.01%)</title><rect x="23.3452%" y="837" width="0.0133%" height="15" fill="rgb(250,19,35)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="847.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (746,026 samples, 0.01%)</title><rect x="23.3452%" y="821" width="0.0133%" height="15" fill="rgb(253,107,29)" fg:x="1310341397" fg:w="746026"/><text x="23.5952%" y="831.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,209,713 samples, 0.02%)</title><rect x="23.3584%" y="1013" width="0.0216%" height="15" fill="rgb(252,179,29)" fg:x="1311087423" fg:w="1209713"/><text x="23.6084%" y="1023.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,209,713 samples, 0.02%)</title><rect x="23.3584%" y="997" width="0.0216%" height="15" fill="rgb(238,194,6)" fg:x="1311087423" fg:w="1209713"/><text x="23.6084%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1173" width="0.0371%" height="15" fill="rgb(238,164,29)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1157" width="0.0371%" height="15" fill="rgb(224,25,9)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1141" width="0.0371%" height="15" fill="rgb(244,153,23)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1125" width="0.0371%" height="15" fill="rgb(212,203,14)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1109" width="0.0371%" height="15" fill="rgb(220,164,20)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1093" width="0.0371%" height="15" fill="rgb(222,203,48)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1077" width="0.0371%" height="15" fill="rgb(215,159,22)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1061" width="0.0371%" height="15" fill="rgb(216,183,47)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1045" width="0.0371%" height="15" fill="rgb(229,195,25)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,082,491 samples, 0.04%)</title><rect x="23.3584%" y="1029" width="0.0371%" height="15" fill="rgb(224,132,51)" fg:x="1311087423" fg:w="2082491"/><text x="23.6084%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (872,778 samples, 0.02%)</title><rect x="23.3800%" y="1013" width="0.0155%" height="15" fill="rgb(240,63,7)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (872,778 samples, 0.02%)</title><rect x="23.3800%" y="997" width="0.0155%" height="15" fill="rgb(249,182,41)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (872,778 samples, 0.02%)</title><rect x="23.3800%" y="981" width="0.0155%" height="15" fill="rgb(243,47,26)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (872,778 samples, 0.02%)</title><rect x="23.3800%" y="965" width="0.0155%" height="15" fill="rgb(233,48,2)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (872,778 samples, 0.02%)</title><rect x="23.3800%" y="949" width="0.0155%" height="15" fill="rgb(244,165,34)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (872,778 samples, 0.02%)</title><rect x="23.3800%" y="933" width="0.0155%" height="15" fill="rgb(207,89,7)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (872,778 samples, 0.02%)</title><rect x="23.3800%" y="917" width="0.0155%" height="15" fill="rgb(244,117,36)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="927.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (872,778 samples, 0.02%)</title><rect x="23.3800%" y="901" width="0.0155%" height="15" fill="rgb(226,144,34)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="911.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (872,778 samples, 0.02%)</title><rect x="23.3800%" y="885" width="0.0155%" height="15" fill="rgb(213,23,19)" fg:x="1312297136" fg:w="872778"/><text x="23.6300%" y="895.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,604,786 samples, 0.08%)</title><rect x="23.3955%" y="1109" width="0.0820%" height="15" fill="rgb(217,75,12)" fg:x="1313169914" fg:w="4604786"/><text x="23.6455%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5,106,290 samples, 0.09%)</title><rect x="23.3955%" y="1141" width="0.0910%" height="15" fill="rgb(224,159,17)" fg:x="1313169914" fg:w="5106290"/><text x="23.6455%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (5,106,290 samples, 0.09%)</title><rect x="23.3955%" y="1125" width="0.0910%" height="15" fill="rgb(217,118,1)" fg:x="1313169914" fg:w="5106290"/><text x="23.6455%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20,522,484 samples, 0.37%)</title><rect x="23.1386%" y="1253" width="0.3656%" height="15" fill="rgb(232,180,48)" fg:x="1298746640" fg:w="20522484"/><text x="23.3886%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8,181,701 samples, 0.15%)</title><rect x="23.3584%" y="1237" width="0.1458%" height="15" fill="rgb(230,27,33)" fg:x="1311087423" fg:w="8181701"/><text x="23.6084%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8,181,701 samples, 0.15%)</title><rect x="23.3584%" y="1221" width="0.1458%" height="15" fill="rgb(205,31,21)" fg:x="1311087423" fg:w="8181701"/><text x="23.6084%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8,181,701 samples, 0.15%)</title><rect x="23.3584%" y="1205" width="0.1458%" height="15" fill="rgb(253,59,4)" fg:x="1311087423" fg:w="8181701"/><text x="23.6084%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,181,701 samples, 0.15%)</title><rect x="23.3584%" y="1189" width="0.1458%" height="15" fill="rgb(224,201,9)" fg:x="1311087423" fg:w="8181701"/><text x="23.6084%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,099,210 samples, 0.11%)</title><rect x="23.3955%" y="1173" width="0.1087%" height="15" fill="rgb(229,206,30)" fg:x="1313169914" fg:w="6099210"/><text x="23.6455%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,099,210 samples, 0.11%)</title><rect x="23.3955%" y="1157" width="0.1087%" height="15" fill="rgb(212,67,47)" fg:x="1313169914" fg:w="6099210"/><text x="23.6455%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (992,920 samples, 0.02%)</title><rect x="23.4865%" y="1141" width="0.0177%" height="15" fill="rgb(211,96,50)" fg:x="1318276204" fg:w="992920"/><text x="23.7365%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (992,920 samples, 0.02%)</title><rect x="23.4865%" y="1125" width="0.0177%" height="15" fill="rgb(252,114,18)" fg:x="1318276204" fg:w="992920"/><text x="23.7365%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,393,981 samples, 0.02%)</title><rect x="23.5042%" y="1173" width="0.0248%" height="15" fill="rgb(223,58,37)" fg:x="1319269124" fg:w="1393981"/><text x="23.7542%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,393,981 samples, 0.02%)</title><rect x="23.5042%" y="1157" width="0.0248%" height="15" fill="rgb(237,70,4)" fg:x="1319269124" fg:w="1393981"/><text x="23.7542%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (692,717 samples, 0.01%)</title><rect x="23.5290%" y="1157" width="0.0123%" height="15" fill="rgb(244,85,46)" fg:x="1320663105" fg:w="692717"/><text x="23.7790%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (692,717 samples, 0.01%)</title><rect x="23.5290%" y="1141" width="0.0123%" height="15" fill="rgb(223,39,52)" fg:x="1320663105" fg:w="692717"/><text x="23.7790%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,107,927 samples, 0.04%)</title><rect x="23.5290%" y="1173" width="0.0376%" height="15" fill="rgb(218,200,14)" fg:x="1320663105" fg:w="2107927"/><text x="23.7790%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,415,210 samples, 0.03%)</title><rect x="23.5414%" y="1157" width="0.0252%" height="15" fill="rgb(208,171,16)" fg:x="1321355822" fg:w="1415210"/><text x="23.7914%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,415,210 samples, 0.03%)</title><rect x="23.5414%" y="1141" width="0.0252%" height="15" fill="rgb(234,200,18)" fg:x="1321355822" fg:w="1415210"/><text x="23.7914%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,415,210 samples, 0.03%)</title><rect x="23.5414%" y="1125" width="0.0252%" height="15" fill="rgb(228,45,11)" fg:x="1321355822" fg:w="1415210"/><text x="23.7914%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,415,210 samples, 0.03%)</title><rect x="23.5414%" y="1109" width="0.0252%" height="15" fill="rgb(237,182,11)" fg:x="1321355822" fg:w="1415210"/><text x="23.7914%" y="1119.50"></text></g><g><title>[libc.so.6] (1,415,210 samples, 0.03%)</title><rect x="23.5414%" y="1093" width="0.0252%" height="15" fill="rgb(241,175,49)" fg:x="1321355822" fg:w="1415210"/><text x="23.7914%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,366,749 samples, 0.04%)</title><rect x="23.5666%" y="1157" width="0.0422%" height="15" fill="rgb(247,38,35)" fg:x="1322771032" fg:w="2366749"/><text x="23.8166%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,366,749 samples, 0.04%)</title><rect x="23.5666%" y="1141" width="0.0422%" height="15" fill="rgb(228,39,49)" fg:x="1322771032" fg:w="2366749"/><text x="23.8166%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,366,749 samples, 0.04%)</title><rect x="23.5666%" y="1125" width="0.0422%" height="15" fill="rgb(226,101,26)" fg:x="1322771032" fg:w="2366749"/><text x="23.8166%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,366,749 samples, 0.04%)</title><rect x="23.5666%" y="1109" width="0.0422%" height="15" fill="rgb(206,141,19)" fg:x="1322771032" fg:w="2366749"/><text x="23.8166%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,366,749 samples, 0.04%)</title><rect x="23.5666%" y="1093" width="0.0422%" height="15" fill="rgb(211,200,13)" fg:x="1322771032" fg:w="2366749"/><text x="23.8166%" y="1103.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,366,749 samples, 0.04%)</title><rect x="23.5666%" y="1077" width="0.0422%" height="15" fill="rgb(241,121,6)" fg:x="1322771032" fg:w="2366749"/><text x="23.8166%" y="1087.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,366,749 samples, 0.04%)</title><rect x="23.5666%" y="1061" width="0.0422%" height="15" fill="rgb(234,221,29)" fg:x="1322771032" fg:w="2366749"/><text x="23.8166%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,336,198 samples, 0.11%)</title><rect x="23.5042%" y="1189" width="0.1129%" height="15" fill="rgb(229,136,5)" fg:x="1319269124" fg:w="6336198"/><text x="23.7542%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,834,290 samples, 0.05%)</title><rect x="23.5666%" y="1173" width="0.0505%" height="15" fill="rgb(238,36,11)" fg:x="1322771032" fg:w="2834290"/><text x="23.8166%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1173" width="0.0137%" height="15" fill="rgb(251,55,41)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1157" width="0.0137%" height="15" fill="rgb(242,34,40)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1141" width="0.0137%" height="15" fill="rgb(215,42,17)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1125" width="0.0137%" height="15" fill="rgb(207,44,46)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1109" width="0.0137%" height="15" fill="rgb(211,206,28)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1093" width="0.0137%" height="15" fill="rgb(237,167,16)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1103.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1077" width="0.0137%" height="15" fill="rgb(233,66,6)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1087.50"></text></g><g><title>crossbeam_epoch::default::with_handle (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1061" width="0.0137%" height="15" fill="rgb(246,123,29)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1071.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1045" width="0.0137%" height="15" fill="rgb(209,62,40)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1055.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (771,661 samples, 0.01%)</title><rect x="23.6171%" y="1029" width="0.0137%" height="15" fill="rgb(218,4,25)" fg:x="1325605322" fg:w="771661"/><text x="23.8671%" y="1039.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (30,337,275 samples, 0.54%)</title><rect x="23.1298%" y="1301" width="0.5405%" height="15" fill="rgb(253,91,49)" fg:x="1298254246" fg:w="30337275"/><text x="23.3798%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29,844,881 samples, 0.53%)</title><rect x="23.1386%" y="1285" width="0.5317%" height="15" fill="rgb(228,155,29)" fg:x="1298746640" fg:w="29844881"/><text x="23.3886%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29,844,881 samples, 0.53%)</title><rect x="23.1386%" y="1269" width="0.5317%" height="15" fill="rgb(243,57,37)" fg:x="1298746640" fg:w="29844881"/><text x="23.3886%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9,322,397 samples, 0.17%)</title><rect x="23.5042%" y="1253" width="0.1661%" height="15" fill="rgb(244,167,17)" fg:x="1319269124" fg:w="9322397"/><text x="23.7542%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9,322,397 samples, 0.17%)</title><rect x="23.5042%" y="1237" width="0.1661%" height="15" fill="rgb(207,181,38)" fg:x="1319269124" fg:w="9322397"/><text x="23.7542%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9,322,397 samples, 0.17%)</title><rect x="23.5042%" y="1221" width="0.1661%" height="15" fill="rgb(211,8,23)" fg:x="1319269124" fg:w="9322397"/><text x="23.7542%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,322,397 samples, 0.17%)</title><rect x="23.5042%" y="1205" width="0.1661%" height="15" fill="rgb(235,11,44)" fg:x="1319269124" fg:w="9322397"/><text x="23.7542%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,986,199 samples, 0.05%)</title><rect x="23.6171%" y="1189" width="0.0532%" height="15" fill="rgb(248,18,52)" fg:x="1325605322" fg:w="2986199"/><text x="23.8671%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,214,538 samples, 0.04%)</title><rect x="23.6308%" y="1173" width="0.0395%" height="15" fill="rgb(208,4,7)" fg:x="1326376983" fg:w="2214538"/><text x="23.8808%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,214,538 samples, 0.04%)</title><rect x="23.6308%" y="1157" width="0.0395%" height="15" fill="rgb(240,17,39)" fg:x="1326376983" fg:w="2214538"/><text x="23.8808%" y="1167.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,214,538 samples, 0.04%)</title><rect x="23.6308%" y="1141" width="0.0395%" height="15" fill="rgb(207,170,3)" fg:x="1326376983" fg:w="2214538"/><text x="23.8808%" y="1151.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,214,538 samples, 0.04%)</title><rect x="23.6308%" y="1125" width="0.0395%" height="15" fill="rgb(236,100,52)" fg:x="1326376983" fg:w="2214538"/><text x="23.8808%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (31,621,367 samples, 0.56%)</title><rect x="23.1298%" y="1317" width="0.5634%" height="15" fill="rgb(246,78,51)" fg:x="1298254246" fg:w="31621367"/><text x="23.3798%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,284,092 samples, 0.02%)</title><rect x="23.6703%" y="1301" width="0.0229%" height="15" fill="rgb(211,17,15)" fg:x="1328591521" fg:w="1284092"/><text x="23.9203%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,284,092 samples, 0.02%)</title><rect x="23.6703%" y="1285" width="0.0229%" height="15" fill="rgb(209,59,46)" fg:x="1328591521" fg:w="1284092"/><text x="23.9203%" y="1295.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,284,092 samples, 0.02%)</title><rect x="23.6703%" y="1269" width="0.0229%" height="15" fill="rgb(210,92,25)" fg:x="1328591521" fg:w="1284092"/><text x="23.9203%" y="1279.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,284,092 samples, 0.02%)</title><rect x="23.6703%" y="1253" width="0.0229%" height="15" fill="rgb(238,174,52)" fg:x="1328591521" fg:w="1284092"/><text x="23.9203%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (155,375,277 samples, 2.77%)</title><rect x="20.9339%" y="1333" width="2.7682%" height="15" fill="rgb(230,73,7)" fg:x="1175001840" fg:w="155375277"/><text x="21.1839%" y="1343.50">ra..</text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,573,684 samples, 0.05%)</title><rect x="23.7200%" y="1221" width="0.0459%" height="15" fill="rgb(243,124,40)" fg:x="1331380125" fg:w="2573684"/><text x="23.9700%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (5,599,472 samples, 0.10%)</title><rect x="23.7200%" y="1237" width="0.0998%" height="15" fill="rgb(244,170,11)" fg:x="1331380125" fg:w="5599472"/><text x="23.9700%" y="1247.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,025,788 samples, 0.05%)</title><rect x="23.7658%" y="1221" width="0.0539%" height="15" fill="rgb(207,114,54)" fg:x="1333953809" fg:w="3025788"/><text x="24.0158%" y="1231.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,025,788 samples, 0.05%)</title><rect x="23.7658%" y="1205" width="0.0539%" height="15" fill="rgb(205,42,20)" fg:x="1333953809" fg:w="3025788"/><text x="24.0158%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,552,278 samples, 0.03%)</title><rect x="23.8350%" y="1221" width="0.0277%" height="15" fill="rgb(230,30,28)" fg:x="1337836376" fg:w="1552278"/><text x="24.0850%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,552,278 samples, 0.03%)</title><rect x="23.8350%" y="1205" width="0.0277%" height="15" fill="rgb(205,73,54)" fg:x="1337836376" fg:w="1552278"/><text x="24.0850%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,727,952 samples, 0.08%)</title><rect x="23.8627%" y="1205" width="0.0842%" height="15" fill="rgb(254,227,23)" fg:x="1339388654" fg:w="4727952"/><text x="24.1127%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,727,952 samples, 0.08%)</title><rect x="23.8627%" y="1189" width="0.0842%" height="15" fill="rgb(228,202,34)" fg:x="1339388654" fg:w="4727952"/><text x="24.1127%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,282,791 samples, 0.02%)</title><rect x="23.9469%" y="1173" width="0.0229%" height="15" fill="rgb(222,225,37)" fg:x="1344116606" fg:w="1282791"/><text x="24.1969%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,694,847 samples, 0.05%)</title><rect x="23.9469%" y="1189" width="0.0480%" height="15" fill="rgb(221,14,54)" fg:x="1344116606" fg:w="2694847"/><text x="24.1969%" y="1199.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,412,056 samples, 0.03%)</title><rect x="23.9698%" y="1173" width="0.0252%" height="15" fill="rgb(254,102,2)" fg:x="1345399397" fg:w="1412056"/><text x="24.2198%" y="1183.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,412,056 samples, 0.03%)</title><rect x="23.9698%" y="1157" width="0.0252%" height="15" fill="rgb(232,104,17)" fg:x="1345399397" fg:w="1412056"/><text x="24.2198%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,424,233 samples, 0.15%)</title><rect x="23.8627%" y="1221" width="0.1501%" height="15" fill="rgb(250,220,14)" fg:x="1339388654" fg:w="8424233"/><text x="24.1127%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,696,281 samples, 0.07%)</title><rect x="23.9469%" y="1205" width="0.0659%" height="15" fill="rgb(241,158,9)" fg:x="1344116606" fg:w="3696281"/><text x="24.1969%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,001,434 samples, 0.02%)</title><rect x="23.9949%" y="1189" width="0.0178%" height="15" fill="rgb(246,9,43)" fg:x="1346811453" fg:w="1001434"/><text x="24.2449%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,001,434 samples, 0.02%)</title><rect x="23.9949%" y="1173" width="0.0178%" height="15" fill="rgb(206,73,33)" fg:x="1346811453" fg:w="1001434"/><text x="24.2449%" y="1183.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,001,434 samples, 0.02%)</title><rect x="23.9949%" y="1157" width="0.0178%" height="15" fill="rgb(222,79,8)" fg:x="1346811453" fg:w="1001434"/><text x="24.2449%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17,872,293 samples, 0.32%)</title><rect x="23.7200%" y="1253" width="0.3184%" height="15" fill="rgb(234,8,54)" fg:x="1331380125" fg:w="17872293"/><text x="23.9700%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12,272,821 samples, 0.22%)</title><rect x="23.8197%" y="1237" width="0.2187%" height="15" fill="rgb(209,134,38)" fg:x="1336979597" fg:w="12272821"/><text x="24.0697%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1221" width="0.0256%" height="15" fill="rgb(230,127,29)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1205" width="0.0256%" height="15" fill="rgb(242,44,41)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1189" width="0.0256%" height="15" fill="rgb(222,56,43)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1173" width="0.0256%" height="15" fill="rgb(238,39,47)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1157" width="0.0256%" height="15" fill="rgb(226,79,43)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1141" width="0.0256%" height="15" fill="rgb(242,105,53)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1125" width="0.0256%" height="15" fill="rgb(251,132,46)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1109" width="0.0256%" height="15" fill="rgb(231,77,14)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1093" width="0.0256%" height="15" fill="rgb(240,135,9)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1103.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,439,531 samples, 0.03%)</title><rect x="24.0128%" y="1077" width="0.0256%" height="15" fill="rgb(248,109,14)" fg:x="1347812887" fg:w="1439531"/><text x="24.2628%" y="1087.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,037,181 samples, 0.04%)</title><rect x="24.0473%" y="1173" width="0.0363%" height="15" fill="rgb(227,146,52)" fg:x="1349753922" fg:w="2037181"/><text x="24.2973%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,037,181 samples, 0.04%)</title><rect x="24.0473%" y="1157" width="0.0363%" height="15" fill="rgb(232,54,3)" fg:x="1349753922" fg:w="2037181"/><text x="24.2973%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,643,876 samples, 0.06%)</title><rect x="24.0473%" y="1189" width="0.0649%" height="15" fill="rgb(229,201,43)" fg:x="1349753922" fg:w="3643876"/><text x="24.2973%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1173" width="0.0286%" height="15" fill="rgb(252,161,33)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1157" width="0.0286%" height="15" fill="rgb(226,146,40)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1141" width="0.0286%" height="15" fill="rgb(219,47,25)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1125" width="0.0286%" height="15" fill="rgb(250,135,13)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1109" width="0.0286%" height="15" fill="rgb(219,229,18)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1093" width="0.0286%" height="15" fill="rgb(217,152,27)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1077" width="0.0286%" height="15" fill="rgb(225,71,47)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1061" width="0.0286%" height="15" fill="rgb(220,139,14)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1045" width="0.0286%" height="15" fill="rgb(247,54,32)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1029" width="0.0286%" height="15" fill="rgb(252,131,39)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="1013" width="0.0286%" height="15" fill="rgb(210,108,39)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="997" width="0.0286%" height="15" fill="rgb(205,23,29)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="981" width="0.0286%" height="15" fill="rgb(246,139,46)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="965" width="0.0286%" height="15" fill="rgb(250,81,26)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="949" width="0.0286%" height="15" fill="rgb(214,104,7)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="959.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="933" width="0.0286%" height="15" fill="rgb(233,189,8)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="917" width="0.0286%" height="15" fill="rgb(228,141,17)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="901" width="0.0286%" height="15" fill="rgb(247,157,1)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="885" width="0.0286%" height="15" fill="rgb(249,225,5)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="869" width="0.0286%" height="15" fill="rgb(242,55,13)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="853" width="0.0286%" height="15" fill="rgb(230,49,50)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="863.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="837" width="0.0286%" height="15" fill="rgb(241,111,38)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="847.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="821" width="0.0286%" height="15" fill="rgb(252,155,4)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="831.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="805" width="0.0286%" height="15" fill="rgb(212,69,32)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="815.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1,606,695 samples, 0.03%)</title><rect x="24.0836%" y="789" width="0.0286%" height="15" fill="rgb(243,107,47)" fg:x="1351791103" fg:w="1606695"/><text x="24.3336%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24,929,106 samples, 0.44%)</title><rect x="23.7110%" y="1269" width="0.4441%" height="15" fill="rgb(247,130,12)" fg:x="1330878621" fg:w="24929106"/><text x="23.9610%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,555,309 samples, 0.12%)</title><rect x="24.0384%" y="1253" width="0.1168%" height="15" fill="rgb(233,74,16)" fg:x="1349252418" fg:w="6555309"/><text x="24.2884%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,555,309 samples, 0.12%)</title><rect x="24.0384%" y="1237" width="0.1168%" height="15" fill="rgb(208,58,18)" fg:x="1349252418" fg:w="6555309"/><text x="24.2884%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,053,805 samples, 0.11%)</title><rect x="24.0473%" y="1221" width="0.1079%" height="15" fill="rgb(242,225,1)" fg:x="1349753922" fg:w="6053805"/><text x="24.2973%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,053,805 samples, 0.11%)</title><rect x="24.0473%" y="1205" width="0.1079%" height="15" fill="rgb(249,39,40)" fg:x="1349753922" fg:w="6053805"/><text x="24.2973%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1189" width="0.0429%" height="15" fill="rgb(207,72,44)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1173" width="0.0429%" height="15" fill="rgb(215,193,12)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1157" width="0.0429%" height="15" fill="rgb(248,41,39)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1141" width="0.0429%" height="15" fill="rgb(253,85,4)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1125" width="0.0429%" height="15" fill="rgb(243,70,31)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1109" width="0.0429%" height="15" fill="rgb(253,195,26)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1093" width="0.0429%" height="15" fill="rgb(243,42,11)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1103.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1077" width="0.0429%" height="15" fill="rgb(239,66,17)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1087.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1061" width="0.0429%" height="15" fill="rgb(217,132,21)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1071.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (2,409,929 samples, 0.04%)</title><rect x="24.1123%" y="1045" width="0.0429%" height="15" fill="rgb(252,202,21)" fg:x="1353397798" fg:w="2409929"/><text x="24.3623%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,327,122 samples, 0.02%)</title><rect x="24.1552%" y="1237" width="0.0236%" height="15" fill="rgb(233,98,36)" fg:x="1355807727" fg:w="1327122"/><text x="24.4052%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,327,122 samples, 0.02%)</title><rect x="24.1552%" y="1221" width="0.0236%" height="15" fill="rgb(216,153,54)" fg:x="1355807727" fg:w="1327122"/><text x="24.4052%" y="1231.50"></text></g><g><title>cfree (1,327,122 samples, 0.02%)</title><rect x="24.1552%" y="1205" width="0.0236%" height="15" fill="rgb(250,99,7)" fg:x="1355807727" fg:w="1327122"/><text x="24.4052%" y="1215.50"></text></g><g><title>[libc.so.6] (1,327,122 samples, 0.02%)</title><rect x="24.1552%" y="1189" width="0.0236%" height="15" fill="rgb(207,56,50)" fg:x="1355807727" fg:w="1327122"/><text x="24.4052%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,836,178 samples, 0.03%)</title><rect x="24.1788%" y="1189" width="0.0327%" height="15" fill="rgb(244,61,34)" fg:x="1357134849" fg:w="1836178"/><text x="24.4288%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,836,178 samples, 0.03%)</title><rect x="24.1788%" y="1173" width="0.0327%" height="15" fill="rgb(241,50,38)" fg:x="1357134849" fg:w="1836178"/><text x="24.4288%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,836,178 samples, 0.03%)</title><rect x="24.1788%" y="1157" width="0.0327%" height="15" fill="rgb(212,166,30)" fg:x="1357134849" fg:w="1836178"/><text x="24.4288%" y="1167.50"></text></g><g><title>[libc.so.6] (1,836,178 samples, 0.03%)</title><rect x="24.1788%" y="1141" width="0.0327%" height="15" fill="rgb(249,127,32)" fg:x="1357134849" fg:w="1836178"/><text x="24.4288%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,118,977 samples, 0.07%)</title><rect x="24.1788%" y="1205" width="0.0734%" height="15" fill="rgb(209,103,0)" fg:x="1357134849" fg:w="4118977"/><text x="24.4288%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,282,799 samples, 0.04%)</title><rect x="24.2115%" y="1189" width="0.0407%" height="15" fill="rgb(238,209,51)" fg:x="1358971027" fg:w="2282799"/><text x="24.4615%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,282,799 samples, 0.04%)</title><rect x="24.2115%" y="1173" width="0.0407%" height="15" fill="rgb(237,56,23)" fg:x="1358971027" fg:w="2282799"/><text x="24.4615%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,282,799 samples, 0.04%)</title><rect x="24.2115%" y="1157" width="0.0407%" height="15" fill="rgb(215,153,46)" fg:x="1358971027" fg:w="2282799"/><text x="24.4615%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,282,799 samples, 0.04%)</title><rect x="24.2115%" y="1141" width="0.0407%" height="15" fill="rgb(224,49,31)" fg:x="1358971027" fg:w="2282799"/><text x="24.4615%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,282,799 samples, 0.04%)</title><rect x="24.2115%" y="1125" width="0.0407%" height="15" fill="rgb(250,18,42)" fg:x="1358971027" fg:w="2282799"/><text x="24.4615%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="1109" width="0.0317%" height="15" fill="rgb(215,176,39)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="1093" width="0.0317%" height="15" fill="rgb(223,77,29)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="1077" width="0.0317%" height="15" fill="rgb(234,94,52)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="1061" width="0.0317%" height="15" fill="rgb(220,154,50)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="1045" width="0.0317%" height="15" fill="rgb(212,11,10)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="1029" width="0.0317%" height="15" fill="rgb(205,166,19)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="1013" width="0.0317%" height="15" fill="rgb(244,198,16)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="997" width="0.0317%" height="15" fill="rgb(219,69,12)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="1007.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="981" width="0.0317%" height="15" fill="rgb(245,30,7)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="965" width="0.0317%" height="15" fill="rgb(218,221,48)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="949" width="0.0317%" height="15" fill="rgb(216,66,15)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="933" width="0.0317%" height="15" fill="rgb(226,122,50)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="917" width="0.0317%" height="15" fill="rgb(239,156,16)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="901" width="0.0317%" height="15" fill="rgb(224,27,38)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="885" width="0.0317%" height="15" fill="rgb(224,39,27)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="869" width="0.0317%" height="15" fill="rgb(215,92,29)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="853" width="0.0317%" height="15" fill="rgb(207,159,16)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="837" width="0.0317%" height="15" fill="rgb(238,163,47)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="821" width="0.0317%" height="15" fill="rgb(219,91,49)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="805" width="0.0317%" height="15" fill="rgb(227,167,31)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="815.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="789" width="0.0317%" height="15" fill="rgb(234,80,54)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="773" width="0.0317%" height="15" fill="rgb(212,114,2)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="757" width="0.0317%" height="15" fill="rgb(234,50,24)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="767.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="741" width="0.0317%" height="15" fill="rgb(221,68,8)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="751.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="725" width="0.0317%" height="15" fill="rgb(254,180,31)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="735.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="709" width="0.0317%" height="15" fill="rgb(247,130,50)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="693" width="0.0317%" height="15" fill="rgb(211,109,4)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="703.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="677" width="0.0317%" height="15" fill="rgb(238,50,21)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="687.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="661" width="0.0317%" height="15" fill="rgb(225,57,45)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="671.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,781,295 samples, 0.03%)</title><rect x="24.2205%" y="645" width="0.0317%" height="15" fill="rgb(209,196,50)" fg:x="1359472531" fg:w="1781295"/><text x="24.4705%" y="655.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1125" width="0.0187%" height="15" fill="rgb(242,140,13)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1109" width="0.0187%" height="15" fill="rgb(217,111,7)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1093" width="0.0187%" height="15" fill="rgb(253,193,51)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1077" width="0.0187%" height="15" fill="rgb(252,70,29)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1061" width="0.0187%" height="15" fill="rgb(232,127,12)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1045" width="0.0187%" height="15" fill="rgb(211,180,21)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1055.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1029" width="0.0187%" height="15" fill="rgb(229,72,13)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1039.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,047,114 samples, 0.02%)</title><rect x="24.2612%" y="1013" width="0.0187%" height="15" fill="rgb(240,211,49)" fg:x="1361755330" fg:w="1047114"/><text x="24.5112%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (32,898,839 samples, 0.59%)</title><rect x="23.7021%" y="1317" width="0.5861%" height="15" fill="rgb(219,149,40)" fg:x="1330377117" fg:w="32898839"/><text x="23.9521%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32,397,335 samples, 0.58%)</title><rect x="23.7110%" y="1301" width="0.5772%" height="15" fill="rgb(210,127,46)" fg:x="1330878621" fg:w="32397335"/><text x="23.9610%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (32,397,335 samples, 0.58%)</title><rect x="23.7110%" y="1285" width="0.5772%" height="15" fill="rgb(220,106,7)" fg:x="1330878621" fg:w="32397335"/><text x="23.9610%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7,468,229 samples, 0.13%)</title><rect x="24.1552%" y="1269" width="0.1331%" height="15" fill="rgb(249,31,22)" fg:x="1355807727" fg:w="7468229"/><text x="24.4052%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7,468,229 samples, 0.13%)</title><rect x="24.1552%" y="1253" width="0.1331%" height="15" fill="rgb(253,1,49)" fg:x="1355807727" fg:w="7468229"/><text x="24.4052%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,141,107 samples, 0.11%)</title><rect x="24.1788%" y="1237" width="0.1094%" height="15" fill="rgb(227,144,33)" fg:x="1357134849" fg:w="6141107"/><text x="24.4288%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,141,107 samples, 0.11%)</title><rect x="24.1788%" y="1221" width="0.1094%" height="15" fill="rgb(249,163,44)" fg:x="1357134849" fg:w="6141107"/><text x="24.4288%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,022,130 samples, 0.04%)</title><rect x="24.2522%" y="1205" width="0.0360%" height="15" fill="rgb(234,15,39)" fg:x="1361253826" fg:w="2022130"/><text x="24.5022%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,022,130 samples, 0.04%)</title><rect x="24.2522%" y="1189" width="0.0360%" height="15" fill="rgb(207,66,16)" fg:x="1361253826" fg:w="2022130"/><text x="24.5022%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,022,130 samples, 0.04%)</title><rect x="24.2522%" y="1173" width="0.0360%" height="15" fill="rgb(233,112,24)" fg:x="1361253826" fg:w="2022130"/><text x="24.5022%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,022,130 samples, 0.04%)</title><rect x="24.2522%" y="1157" width="0.0360%" height="15" fill="rgb(230,90,22)" fg:x="1361253826" fg:w="2022130"/><text x="24.5022%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,520,626 samples, 0.03%)</title><rect x="24.2612%" y="1141" width="0.0271%" height="15" fill="rgb(229,61,13)" fg:x="1361755330" fg:w="1520626"/><text x="24.5112%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (195,564,865 samples, 3.48%)</title><rect x="20.8306%" y="1349" width="3.4842%" height="15" fill="rgb(225,57,24)" fg:x="1169200706" fg:w="195564865"/><text x="21.0806%" y="1359.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (34,388,454 samples, 0.61%)</title><rect x="23.7021%" y="1333" width="0.6127%" height="15" fill="rgb(208,169,48)" fg:x="1330377117" fg:w="34388454"/><text x="23.9521%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,489,615 samples, 0.03%)</title><rect x="24.2882%" y="1317" width="0.0265%" height="15" fill="rgb(244,218,51)" fg:x="1363275956" fg:w="1489615"/><text x="24.5382%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,489,615 samples, 0.03%)</title><rect x="24.2882%" y="1301" width="0.0265%" height="15" fill="rgb(214,148,10)" fg:x="1363275956" fg:w="1489615"/><text x="24.5382%" y="1311.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,489,615 samples, 0.03%)</title><rect x="24.2882%" y="1285" width="0.0265%" height="15" fill="rgb(225,174,27)" fg:x="1363275956" fg:w="1489615"/><text x="24.5382%" y="1295.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,489,615 samples, 0.03%)</title><rect x="24.2882%" y="1269" width="0.0265%" height="15" fill="rgb(230,96,26)" fg:x="1363275956" fg:w="1489615"/><text x="24.5382%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,287,185 samples, 0.08%)</title><rect x="24.3237%" y="1269" width="0.0764%" height="15" fill="rgb(232,10,30)" fg:x="1365267075" fg:w="4287185"/><text x="24.5737%" y="1279.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,287,185 samples, 0.08%)</title><rect x="24.3237%" y="1253" width="0.0764%" height="15" fill="rgb(222,8,50)" fg:x="1365267075" fg:w="4287185"/><text x="24.5737%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,961,483 samples, 0.05%)</title><rect x="24.4001%" y="1237" width="0.0528%" height="15" fill="rgb(213,81,27)" fg:x="1369554260" fg:w="2961483"/><text x="24.6501%" y="1247.50"></text></g><g><title>[libc.so.6] (3,064,999 samples, 0.05%)</title><rect x="24.4529%" y="1237" width="0.0546%" height="15" fill="rgb(245,50,10)" fg:x="1372515743" fg:w="3064999"/><text x="24.7029%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (8,522,561 samples, 0.15%)</title><rect x="24.4001%" y="1253" width="0.1518%" height="15" fill="rgb(216,100,18)" fg:x="1369554260" fg:w="8522561"/><text x="24.6501%" y="1263.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (2,496,079 samples, 0.04%)</title><rect x="24.5075%" y="1237" width="0.0445%" height="15" fill="rgb(236,147,54)" fg:x="1375580742" fg:w="2496079"/><text x="24.7575%" y="1247.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,505,776 samples, 0.03%)</title><rect x="24.5251%" y="1221" width="0.0268%" height="15" fill="rgb(205,143,26)" fg:x="1376571045" fg:w="1505776"/><text x="24.7751%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,645,536 samples, 0.08%)</title><rect x="24.5519%" y="1221" width="0.0828%" height="15" fill="rgb(236,26,9)" fg:x="1378076821" fg:w="4645536"/><text x="24.8019%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (5,119,081 samples, 0.09%)</title><rect x="24.5519%" y="1237" width="0.0912%" height="15" fill="rgb(221,165,53)" fg:x="1378076821" fg:w="5119081"/><text x="24.8019%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (6,182,080 samples, 0.11%)</title><rect x="24.6431%" y="1205" width="0.1101%" height="15" fill="rgb(214,110,17)" fg:x="1383195902" fg:w="6182080"/><text x="24.8931%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (9,247,079 samples, 0.16%)</title><rect x="24.6431%" y="1221" width="0.1647%" height="15" fill="rgb(237,197,12)" fg:x="1383195902" fg:w="9247079"/><text x="24.8931%" y="1231.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (3,064,999 samples, 0.05%)</title><rect x="24.7533%" y="1205" width="0.0546%" height="15" fill="rgb(205,84,17)" fg:x="1389377982" fg:w="3064999"/><text x="25.0033%" y="1215.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (3,064,999 samples, 0.05%)</title><rect x="24.7533%" y="1189" width="0.0546%" height="15" fill="rgb(237,18,45)" fg:x="1389377982" fg:w="3064999"/><text x="25.0033%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,457,512 samples, 0.03%)</title><rect x="24.8079%" y="1205" width="0.0260%" height="15" fill="rgb(221,87,14)" fg:x="1392442981" fg:w="1457512"/><text x="25.0579%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,457,512 samples, 0.03%)</title><rect x="24.8079%" y="1189" width="0.0260%" height="15" fill="rgb(238,186,15)" fg:x="1392442981" fg:w="1457512"/><text x="25.0579%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,493,156 samples, 0.04%)</title><rect x="24.8339%" y="1173" width="0.0444%" height="15" fill="rgb(208,115,11)" fg:x="1393900493" fg:w="2493156"/><text x="25.0839%" y="1183.50"></text></g><g><title>[libc.so.6] (1,248,784 samples, 0.02%)</title><rect x="24.8783%" y="1173" width="0.0222%" height="15" fill="rgb(254,175,0)" fg:x="1396393649" fg:w="1248784"/><text x="25.1283%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15,509,990 samples, 0.28%)</title><rect x="24.6431%" y="1237" width="0.2763%" height="15" fill="rgb(227,24,42)" fg:x="1383195902" fg:w="15509990"/><text x="24.8931%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,262,911 samples, 0.11%)</title><rect x="24.8079%" y="1221" width="0.1116%" height="15" fill="rgb(223,211,37)" fg:x="1392442981" fg:w="6262911"/><text x="25.0579%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,805,399 samples, 0.09%)</title><rect x="24.8339%" y="1205" width="0.0856%" height="15" fill="rgb(235,49,27)" fg:x="1393900493" fg:w="4805399"/><text x="25.0839%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,805,399 samples, 0.09%)</title><rect x="24.8339%" y="1189" width="0.0856%" height="15" fill="rgb(254,97,51)" fg:x="1393900493" fg:w="4805399"/><text x="25.0839%" y="1199.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,063,459 samples, 0.02%)</title><rect x="24.9005%" y="1173" width="0.0189%" height="15" fill="rgb(249,51,40)" fg:x="1397642433" fg:w="1063459"/><text x="25.1505%" y="1183.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,063,459 samples, 0.02%)</title><rect x="24.9005%" y="1157" width="0.0189%" height="15" fill="rgb(210,128,45)" fg:x="1397642433" fg:w="1063459"/><text x="25.1505%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,249,123 samples, 0.02%)</title><rect x="24.9195%" y="1173" width="0.0223%" height="15" fill="rgb(224,137,50)" fg:x="1398705892" fg:w="1249123"/><text x="25.1695%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,249,123 samples, 0.02%)</title><rect x="24.9195%" y="1157" width="0.0223%" height="15" fill="rgb(242,15,9)" fg:x="1398705892" fg:w="1249123"/><text x="25.1695%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,249,123 samples, 0.02%)</title><rect x="24.9195%" y="1141" width="0.0223%" height="15" fill="rgb(233,187,41)" fg:x="1398705892" fg:w="1249123"/><text x="25.1695%" y="1151.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,249,123 samples, 0.02%)</title><rect x="24.9195%" y="1125" width="0.0223%" height="15" fill="rgb(227,2,29)" fg:x="1398705892" fg:w="1249123"/><text x="25.1695%" y="1135.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,249,123 samples, 0.02%)</title><rect x="24.9195%" y="1109" width="0.0223%" height="15" fill="rgb(222,70,3)" fg:x="1398705892" fg:w="1249123"/><text x="25.1695%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,750,627 samples, 0.03%)</title><rect x="24.9195%" y="1221" width="0.0312%" height="15" fill="rgb(213,11,42)" fg:x="1398705892" fg:w="1750627"/><text x="25.1695%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,750,627 samples, 0.03%)</title><rect x="24.9195%" y="1205" width="0.0312%" height="15" fill="rgb(225,150,9)" fg:x="1398705892" fg:w="1750627"/><text x="25.1695%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,750,627 samples, 0.03%)</title><rect x="24.9195%" y="1189" width="0.0312%" height="15" fill="rgb(230,162,45)" fg:x="1398705892" fg:w="1750627"/><text x="25.1695%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23,776,228 samples, 0.42%)</title><rect x="24.5519%" y="1253" width="0.4236%" height="15" fill="rgb(222,14,52)" fg:x="1378076821" fg:w="23776228"/><text x="24.8019%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,147,157 samples, 0.06%)</title><rect x="24.9195%" y="1237" width="0.0561%" height="15" fill="rgb(254,198,14)" fg:x="1398705892" fg:w="3147157"/><text x="25.1695%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,396,530 samples, 0.02%)</title><rect x="24.9507%" y="1221" width="0.0249%" height="15" fill="rgb(220,217,30)" fg:x="1400456519" fg:w="1396530"/><text x="25.2007%" y="1231.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,396,530 samples, 0.02%)</title><rect x="24.9507%" y="1205" width="0.0249%" height="15" fill="rgb(215,146,41)" fg:x="1400456519" fg:w="1396530"/><text x="25.2007%" y="1215.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,396,530 samples, 0.02%)</title><rect x="24.9507%" y="1189" width="0.0249%" height="15" fill="rgb(217,27,36)" fg:x="1400456519" fg:w="1396530"/><text x="25.2007%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (32,800,293 samples, 0.58%)</title><rect x="24.4001%" y="1269" width="0.5844%" height="15" fill="rgb(219,218,39)" fg:x="1369554260" fg:w="32800293"/><text x="24.6501%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,802,830 samples, 0.03%)</title><rect x="24.9845%" y="1253" width="0.0321%" height="15" fill="rgb(219,4,42)" fg:x="1402354553" fg:w="1802830"/><text x="25.2345%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,802,830 samples, 0.03%)</title><rect x="24.9845%" y="1237" width="0.0321%" height="15" fill="rgb(249,119,36)" fg:x="1402354553" fg:w="1802830"/><text x="25.2345%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,802,830 samples, 0.03%)</title><rect x="24.9845%" y="1221" width="0.0321%" height="15" fill="rgb(209,23,33)" fg:x="1402354553" fg:w="1802830"/><text x="25.2345%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,363,282 samples, 0.02%)</title><rect x="24.9923%" y="1205" width="0.0243%" height="15" fill="rgb(211,10,0)" fg:x="1402794101" fg:w="1363282"/><text x="25.2423%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,363,282 samples, 0.02%)</title><rect x="24.9923%" y="1189" width="0.0243%" height="15" fill="rgb(208,99,37)" fg:x="1402794101" fg:w="1363282"/><text x="25.2423%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,363,282 samples, 0.02%)</title><rect x="24.9923%" y="1173" width="0.0243%" height="15" fill="rgb(213,132,31)" fg:x="1402794101" fg:w="1363282"/><text x="25.2423%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,363,282 samples, 0.02%)</title><rect x="24.9923%" y="1157" width="0.0243%" height="15" fill="rgb(243,129,40)" fg:x="1402794101" fg:w="1363282"/><text x="25.2423%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1141" width="0.0155%" height="15" fill="rgb(210,66,33)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1125" width="0.0155%" height="15" fill="rgb(209,189,4)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1109" width="0.0155%" height="15" fill="rgb(214,107,37)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1093" width="0.0155%" height="15" fill="rgb(245,88,54)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1077" width="0.0155%" height="15" fill="rgb(205,146,20)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1061" width="0.0155%" height="15" fill="rgb(220,161,25)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1045" width="0.0155%" height="15" fill="rgb(215,152,15)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1055.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1029" width="0.0155%" height="15" fill="rgb(233,192,44)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (868,991 samples, 0.02%)</title><rect x="25.0011%" y="1013" width="0.0155%" height="15" fill="rgb(240,170,46)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (868,991 samples, 0.02%)</title><rect x="25.0011%" y="997" width="0.0155%" height="15" fill="rgb(207,104,33)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (868,991 samples, 0.02%)</title><rect x="25.0011%" y="981" width="0.0155%" height="15" fill="rgb(219,21,39)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="991.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (868,991 samples, 0.02%)</title><rect x="25.0011%" y="965" width="0.0155%" height="15" fill="rgb(214,133,29)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="975.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (868,991 samples, 0.02%)</title><rect x="25.0011%" y="949" width="0.0155%" height="15" fill="rgb(226,93,6)" fg:x="1403288392" fg:w="868991"/><text x="25.2511%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40,939,130 samples, 0.73%)</title><rect x="24.3237%" y="1285" width="0.7294%" height="15" fill="rgb(252,222,34)" fg:x="1365267075" fg:w="40939130"/><text x="24.5737%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,851,652 samples, 0.07%)</title><rect x="24.9845%" y="1269" width="0.0686%" height="15" fill="rgb(252,92,48)" fg:x="1402354553" fg:w="3851652"/><text x="25.2345%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,048,822 samples, 0.04%)</title><rect x="25.0166%" y="1253" width="0.0365%" height="15" fill="rgb(245,223,24)" fg:x="1404157383" fg:w="2048822"/><text x="25.2666%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,048,822 samples, 0.04%)</title><rect x="25.0166%" y="1237" width="0.0365%" height="15" fill="rgb(205,176,3)" fg:x="1404157383" fg:w="2048822"/><text x="25.2666%" y="1247.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,048,822 samples, 0.04%)</title><rect x="25.0166%" y="1221" width="0.0365%" height="15" fill="rgb(235,151,15)" fg:x="1404157383" fg:w="2048822"/><text x="25.2666%" y="1231.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,048,822 samples, 0.04%)</title><rect x="25.0166%" y="1205" width="0.0365%" height="15" fill="rgb(237,209,11)" fg:x="1404157383" fg:w="2048822"/><text x="25.2666%" y="1215.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (2,048,822 samples, 0.04%)</title><rect x="25.0166%" y="1189" width="0.0365%" height="15" fill="rgb(243,227,24)" fg:x="1404157383" fg:w="2048822"/><text x="25.2666%" y="1199.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (2,048,822 samples, 0.04%)</title><rect x="25.0166%" y="1173" width="0.0365%" height="15" fill="rgb(239,193,16)" fg:x="1404157383" fg:w="2048822"/><text x="25.2666%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,824,593 samples, 0.03%)</title><rect x="25.0628%" y="1205" width="0.0325%" height="15" fill="rgb(231,27,9)" fg:x="1406750342" fg:w="1824593"/><text x="25.3128%" y="1215.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,824,593 samples, 0.03%)</title><rect x="25.0628%" y="1189" width="0.0325%" height="15" fill="rgb(219,169,10)" fg:x="1406750342" fg:w="1824593"/><text x="25.3128%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (810,312 samples, 0.01%)</title><rect x="25.0953%" y="1189" width="0.0144%" height="15" fill="rgb(244,229,43)" fg:x="1408574935" fg:w="810312"/><text x="25.3453%" y="1199.50"></text></g><g><title>[libc.so.6] (810,312 samples, 0.01%)</title><rect x="25.0953%" y="1173" width="0.0144%" height="15" fill="rgb(254,38,20)" fg:x="1408574935" fg:w="810312"/><text x="25.3453%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (812,714 samples, 0.01%)</title><rect x="25.1097%" y="1157" width="0.0145%" height="15" fill="rgb(250,47,30)" fg:x="1409385247" fg:w="812714"/><text x="25.3597%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,351,702 samples, 0.04%)</title><rect x="25.1097%" y="1173" width="0.0419%" height="15" fill="rgb(224,124,36)" fg:x="1409385247" fg:w="2351702"/><text x="25.3597%" y="1183.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,538,988 samples, 0.03%)</title><rect x="25.1242%" y="1157" width="0.0274%" height="15" fill="rgb(246,68,51)" fg:x="1410197961" fg:w="1538988"/><text x="25.3742%" y="1167.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (997,534 samples, 0.02%)</title><rect x="25.1339%" y="1141" width="0.0178%" height="15" fill="rgb(253,43,49)" fg:x="1410739415" fg:w="997534"/><text x="25.3839%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,752,407 samples, 0.07%)</title><rect x="25.1097%" y="1189" width="0.0669%" height="15" fill="rgb(219,54,36)" fg:x="1409385247" fg:w="3752407"/><text x="25.3597%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,400,705 samples, 0.02%)</title><rect x="25.1516%" y="1173" width="0.0250%" height="15" fill="rgb(227,133,34)" fg:x="1411736949" fg:w="1400705"/><text x="25.4016%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,400,705 samples, 0.02%)</title><rect x="25.1516%" y="1157" width="0.0250%" height="15" fill="rgb(247,227,15)" fg:x="1411736949" fg:w="1400705"/><text x="25.4016%" y="1167.50"></text></g><g><title>[libc.so.6] (899,201 samples, 0.02%)</title><rect x="25.1606%" y="1141" width="0.0160%" height="15" fill="rgb(229,96,14)" fg:x="1412238453" fg:w="899201"/><text x="25.4106%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,325,917 samples, 0.06%)</title><rect x="25.1766%" y="1109" width="0.0593%" height="15" fill="rgb(220,79,17)" fg:x="1413137654" fg:w="3325917"/><text x="25.4266%" y="1119.50"></text></g><g><title>__libc_calloc (3,325,917 samples, 0.06%)</title><rect x="25.1766%" y="1093" width="0.0593%" height="15" fill="rgb(205,131,53)" fg:x="1413137654" fg:w="3325917"/><text x="25.4266%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,288,614 samples, 0.17%)</title><rect x="25.0953%" y="1205" width="0.1655%" height="15" fill="rgb(209,50,29)" fg:x="1408574935" fg:w="9288614"/><text x="25.3453%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,725,895 samples, 0.08%)</title><rect x="25.1766%" y="1189" width="0.0842%" height="15" fill="rgb(245,86,46)" fg:x="1413137654" fg:w="4725895"/><text x="25.4266%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,725,895 samples, 0.08%)</title><rect x="25.1766%" y="1173" width="0.0842%" height="15" fill="rgb(235,66,46)" fg:x="1413137654" fg:w="4725895"/><text x="25.4266%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,725,895 samples, 0.08%)</title><rect x="25.1766%" y="1157" width="0.0842%" height="15" fill="rgb(232,148,31)" fg:x="1413137654" fg:w="4725895"/><text x="25.4266%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,725,895 samples, 0.08%)</title><rect x="25.1766%" y="1141" width="0.0842%" height="15" fill="rgb(217,149,8)" fg:x="1413137654" fg:w="4725895"/><text x="25.4266%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,725,895 samples, 0.08%)</title><rect x="25.1766%" y="1125" width="0.0842%" height="15" fill="rgb(209,183,11)" fg:x="1413137654" fg:w="4725895"/><text x="25.4266%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="1109" width="0.0249%" height="15" fill="rgb(208,55,20)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="1093" width="0.0249%" height="15" fill="rgb(218,39,14)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="1077" width="0.0249%" height="15" fill="rgb(216,169,33)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="1061" width="0.0249%" height="15" fill="rgb(233,80,24)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="1045" width="0.0249%" height="15" fill="rgb(213,179,31)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="1029" width="0.0249%" height="15" fill="rgb(209,19,5)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="1013" width="0.0249%" height="15" fill="rgb(219,18,35)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,399,978 samples, 0.02%)</title><rect x="25.2358%" y="997" width="0.0249%" height="15" fill="rgb(209,169,16)" fg:x="1416463571" fg:w="1399978"/><text x="25.4858%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (945,699 samples, 0.02%)</title><rect x="25.2439%" y="981" width="0.0168%" height="15" fill="rgb(245,90,51)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="991.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (945,699 samples, 0.02%)</title><rect x="25.2439%" y="965" width="0.0168%" height="15" fill="rgb(220,99,45)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (945,699 samples, 0.02%)</title><rect x="25.2439%" y="949" width="0.0168%" height="15" fill="rgb(249,89,25)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (945,699 samples, 0.02%)</title><rect x="25.2439%" y="933" width="0.0168%" height="15" fill="rgb(239,193,0)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (945,699 samples, 0.02%)</title><rect x="25.2439%" y="917" width="0.0168%" height="15" fill="rgb(231,126,1)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="927.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (945,699 samples, 0.02%)</title><rect x="25.2439%" y="901" width="0.0168%" height="15" fill="rgb(243,166,3)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (945,699 samples, 0.02%)</title><rect x="25.2439%" y="885" width="0.0168%" height="15" fill="rgb(223,22,34)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (945,699 samples, 0.02%)</title><rect x="25.2439%" y="869" width="0.0168%" height="15" fill="rgb(251,52,51)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="879.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (945,699 samples, 0.02%)</title><rect x="25.2439%" y="853" width="0.0168%" height="15" fill="rgb(221,165,28)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="863.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (945,699 samples, 0.02%)</title><rect x="25.2439%" y="837" width="0.0168%" height="15" fill="rgb(218,121,47)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (945,699 samples, 0.02%)</title><rect x="25.2439%" y="821" width="0.0168%" height="15" fill="rgb(209,120,9)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="831.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (945,699 samples, 0.02%)</title><rect x="25.2439%" y="805" width="0.0168%" height="15" fill="rgb(236,68,12)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (945,699 samples, 0.02%)</title><rect x="25.2439%" y="789" width="0.0168%" height="15" fill="rgb(225,194,26)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="799.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (945,699 samples, 0.02%)</title><rect x="25.2439%" y="773" width="0.0168%" height="15" fill="rgb(231,84,39)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="783.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (945,699 samples, 0.02%)</title><rect x="25.2439%" y="757" width="0.0168%" height="15" fill="rgb(210,11,45)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="767.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (945,699 samples, 0.02%)</title><rect x="25.2439%" y="741" width="0.0168%" height="15" fill="rgb(224,54,52)" fg:x="1416917850" fg:w="945699"/><text x="25.4939%" y="751.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,027,002 samples, 0.05%)</title><rect x="25.2608%" y="1141" width="0.0539%" height="15" fill="rgb(238,102,14)" fg:x="1417863549" fg:w="3027002"/><text x="25.5108%" y="1151.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (3,027,002 samples, 0.05%)</title><rect x="25.2608%" y="1125" width="0.0539%" height="15" fill="rgb(243,160,52)" fg:x="1417863549" fg:w="3027002"/><text x="25.5108%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,512,157 samples, 0.03%)</title><rect x="25.3147%" y="1125" width="0.0269%" height="15" fill="rgb(216,114,19)" fg:x="1420890551" fg:w="1512157"/><text x="25.5647%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,512,157 samples, 0.03%)</title><rect x="25.3147%" y="1109" width="0.0269%" height="15" fill="rgb(244,166,37)" fg:x="1420890551" fg:w="1512157"/><text x="25.5647%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,512,157 samples, 0.03%)</title><rect x="25.3147%" y="1093" width="0.0269%" height="15" fill="rgb(246,29,44)" fg:x="1420890551" fg:w="1512157"/><text x="25.5647%" y="1103.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,512,157 samples, 0.03%)</title><rect x="25.3147%" y="1077" width="0.0269%" height="15" fill="rgb(215,56,53)" fg:x="1420890551" fg:w="1512157"/><text x="25.5647%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,957,899 samples, 0.03%)</title><rect x="25.3147%" y="1141" width="0.0349%" height="15" fill="rgb(217,60,2)" fg:x="1420890551" fg:w="1957899"/><text x="25.5647%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17,052,621 samples, 0.30%)</title><rect x="25.0628%" y="1221" width="0.3038%" height="15" fill="rgb(207,26,24)" fg:x="1406750342" fg:w="17052621"/><text x="25.3128%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5,939,414 samples, 0.11%)</title><rect x="25.2608%" y="1205" width="0.1058%" height="15" fill="rgb(252,210,15)" fg:x="1417863549" fg:w="5939414"/><text x="25.5108%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,939,414 samples, 0.11%)</title><rect x="25.2608%" y="1189" width="0.1058%" height="15" fill="rgb(253,209,26)" fg:x="1417863549" fg:w="5939414"/><text x="25.5108%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5,939,414 samples, 0.11%)</title><rect x="25.2608%" y="1173" width="0.1058%" height="15" fill="rgb(238,170,14)" fg:x="1417863549" fg:w="5939414"/><text x="25.5108%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,939,414 samples, 0.11%)</title><rect x="25.2608%" y="1157" width="0.1058%" height="15" fill="rgb(216,178,15)" fg:x="1417863549" fg:w="5939414"/><text x="25.5108%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1141" width="0.0170%" height="15" fill="rgb(250,197,2)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1125" width="0.0170%" height="15" fill="rgb(212,70,42)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1109" width="0.0170%" height="15" fill="rgb(227,213,9)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1093" width="0.0170%" height="15" fill="rgb(245,99,25)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1077" width="0.0170%" height="15" fill="rgb(250,82,29)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1061" width="0.0170%" height="15" fill="rgb(241,226,54)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1045" width="0.0170%" height="15" fill="rgb(221,99,41)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1029" width="0.0170%" height="15" fill="rgb(213,90,21)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (954,513 samples, 0.02%)</title><rect x="25.3496%" y="1013" width="0.0170%" height="15" fill="rgb(205,208,24)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1023.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (954,513 samples, 0.02%)</title><rect x="25.3496%" y="997" width="0.0170%" height="15" fill="rgb(246,31,12)" fg:x="1422848450" fg:w="954513"/><text x="25.5996%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,244,090 samples, 0.02%)</title><rect x="25.3666%" y="1109" width="0.0222%" height="15" fill="rgb(213,154,6)" fg:x="1423802963" fg:w="1244090"/><text x="25.6166%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,244,090 samples, 0.02%)</title><rect x="25.3666%" y="1093" width="0.0222%" height="15" fill="rgb(222,163,29)" fg:x="1423802963" fg:w="1244090"/><text x="25.6166%" y="1103.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,244,090 samples, 0.02%)</title><rect x="25.3666%" y="1077" width="0.0222%" height="15" fill="rgb(227,201,8)" fg:x="1423802963" fg:w="1244090"/><text x="25.6166%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="1045" width="0.0181%" height="15" fill="rgb(233,9,32)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="1029" width="0.0181%" height="15" fill="rgb(217,54,24)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="1013" width="0.0181%" height="15" fill="rgb(235,192,0)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="997" width="0.0181%" height="15" fill="rgb(235,45,9)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="981" width="0.0181%" height="15" fill="rgb(246,42,40)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="991.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="965" width="0.0181%" height="15" fill="rgb(248,111,24)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="949" width="0.0181%" height="15" fill="rgb(249,65,22)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="933" width="0.0181%" height="15" fill="rgb(238,111,51)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="917" width="0.0181%" height="15" fill="rgb(250,118,22)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="901" width="0.0181%" height="15" fill="rgb(234,84,26)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="885" width="0.0181%" height="15" fill="rgb(243,172,12)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="869" width="0.0181%" height="15" fill="rgb(236,150,49)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="879.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="853" width="0.0181%" height="15" fill="rgb(225,197,26)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="863.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,014,084 samples, 0.02%)</title><rect x="25.3888%" y="837" width="0.0181%" height="15" fill="rgb(214,17,42)" fg:x="1425047053" fg:w="1014084"/><text x="25.6388%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,759,678 samples, 0.05%)</title><rect x="25.3666%" y="1141" width="0.0492%" height="15" fill="rgb(224,165,40)" fg:x="1423802963" fg:w="2759678"/><text x="25.6166%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,759,678 samples, 0.05%)</title><rect x="25.3666%" y="1125" width="0.0492%" height="15" fill="rgb(246,100,4)" fg:x="1423802963" fg:w="2759678"/><text x="25.6166%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,515,588 samples, 0.03%)</title><rect x="25.3888%" y="1109" width="0.0270%" height="15" fill="rgb(222,103,0)" fg:x="1425047053" fg:w="1515588"/><text x="25.6388%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,515,588 samples, 0.03%)</title><rect x="25.3888%" y="1093" width="0.0270%" height="15" fill="rgb(227,189,26)" fg:x="1425047053" fg:w="1515588"/><text x="25.6388%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,515,588 samples, 0.03%)</title><rect x="25.3888%" y="1077" width="0.0270%" height="15" fill="rgb(214,202,17)" fg:x="1425047053" fg:w="1515588"/><text x="25.6388%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,515,588 samples, 0.03%)</title><rect x="25.3888%" y="1061" width="0.0270%" height="15" fill="rgb(229,111,3)" fg:x="1425047053" fg:w="1515588"/><text x="25.6388%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,434,312 samples, 0.06%)</title><rect x="25.3666%" y="1157" width="0.0612%" height="15" fill="rgb(229,172,15)" fg:x="1423802963" fg:w="3434312"/><text x="25.6166%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (674,634 samples, 0.01%)</title><rect x="25.4158%" y="1141" width="0.0120%" height="15" fill="rgb(230,224,35)" fg:x="1426562641" fg:w="674634"/><text x="25.6658%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (674,634 samples, 0.01%)</title><rect x="25.4158%" y="1125" width="0.0120%" height="15" fill="rgb(251,141,6)" fg:x="1426562641" fg:w="674634"/><text x="25.6658%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (674,634 samples, 0.01%)</title><rect x="25.4158%" y="1109" width="0.0120%" height="15" fill="rgb(225,208,6)" fg:x="1426562641" fg:w="674634"/><text x="25.6658%" y="1119.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (674,634 samples, 0.01%)</title><rect x="25.4158%" y="1093" width="0.0120%" height="15" fill="rgb(246,181,16)" fg:x="1426562641" fg:w="674634"/><text x="25.6658%" y="1103.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (674,634 samples, 0.01%)</title><rect x="25.4158%" y="1077" width="0.0120%" height="15" fill="rgb(227,129,36)" fg:x="1426562641" fg:w="674634"/><text x="25.6658%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (62,973,208 samples, 1.12%)</title><rect x="24.3148%" y="1333" width="1.1219%" height="15" fill="rgb(248,117,24)" fg:x="1364765571" fg:w="62973208"/><text x="24.5648%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (62,471,704 samples, 1.11%)</title><rect x="24.3237%" y="1317" width="1.1130%" height="15" fill="rgb(214,185,35)" fg:x="1365267075" fg:w="62471704"/><text x="24.5737%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (62,471,704 samples, 1.11%)</title><rect x="24.3237%" y="1301" width="1.1130%" height="15" fill="rgb(236,150,34)" fg:x="1365267075" fg:w="62471704"/><text x="24.5737%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (21,532,574 samples, 0.38%)</title><rect x="25.0531%" y="1285" width="0.3836%" height="15" fill="rgb(243,228,27)" fg:x="1406206205" fg:w="21532574"/><text x="25.3031%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (21,532,574 samples, 0.38%)</title><rect x="25.0531%" y="1269" width="0.3836%" height="15" fill="rgb(245,77,44)" fg:x="1406206205" fg:w="21532574"/><text x="25.3031%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21,532,574 samples, 0.38%)</title><rect x="25.0531%" y="1253" width="0.3836%" height="15" fill="rgb(235,214,42)" fg:x="1406206205" fg:w="21532574"/><text x="25.3031%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21,532,574 samples, 0.38%)</title><rect x="25.0531%" y="1237" width="0.3836%" height="15" fill="rgb(221,74,3)" fg:x="1406206205" fg:w="21532574"/><text x="25.3031%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,935,816 samples, 0.07%)</title><rect x="25.3666%" y="1221" width="0.0701%" height="15" fill="rgb(206,121,29)" fg:x="1423802963" fg:w="3935816"/><text x="25.6166%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,935,816 samples, 0.07%)</title><rect x="25.3666%" y="1205" width="0.0701%" height="15" fill="rgb(249,131,53)" fg:x="1423802963" fg:w="3935816"/><text x="25.6166%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,935,816 samples, 0.07%)</title><rect x="25.3666%" y="1189" width="0.0701%" height="15" fill="rgb(236,170,29)" fg:x="1423802963" fg:w="3935816"/><text x="25.6166%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,935,816 samples, 0.07%)</title><rect x="25.3666%" y="1173" width="0.0701%" height="15" fill="rgb(247,96,15)" fg:x="1423802963" fg:w="3935816"/><text x="25.6166%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (264,518,866 samples, 4.71%)</title><rect x="20.8038%" y="1397" width="4.7127%" height="15" fill="rgb(211,210,7)" fg:x="1167696899" fg:w="264518866"/><text x="21.0538%" y="1407.50">&lt;rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (263,015,059 samples, 4.69%)</title><rect x="20.8306%" y="1381" width="4.6859%" height="15" fill="rgb(240,88,50)" fg:x="1169200706" fg:w="263015059"/><text x="21.0806%" y="1391.50">rayon..</text></g><g><title>rayon_core::join::join_context::{{closure}} (263,015,059 samples, 4.69%)</title><rect x="20.8306%" y="1365" width="4.6859%" height="15" fill="rgb(209,229,26)" fg:x="1169200706" fg:w="263015059"/><text x="21.0806%" y="1375.50">rayon..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (67,450,194 samples, 1.20%)</title><rect x="24.3148%" y="1349" width="1.2017%" height="15" fill="rgb(210,68,23)" fg:x="1364765571" fg:w="67450194"/><text x="24.5648%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (3,975,482 samples, 0.07%)</title><rect x="25.4457%" y="1333" width="0.0708%" height="15" fill="rgb(229,180,13)" fg:x="1428240283" fg:w="3975482"/><text x="25.6957%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,975,482 samples, 0.07%)</title><rect x="25.4457%" y="1317" width="0.0708%" height="15" fill="rgb(236,53,44)" fg:x="1428240283" fg:w="3975482"/><text x="25.6957%" y="1327.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (3,473,978 samples, 0.06%)</title><rect x="25.4546%" y="1301" width="0.0619%" height="15" fill="rgb(244,214,29)" fg:x="1428741787" fg:w="3473978"/><text x="25.7046%" y="1311.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,582,405 samples, 0.05%)</title><rect x="25.4705%" y="1285" width="0.0460%" height="15" fill="rgb(220,75,29)" fg:x="1429633360" fg:w="2582405"/><text x="25.7205%" y="1295.50"></text></g><g><title>__sched_yield (1,514,853 samples, 0.03%)</title><rect x="25.5165%" y="1397" width="0.0270%" height="15" fill="rgb(214,183,37)" fg:x="1432215765" fg:w="1514853"/><text x="25.7665%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,238,330 samples, 0.16%)</title><rect x="25.5524%" y="1381" width="0.1646%" height="15" fill="rgb(239,117,29)" fg:x="1434232122" fg:w="9238330"/><text x="25.8024%" y="1391.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (7,605,103 samples, 0.14%)</title><rect x="25.5815%" y="1365" width="0.1355%" height="15" fill="rgb(237,171,35)" fg:x="1435865349" fg:w="7605103"/><text x="25.8315%" y="1375.50"></text></g><g><title>crossbeam_epoch::default::with_handle (6,235,387 samples, 0.11%)</title><rect x="25.6059%" y="1349" width="0.1111%" height="15" fill="rgb(229,178,53)" fg:x="1437235065" fg:w="6235387"/><text x="25.8559%" y="1359.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (2,056,095 samples, 0.04%)</title><rect x="25.6804%" y="1333" width="0.0366%" height="15" fill="rgb(210,102,19)" fg:x="1441414357" fg:w="2056095"/><text x="25.9304%" y="1343.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (2,056,095 samples, 0.04%)</title><rect x="25.6804%" y="1317" width="0.0366%" height="15" fill="rgb(235,127,22)" fg:x="1441414357" fg:w="2056095"/><text x="25.9304%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (11,123,301 samples, 0.20%)</title><rect x="25.5524%" y="1397" width="0.1982%" height="15" fill="rgb(244,31,31)" fg:x="1434232122" fg:w="11123301"/><text x="25.8024%" y="1407.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,884,971 samples, 0.03%)</title><rect x="25.7170%" y="1381" width="0.0336%" height="15" fill="rgb(231,43,21)" fg:x="1443470452" fg:w="1884971"/><text x="25.9670%" y="1391.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,383,467 samples, 0.02%)</title><rect x="25.7259%" y="1365" width="0.0246%" height="15" fill="rgb(217,131,35)" fg:x="1443971956" fg:w="1383467"/><text x="25.9759%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,328,900,539 samples, 23.68%)</title><rect x="2.1068%" y="1429" width="23.6758%" height="15" fill="rgb(221,149,4)" fg:x="118251075" fg:w="1328900539"/><text x="2.3568%" y="1439.50">rayon_core::join::join_context::{{clos..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (279,956,219 samples, 4.99%)</title><rect x="20.7949%" y="1413" width="4.9877%" height="15" fill="rgb(232,170,28)" fg:x="1167195395" fg:w="279956219"/><text x="21.0449%" y="1423.50">rayon_..</text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (1,796,191 samples, 0.03%)</title><rect x="25.7506%" y="1397" width="0.0320%" height="15" fill="rgb(238,56,10)" fg:x="1445355423" fg:w="1796191"/><text x="26.0006%" y="1407.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (1,796,191 samples, 0.03%)</title><rect x="25.7506%" y="1381" width="0.0320%" height="15" fill="rgb(235,196,14)" fg:x="1445355423" fg:w="1796191"/><text x="26.0006%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,003,008 samples, 0.02%)</title><rect x="25.7826%" y="1269" width="0.0179%" height="15" fill="rgb(216,45,48)" fg:x="1447151614" fg:w="1003008"/><text x="26.0326%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1,504,512 samples, 0.03%)</title><rect x="25.7826%" y="1381" width="0.0268%" height="15" fill="rgb(238,213,17)" fg:x="1447151614" fg:w="1504512"/><text x="26.0326%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,504,512 samples, 0.03%)</title><rect x="25.7826%" y="1365" width="0.0268%" height="15" fill="rgb(212,13,2)" fg:x="1447151614" fg:w="1504512"/><text x="26.0326%" y="1375.50"></text></g><g><title>cosmic_text::font::Font::new (1,504,512 samples, 0.03%)</title><rect x="25.7826%" y="1349" width="0.0268%" height="15" fill="rgb(240,114,20)" fg:x="1447151614" fg:w="1504512"/><text x="26.0326%" y="1359.50"></text></g><g><title>rustybuzz::hb::face::hb_font_t::from_slice (1,504,512 samples, 0.03%)</title><rect x="25.7826%" y="1333" width="0.0268%" height="15" fill="rgb(228,41,40)" fg:x="1447151614" fg:w="1504512"/><text x="26.0326%" y="1343.50"></text></g><g><title>rustybuzz::hb::face::hb_font_t::from_face (1,504,512 samples, 0.03%)</title><rect x="25.7826%" y="1317" width="0.0268%" height="15" fill="rgb(244,132,35)" fg:x="1447151614" fg:w="1504512"/><text x="26.0326%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,504,512 samples, 0.03%)</title><rect x="25.7826%" y="1301" width="0.0268%" height="15" fill="rgb(253,189,4)" fg:x="1447151614" fg:w="1504512"/><text x="26.0326%" y="1311.50"></text></g><g><title>rustybuzz::hb::ot_layout_common::PositioningLookup::parse (1,504,512 samples, 0.03%)</title><rect x="25.7826%" y="1285" width="0.0268%" height="15" fill="rgb(224,37,19)" fg:x="1447151614" fg:w="1504512"/><text x="26.0326%" y="1295.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,003,008 samples, 0.02%)</title><rect x="25.8183%" y="1349" width="0.0179%" height="15" fill="rgb(235,223,18)" fg:x="1449157630" fg:w="1003008"/><text x="26.0683%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,003,008 samples, 0.02%)</title><rect x="25.8183%" y="1333" width="0.0179%" height="15" fill="rgb(235,163,25)" fg:x="1449157630" fg:w="1003008"/><text x="26.0683%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,510,528 samples, 0.06%)</title><rect x="25.7826%" y="1397" width="0.0625%" height="15" fill="rgb(217,145,28)" fg:x="1447151614" fg:w="3510528"/><text x="26.0326%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (2,006,016 samples, 0.04%)</title><rect x="25.8094%" y="1381" width="0.0357%" height="15" fill="rgb(223,223,32)" fg:x="1448656126" fg:w="2006016"/><text x="26.0594%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,006,016 samples, 0.04%)</title><rect x="25.8094%" y="1365" width="0.0357%" height="15" fill="rgb(227,189,39)" fg:x="1448656126" fg:w="2006016"/><text x="26.0594%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,003,008 samples, 0.02%)</title><rect x="25.8451%" y="1333" width="0.0179%" height="15" fill="rgb(248,10,22)" fg:x="1450662142" fg:w="1003008"/><text x="26.0951%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1,003,008 samples, 0.02%)</title><rect x="25.8451%" y="1317" width="0.0179%" height="15" fill="rgb(248,46,39)" fg:x="1450662142" fg:w="1003008"/><text x="26.0951%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,003,008 samples, 0.02%)</title><rect x="25.8451%" y="1301" width="0.0179%" height="15" fill="rgb(248,113,48)" fg:x="1450662142" fg:w="1003008"/><text x="26.0951%" y="1311.50"></text></g><g><title>cosmic_text::font::Font::new (1,003,008 samples, 0.02%)</title><rect x="25.8451%" y="1285" width="0.0179%" height="15" fill="rgb(245,16,25)" fg:x="1450662142" fg:w="1003008"/><text x="26.0951%" y="1295.50"></text></g><g><title>rustybuzz::hb::face::hb_font_t::from_slice (1,003,008 samples, 0.02%)</title><rect x="25.8451%" y="1269" width="0.0179%" height="15" fill="rgb(249,152,16)" fg:x="1450662142" fg:w="1003008"/><text x="26.0951%" y="1279.50"></text></g><g><title>rustybuzz::hb::face::hb_font_t::from_face (1,003,008 samples, 0.02%)</title><rect x="25.8451%" y="1253" width="0.0179%" height="15" fill="rgb(250,16,1)" fg:x="1450662142" fg:w="1003008"/><text x="26.0951%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,003,008 samples, 0.02%)</title><rect x="25.8451%" y="1237" width="0.0179%" height="15" fill="rgb(249,138,3)" fg:x="1450662142" fg:w="1003008"/><text x="26.0951%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,334,417,083 samples, 23.77%)</title><rect x="2.1068%" y="1445" width="23.7741%" height="15" fill="rgb(227,71,41)" fg:x="118251075" fg:w="1334417083"/><text x="2.3568%" y="1455.50">rayon::iter::plumbing::bridge_producer..</text></g><g><title>rayon_core::registry::in_worker (5,516,544 samples, 0.10%)</title><rect x="25.7826%" y="1429" width="0.0983%" height="15" fill="rgb(209,184,23)" fg:x="1447151614" fg:w="5516544"/><text x="26.0326%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,516,544 samples, 0.10%)</title><rect x="25.7826%" y="1413" width="0.0983%" height="15" fill="rgb(223,215,31)" fg:x="1447151614" fg:w="5516544"/><text x="26.0326%" y="1423.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2,006,016 samples, 0.04%)</title><rect x="25.8451%" y="1397" width="0.0357%" height="15" fill="rgb(210,146,28)" fg:x="1450662142" fg:w="2006016"/><text x="26.0951%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,006,016 samples, 0.04%)</title><rect x="25.8451%" y="1381" width="0.0357%" height="15" fill="rgb(209,183,41)" fg:x="1450662142" fg:w="2006016"/><text x="26.0951%" y="1391.50"></text></g><g><title>rayon_core::registry::in_worker (2,006,016 samples, 0.04%)</title><rect x="25.8451%" y="1365" width="0.0357%" height="15" fill="rgb(209,224,45)" fg:x="1450662142" fg:w="2006016"/><text x="26.0951%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,006,016 samples, 0.04%)</title><rect x="25.8451%" y="1349" width="0.0357%" height="15" fill="rgb(224,209,51)" fg:x="1450662142" fg:w="2006016"/><text x="26.0951%" y="1359.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,136,005 samples, 0.02%)</title><rect x="25.8809%" y="1269" width="0.0202%" height="15" fill="rgb(223,17,39)" fg:x="1452668158" fg:w="1136005"/><text x="26.1309%" y="1279.50"></text></g><g><title>malloc (1,136,005 samples, 0.02%)</title><rect x="25.8809%" y="1253" width="0.0202%" height="15" fill="rgb(234,204,37)" fg:x="1452668158" fg:w="1136005"/><text x="26.1309%" y="1263.50"></text></g><g><title>[libc.so.6] (1,136,005 samples, 0.02%)</title><rect x="25.8809%" y="1237" width="0.0202%" height="15" fill="rgb(236,120,5)" fg:x="1452668158" fg:w="1136005"/><text x="26.1309%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (20,515,317 samples, 0.37%)</title><rect x="25.9011%" y="1269" width="0.3655%" height="15" fill="rgb(248,97,27)" fg:x="1453804163" fg:w="20515317"/><text x="26.1511%" y="1279.50"></text></g><g><title>[libc.so.6] (1,787,545 samples, 0.03%)</title><rect x="26.2666%" y="1269" width="0.0318%" height="15" fill="rgb(240,66,17)" fg:x="1474319480" fg:w="1787545"/><text x="26.5166%" y="1279.50"></text></g><g><title>cfree (928,590 samples, 0.02%)</title><rect x="26.2984%" y="1269" width="0.0165%" height="15" fill="rgb(210,79,3)" fg:x="1476107025" fg:w="928590"/><text x="26.5484%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (31,943,370 samples, 0.57%)</title><rect x="25.8809%" y="1285" width="0.5691%" height="15" fill="rgb(214,176,27)" fg:x="1452668158" fg:w="31943370"/><text x="26.1309%" y="1295.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (7,575,913 samples, 0.13%)</title><rect x="26.3150%" y="1269" width="0.1350%" height="15" fill="rgb(235,185,3)" fg:x="1477035615" fg:w="7575913"/><text x="26.5650%" y="1279.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (7,575,913 samples, 0.13%)</title><rect x="26.3150%" y="1253" width="0.1350%" height="15" fill="rgb(227,24,12)" fg:x="1477035615" fg:w="7575913"/><text x="26.5650%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (853,895 samples, 0.02%)</title><rect x="26.4589%" y="1093" width="0.0152%" height="15" fill="rgb(252,169,48)" fg:x="1485113032" fg:w="853895"/><text x="26.7089%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (853,895 samples, 0.02%)</title><rect x="26.4589%" y="1077" width="0.0152%" height="15" fill="rgb(212,65,1)" fg:x="1485113032" fg:w="853895"/><text x="26.7089%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (853,895 samples, 0.02%)</title><rect x="26.4589%" y="1061" width="0.0152%" height="15" fill="rgb(242,39,24)" fg:x="1485113032" fg:w="853895"/><text x="26.7089%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (853,895 samples, 0.02%)</title><rect x="26.4589%" y="1045" width="0.0152%" height="15" fill="rgb(249,32,23)" fg:x="1485113032" fg:w="853895"/><text x="26.7089%" y="1055.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (853,895 samples, 0.02%)</title><rect x="26.4589%" y="1029" width="0.0152%" height="15" fill="rgb(251,195,23)" fg:x="1485113032" fg:w="853895"/><text x="26.7089%" y="1039.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,281,107 samples, 0.02%)</title><rect x="26.4741%" y="1013" width="0.0228%" height="15" fill="rgb(236,174,8)" fg:x="1485966927" fg:w="1281107"/><text x="26.7241%" y="1023.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,281,107 samples, 0.02%)</title><rect x="26.4741%" y="997" width="0.0228%" height="15" fill="rgb(220,197,8)" fg:x="1485966927" fg:w="1281107"/><text x="26.7241%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (959,713 samples, 0.02%)</title><rect x="26.4969%" y="1013" width="0.0171%" height="15" fill="rgb(240,108,37)" fg:x="1487248034" fg:w="959713"/><text x="26.7469%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (959,713 samples, 0.02%)</title><rect x="26.4969%" y="997" width="0.0171%" height="15" fill="rgb(232,176,24)" fg:x="1487248034" fg:w="959713"/><text x="26.7469%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (959,713 samples, 0.02%)</title><rect x="26.4969%" y="981" width="0.0171%" height="15" fill="rgb(243,35,29)" fg:x="1487248034" fg:w="959713"/><text x="26.7469%" y="991.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (959,713 samples, 0.02%)</title><rect x="26.4969%" y="965" width="0.0171%" height="15" fill="rgb(210,37,18)" fg:x="1487248034" fg:w="959713"/><text x="26.7469%" y="975.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (959,713 samples, 0.02%)</title><rect x="26.4969%" y="949" width="0.0171%" height="15" fill="rgb(224,184,40)" fg:x="1487248034" fg:w="959713"/><text x="26.7469%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,221,536 samples, 0.09%)</title><rect x="26.4500%" y="1285" width="0.0930%" height="15" fill="rgb(236,39,29)" fg:x="1484611528" fg:w="5221536"/><text x="26.7000%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1269" width="0.0841%" height="15" fill="rgb(232,48,39)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1253" width="0.0841%" height="15" fill="rgb(236,34,42)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1237" width="0.0841%" height="15" fill="rgb(243,106,37)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1221" width="0.0841%" height="15" fill="rgb(218,96,6)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1205" width="0.0841%" height="15" fill="rgb(235,130,12)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1189" width="0.0841%" height="15" fill="rgb(231,95,0)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1173" width="0.0841%" height="15" fill="rgb(228,12,23)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1157" width="0.0841%" height="15" fill="rgb(216,12,1)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1141" width="0.0841%" height="15" fill="rgb(219,59,3)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1125" width="0.0841%" height="15" fill="rgb(215,208,46)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,720,032 samples, 0.08%)</title><rect x="26.4589%" y="1109" width="0.0841%" height="15" fill="rgb(254,224,29)" fg:x="1485113032" fg:w="4720032"/><text x="26.7089%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,866,137 samples, 0.07%)</title><rect x="26.4741%" y="1093" width="0.0689%" height="15" fill="rgb(232,14,29)" fg:x="1485966927" fg:w="3866137"/><text x="26.7241%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,866,137 samples, 0.07%)</title><rect x="26.4741%" y="1077" width="0.0689%" height="15" fill="rgb(208,45,52)" fg:x="1485966927" fg:w="3866137"/><text x="26.7241%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,866,137 samples, 0.07%)</title><rect x="26.4741%" y="1061" width="0.0689%" height="15" fill="rgb(234,191,28)" fg:x="1485966927" fg:w="3866137"/><text x="26.7241%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,866,137 samples, 0.07%)</title><rect x="26.4741%" y="1045" width="0.0689%" height="15" fill="rgb(244,67,43)" fg:x="1485966927" fg:w="3866137"/><text x="26.7241%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,866,137 samples, 0.07%)</title><rect x="26.4741%" y="1029" width="0.0689%" height="15" fill="rgb(236,189,24)" fg:x="1485966927" fg:w="3866137"/><text x="26.7241%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="1013" width="0.0290%" height="15" fill="rgb(239,214,33)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="997" width="0.0290%" height="15" fill="rgb(226,176,41)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="981" width="0.0290%" height="15" fill="rgb(248,47,8)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="965" width="0.0290%" height="15" fill="rgb(218,81,44)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="949" width="0.0290%" height="15" fill="rgb(213,98,6)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="959.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="933" width="0.0290%" height="15" fill="rgb(222,85,22)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="917" width="0.0290%" height="15" fill="rgb(239,46,39)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="901" width="0.0290%" height="15" fill="rgb(237,12,29)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="885" width="0.0290%" height="15" fill="rgb(214,77,8)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="869" width="0.0290%" height="15" fill="rgb(217,168,37)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="879.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="853" width="0.0290%" height="15" fill="rgb(221,217,23)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="863.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="837" width="0.0290%" height="15" fill="rgb(243,229,36)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="847.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,625,317 samples, 0.03%)</title><rect x="26.5140%" y="821" width="0.0290%" height="15" fill="rgb(251,163,40)" fg:x="1488207747" fg:w="1625317"/><text x="26.7640%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1285" width="0.0164%" height="15" fill="rgb(237,222,12)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1269" width="0.0164%" height="15" fill="rgb(248,132,6)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1253" width="0.0164%" height="15" fill="rgb(227,167,50)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1237" width="0.0164%" height="15" fill="rgb(242,84,37)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1221" width="0.0164%" height="15" fill="rgb(212,4,50)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1205" width="0.0164%" height="15" fill="rgb(230,228,32)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1189" width="0.0164%" height="15" fill="rgb(248,217,23)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1173" width="0.0164%" height="15" fill="rgb(238,197,32)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (922,338 samples, 0.02%)</title><rect x="26.5430%" y="1157" width="0.0164%" height="15" fill="rgb(236,106,1)" fg:x="1489833064" fg:w="922338"/><text x="26.7930%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (43,682,976 samples, 0.78%)</title><rect x="25.8809%" y="1301" width="0.7783%" height="15" fill="rgb(219,228,13)" fg:x="1452668158" fg:w="43682976"/><text x="26.1309%" y="1311.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (5,595,732 samples, 0.10%)</title><rect x="26.5594%" y="1285" width="0.0997%" height="15" fill="rgb(238,30,35)" fg:x="1490755402" fg:w="5595732"/><text x="26.8094%" y="1295.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (5,595,732 samples, 0.10%)</title><rect x="26.5594%" y="1269" width="0.0997%" height="15" fill="rgb(236,70,23)" fg:x="1490755402" fg:w="5595732"/><text x="26.8094%" y="1279.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (5,595,732 samples, 0.10%)</title><rect x="26.5594%" y="1253" width="0.0997%" height="15" fill="rgb(249,104,48)" fg:x="1490755402" fg:w="5595732"/><text x="26.8094%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,711,289 samples, 0.03%)</title><rect x="26.6591%" y="1157" width="0.0305%" height="15" fill="rgb(254,117,50)" fg:x="1496351134" fg:w="1711289"/><text x="26.9091%" y="1167.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,711,289 samples, 0.03%)</title><rect x="26.6591%" y="1141" width="0.0305%" height="15" fill="rgb(223,152,4)" fg:x="1496351134" fg:w="1711289"/><text x="26.9091%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,631,759 samples, 0.05%)</title><rect x="26.6591%" y="1173" width="0.0469%" height="15" fill="rgb(245,6,2)" fg:x="1496351134" fg:w="2631759"/><text x="26.9091%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (920,470 samples, 0.02%)</title><rect x="26.6896%" y="1157" width="0.0164%" height="15" fill="rgb(249,150,24)" fg:x="1498062423" fg:w="920470"/><text x="26.9396%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (920,470 samples, 0.02%)</title><rect x="26.6896%" y="1141" width="0.0164%" height="15" fill="rgb(228,185,42)" fg:x="1498062423" fg:w="920470"/><text x="26.9396%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1157" width="0.0122%" height="15" fill="rgb(226,39,33)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1141" width="0.0122%" height="15" fill="rgb(221,166,19)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1125" width="0.0122%" height="15" fill="rgb(209,109,2)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1109" width="0.0122%" height="15" fill="rgb(252,216,26)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1093" width="0.0122%" height="15" fill="rgb(227,173,36)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1077" width="0.0122%" height="15" fill="rgb(209,90,7)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1061" width="0.0122%" height="15" fill="rgb(250,194,11)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1045" width="0.0122%" height="15" fill="rgb(220,72,50)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1029" width="0.0122%" height="15" fill="rgb(222,106,48)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="1013" width="0.0122%" height="15" fill="rgb(216,220,45)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="997" width="0.0122%" height="15" fill="rgb(234,112,18)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="981" width="0.0122%" height="15" fill="rgb(206,179,9)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="965" width="0.0122%" height="15" fill="rgb(215,115,40)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (684,492 samples, 0.01%)</title><rect x="26.7060%" y="949" width="0.0122%" height="15" fill="rgb(222,69,34)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="959.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (684,492 samples, 0.01%)</title><rect x="26.7060%" y="933" width="0.0122%" height="15" fill="rgb(209,161,10)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="943.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (684,492 samples, 0.01%)</title><rect x="26.7060%" y="917" width="0.0122%" height="15" fill="rgb(217,6,38)" fg:x="1498982893" fg:w="684492"/><text x="26.9560%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,261,404 samples, 0.08%)</title><rect x="26.6591%" y="1205" width="0.0759%" height="15" fill="rgb(229,229,48)" fg:x="1496351134" fg:w="4261404"/><text x="26.9091%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,261,404 samples, 0.08%)</title><rect x="26.6591%" y="1189" width="0.0759%" height="15" fill="rgb(225,21,28)" fg:x="1496351134" fg:w="4261404"/><text x="26.9091%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,629,645 samples, 0.03%)</title><rect x="26.7060%" y="1173" width="0.0290%" height="15" fill="rgb(206,33,13)" fg:x="1498982893" fg:w="1629645"/><text x="26.9560%" y="1183.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (945,153 samples, 0.02%)</title><rect x="26.7182%" y="1157" width="0.0168%" height="15" fill="rgb(242,178,17)" fg:x="1499667385" fg:w="945153"/><text x="26.9682%" y="1167.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (945,153 samples, 0.02%)</title><rect x="26.7182%" y="1141" width="0.0168%" height="15" fill="rgb(220,162,5)" fg:x="1499667385" fg:w="945153"/><text x="26.9682%" y="1151.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (945,153 samples, 0.02%)</title><rect x="26.7182%" y="1125" width="0.0168%" height="15" fill="rgb(210,33,43)" fg:x="1499667385" fg:w="945153"/><text x="26.9682%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1141" width="0.0322%" height="15" fill="rgb(216,116,54)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1125" width="0.0322%" height="15" fill="rgb(249,92,24)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1109" width="0.0322%" height="15" fill="rgb(231,189,14)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1119.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1093" width="0.0322%" height="15" fill="rgb(230,8,41)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1077" width="0.0322%" height="15" fill="rgb(249,7,27)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1061" width="0.0322%" height="15" fill="rgb(232,86,5)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1045" width="0.0322%" height="15" fill="rgb(224,175,18)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1029" width="0.0322%" height="15" fill="rgb(220,129,12)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="1013" width="0.0322%" height="15" fill="rgb(210,19,36)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1023.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="997" width="0.0322%" height="15" fill="rgb(219,96,14)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="1007.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,808,891 samples, 0.03%)</title><rect x="26.7350%" y="981" width="0.0322%" height="15" fill="rgb(249,106,1)" fg:x="1500612538" fg:w="1808891"/><text x="26.9850%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7,617,263 samples, 0.14%)</title><rect x="26.6591%" y="1237" width="0.1357%" height="15" fill="rgb(249,155,20)" fg:x="1496351134" fg:w="7617263"/><text x="26.9091%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7,617,263 samples, 0.14%)</title><rect x="26.6591%" y="1221" width="0.1357%" height="15" fill="rgb(244,168,9)" fg:x="1496351134" fg:w="7617263"/><text x="26.9091%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,355,859 samples, 0.06%)</title><rect x="26.7350%" y="1205" width="0.0598%" height="15" fill="rgb(216,23,50)" fg:x="1500612538" fg:w="3355859"/><text x="26.9850%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,355,859 samples, 0.06%)</title><rect x="26.7350%" y="1189" width="0.0598%" height="15" fill="rgb(224,219,20)" fg:x="1500612538" fg:w="3355859"/><text x="26.9850%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,355,859 samples, 0.06%)</title><rect x="26.7350%" y="1173" width="0.0598%" height="15" fill="rgb(222,156,15)" fg:x="1500612538" fg:w="3355859"/><text x="26.9850%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,355,859 samples, 0.06%)</title><rect x="26.7350%" y="1157" width="0.0598%" height="15" fill="rgb(231,97,17)" fg:x="1500612538" fg:w="3355859"/><text x="26.9850%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1141" width="0.0276%" height="15" fill="rgb(218,70,48)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1125" width="0.0276%" height="15" fill="rgb(212,196,52)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1109" width="0.0276%" height="15" fill="rgb(243,203,18)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1093" width="0.0276%" height="15" fill="rgb(252,125,41)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1077" width="0.0276%" height="15" fill="rgb(223,180,33)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1061" width="0.0276%" height="15" fill="rgb(254,159,46)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1045" width="0.0276%" height="15" fill="rgb(254,38,10)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1055.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1029" width="0.0276%" height="15" fill="rgb(208,217,32)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1039.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,546,968 samples, 0.03%)</title><rect x="26.7673%" y="1013" width="0.0276%" height="15" fill="rgb(221,120,13)" fg:x="1502421429" fg:w="1546968"/><text x="27.0173%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,312,565 samples, 0.02%)</title><rect x="26.7948%" y="1173" width="0.0234%" height="15" fill="rgb(246,54,52)" fg:x="1503968397" fg:w="1312565"/><text x="27.0448%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,312,565 samples, 0.02%)</title><rect x="26.7948%" y="1157" width="0.0234%" height="15" fill="rgb(242,34,25)" fg:x="1503968397" fg:w="1312565"/><text x="27.0448%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,312,565 samples, 0.02%)</title><rect x="26.7948%" y="1141" width="0.0234%" height="15" fill="rgb(247,209,9)" fg:x="1503968397" fg:w="1312565"/><text x="27.0448%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,312,565 samples, 0.02%)</title><rect x="26.7948%" y="1125" width="0.0234%" height="15" fill="rgb(228,71,26)" fg:x="1503968397" fg:w="1312565"/><text x="27.0448%" y="1135.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,312,565 samples, 0.02%)</title><rect x="26.7948%" y="1109" width="0.0234%" height="15" fill="rgb(222,145,49)" fg:x="1503968397" fg:w="1312565"/><text x="27.0448%" y="1119.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,312,565 samples, 0.02%)</title><rect x="26.7948%" y="1093" width="0.0234%" height="15" fill="rgb(218,121,17)" fg:x="1503968397" fg:w="1312565"/><text x="27.0448%" y="1103.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,312,565 samples, 0.02%)</title><rect x="26.7948%" y="1077" width="0.0234%" height="15" fill="rgb(244,50,7)" fg:x="1503968397" fg:w="1312565"/><text x="27.0448%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (53,114,308 samples, 0.95%)</title><rect x="25.8809%" y="1317" width="0.9463%" height="15" fill="rgb(246,229,37)" fg:x="1452668158" fg:w="53114308"/><text x="26.1309%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9,431,332 samples, 0.17%)</title><rect x="26.6591%" y="1301" width="0.1680%" height="15" fill="rgb(225,18,5)" fg:x="1496351134" fg:w="9431332"/><text x="26.9091%" y="1311.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9,431,332 samples, 0.17%)</title><rect x="26.6591%" y="1285" width="0.1680%" height="15" fill="rgb(213,204,8)" fg:x="1496351134" fg:w="9431332"/><text x="26.9091%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9,431,332 samples, 0.17%)</title><rect x="26.6591%" y="1269" width="0.1680%" height="15" fill="rgb(238,103,6)" fg:x="1496351134" fg:w="9431332"/><text x="26.9091%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,431,332 samples, 0.17%)</title><rect x="26.6591%" y="1253" width="0.1680%" height="15" fill="rgb(222,25,35)" fg:x="1496351134" fg:w="9431332"/><text x="26.9091%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,814,069 samples, 0.03%)</title><rect x="26.7948%" y="1237" width="0.0323%" height="15" fill="rgb(213,203,35)" fg:x="1503968397" fg:w="1814069"/><text x="27.0448%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,814,069 samples, 0.03%)</title><rect x="26.7948%" y="1221" width="0.0323%" height="15" fill="rgb(221,79,53)" fg:x="1503968397" fg:w="1814069"/><text x="27.0448%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,814,069 samples, 0.03%)</title><rect x="26.7948%" y="1205" width="0.0323%" height="15" fill="rgb(243,200,35)" fg:x="1503968397" fg:w="1814069"/><text x="27.0448%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,814,069 samples, 0.03%)</title><rect x="26.7948%" y="1189" width="0.0323%" height="15" fill="rgb(248,60,25)" fg:x="1503968397" fg:w="1814069"/><text x="27.0448%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (922,234 samples, 0.02%)</title><rect x="26.8272%" y="1205" width="0.0164%" height="15" fill="rgb(227,53,46)" fg:x="1505782466" fg:w="922234"/><text x="27.0772%" y="1215.50"></text></g><g><title>cfree (922,234 samples, 0.02%)</title><rect x="26.8272%" y="1189" width="0.0164%" height="15" fill="rgb(216,120,32)" fg:x="1505782466" fg:w="922234"/><text x="27.0772%" y="1199.50"></text></g><g><title>[libc.so.6] (922,234 samples, 0.02%)</title><rect x="26.8272%" y="1173" width="0.0164%" height="15" fill="rgb(220,134,1)" fg:x="1505782466" fg:w="922234"/><text x="27.0772%" y="1183.50"></text></g><g><title>[libc.so.6] (922,234 samples, 0.02%)</title><rect x="26.8272%" y="1157" width="0.0164%" height="15" fill="rgb(237,168,5)" fg:x="1505782466" fg:w="922234"/><text x="27.0772%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (761,878 samples, 0.01%)</title><rect x="26.8436%" y="1189" width="0.0136%" height="15" fill="rgb(231,100,33)" fg:x="1506704700" fg:w="761878"/><text x="27.0936%" y="1199.50"></text></g><g><title>[libc.so.6] (761,878 samples, 0.01%)</title><rect x="26.8436%" y="1173" width="0.0136%" height="15" fill="rgb(236,177,47)" fg:x="1506704700" fg:w="761878"/><text x="27.0936%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,120,421 samples, 0.02%)</title><rect x="26.8572%" y="1189" width="0.0200%" height="15" fill="rgb(235,7,49)" fg:x="1507466578" fg:w="1120421"/><text x="27.1072%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,120,421 samples, 0.02%)</title><rect x="26.8572%" y="1173" width="0.0200%" height="15" fill="rgb(232,119,22)" fg:x="1507466578" fg:w="1120421"/><text x="27.1072%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,120,421 samples, 0.02%)</title><rect x="26.8572%" y="1157" width="0.0200%" height="15" fill="rgb(254,73,53)" fg:x="1507466578" fg:w="1120421"/><text x="27.1072%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,002,720 samples, 0.05%)</title><rect x="26.8436%" y="1205" width="0.0535%" height="15" fill="rgb(251,35,20)" fg:x="1506704700" fg:w="3002720"/><text x="27.0936%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1189" width="0.0200%" height="15" fill="rgb(241,119,20)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1173" width="0.0200%" height="15" fill="rgb(207,102,14)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1157" width="0.0200%" height="15" fill="rgb(248,201,50)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1141" width="0.0200%" height="15" fill="rgb(222,185,44)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1125" width="0.0200%" height="15" fill="rgb(218,107,18)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1109" width="0.0200%" height="15" fill="rgb(237,177,39)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1093" width="0.0200%" height="15" fill="rgb(246,69,6)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1077" width="0.0200%" height="15" fill="rgb(234,208,37)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1061" width="0.0200%" height="15" fill="rgb(225,4,6)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1071.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1045" width="0.0200%" height="15" fill="rgb(233,45,0)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1055.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,120,421 samples, 0.02%)</title><rect x="26.8771%" y="1029" width="0.0200%" height="15" fill="rgb(226,136,5)" fg:x="1508586999" fg:w="1120421"/><text x="27.1271%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,616,434 samples, 0.03%)</title><rect x="26.8971%" y="1093" width="0.0288%" height="15" fill="rgb(211,91,47)" fg:x="1509707420" fg:w="1616434"/><text x="27.1471%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,616,434 samples, 0.03%)</title><rect x="26.8971%" y="1077" width="0.0288%" height="15" fill="rgb(242,88,51)" fg:x="1509707420" fg:w="1616434"/><text x="27.1471%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,616,434 samples, 0.03%)</title><rect x="26.8971%" y="1061" width="0.0288%" height="15" fill="rgb(230,91,28)" fg:x="1509707420" fg:w="1616434"/><text x="27.1471%" y="1071.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,616,434 samples, 0.03%)</title><rect x="26.8971%" y="1045" width="0.0288%" height="15" fill="rgb(254,186,29)" fg:x="1509707420" fg:w="1616434"/><text x="27.1471%" y="1055.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,616,434 samples, 0.03%)</title><rect x="26.8971%" y="1029" width="0.0288%" height="15" fill="rgb(238,6,4)" fg:x="1509707420" fg:w="1616434"/><text x="27.1471%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,770,863 samples, 0.12%)</title><rect x="26.8272%" y="1253" width="0.1206%" height="15" fill="rgb(221,151,16)" fg:x="1505782466" fg:w="6770863"/><text x="27.0772%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,770,863 samples, 0.12%)</title><rect x="26.8272%" y="1237" width="0.1206%" height="15" fill="rgb(251,143,52)" fg:x="1505782466" fg:w="6770863"/><text x="27.0772%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,770,863 samples, 0.12%)</title><rect x="26.8272%" y="1221" width="0.1206%" height="15" fill="rgb(206,90,15)" fg:x="1505782466" fg:w="6770863"/><text x="27.0772%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,845,909 samples, 0.05%)</title><rect x="26.8971%" y="1205" width="0.0507%" height="15" fill="rgb(218,35,8)" fg:x="1509707420" fg:w="2845909"/><text x="27.1471%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,845,909 samples, 0.05%)</title><rect x="26.8971%" y="1189" width="0.0507%" height="15" fill="rgb(239,215,6)" fg:x="1509707420" fg:w="2845909"/><text x="27.1471%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,845,909 samples, 0.05%)</title><rect x="26.8971%" y="1173" width="0.0507%" height="15" fill="rgb(245,116,39)" fg:x="1509707420" fg:w="2845909"/><text x="27.1471%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,845,909 samples, 0.05%)</title><rect x="26.8971%" y="1157" width="0.0507%" height="15" fill="rgb(242,65,28)" fg:x="1509707420" fg:w="2845909"/><text x="27.1471%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,845,909 samples, 0.05%)</title><rect x="26.8971%" y="1141" width="0.0507%" height="15" fill="rgb(252,132,53)" fg:x="1509707420" fg:w="2845909"/><text x="27.1471%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,845,909 samples, 0.05%)</title><rect x="26.8971%" y="1125" width="0.0507%" height="15" fill="rgb(224,159,50)" fg:x="1509707420" fg:w="2845909"/><text x="27.1471%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,845,909 samples, 0.05%)</title><rect x="26.8971%" y="1109" width="0.0507%" height="15" fill="rgb(224,93,4)" fg:x="1509707420" fg:w="2845909"/><text x="27.1471%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="1093" width="0.0219%" height="15" fill="rgb(208,81,34)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="1077" width="0.0219%" height="15" fill="rgb(233,92,54)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="1061" width="0.0219%" height="15" fill="rgb(237,21,14)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="1045" width="0.0219%" height="15" fill="rgb(249,128,51)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="1029" width="0.0219%" height="15" fill="rgb(223,129,24)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="1013" width="0.0219%" height="15" fill="rgb(231,168,25)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="997" width="0.0219%" height="15" fill="rgb(224,39,20)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="981" width="0.0219%" height="15" fill="rgb(225,152,53)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="965" width="0.0219%" height="15" fill="rgb(252,17,24)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="949" width="0.0219%" height="15" fill="rgb(250,114,30)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="933" width="0.0219%" height="15" fill="rgb(229,5,4)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="943.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="917" width="0.0219%" height="15" fill="rgb(225,176,49)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="901" width="0.0219%" height="15" fill="rgb(224,221,49)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="885" width="0.0219%" height="15" fill="rgb(253,169,27)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="869" width="0.0219%" height="15" fill="rgb(211,206,16)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="853" width="0.0219%" height="15" fill="rgb(244,87,35)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="863.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="837" width="0.0219%" height="15" fill="rgb(246,28,10)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="847.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="821" width="0.0219%" height="15" fill="rgb(229,12,44)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="805" width="0.0219%" height="15" fill="rgb(210,145,37)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="815.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="789" width="0.0219%" height="15" fill="rgb(227,112,52)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="799.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,229,475 samples, 0.02%)</title><rect x="26.9259%" y="773" width="0.0219%" height="15" fill="rgb(238,155,34)" fg:x="1511323854" fg:w="1229475"/><text x="27.1759%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (60,386,675 samples, 1.08%)</title><rect x="25.8809%" y="1333" width="1.0759%" height="15" fill="rgb(239,226,36)" fg:x="1452668158" fg:w="60386675"/><text x="26.1309%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7,272,367 samples, 0.13%)</title><rect x="26.8272%" y="1317" width="0.1296%" height="15" fill="rgb(230,16,23)" fg:x="1505782466" fg:w="7272367"/><text x="27.0772%" y="1327.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7,272,367 samples, 0.13%)</title><rect x="26.8272%" y="1301" width="0.1296%" height="15" fill="rgb(236,171,36)" fg:x="1505782466" fg:w="7272367"/><text x="27.0772%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7,272,367 samples, 0.13%)</title><rect x="26.8272%" y="1285" width="0.1296%" height="15" fill="rgb(221,22,14)" fg:x="1505782466" fg:w="7272367"/><text x="27.0772%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7,272,367 samples, 0.13%)</title><rect x="26.8272%" y="1269" width="0.1296%" height="15" fill="rgb(242,43,11)" fg:x="1505782466" fg:w="7272367"/><text x="27.0772%" y="1279.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,981,537 samples, 0.04%)</title><rect x="26.9657%" y="1189" width="0.0353%" height="15" fill="rgb(232,69,23)" fg:x="1513556337" fg:w="1981537"/><text x="27.2157%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,981,537 samples, 0.04%)</title><rect x="26.9657%" y="1173" width="0.0353%" height="15" fill="rgb(216,180,54)" fg:x="1513556337" fg:w="1981537"/><text x="27.2157%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,834,728 samples, 0.07%)</title><rect x="26.9567%" y="1237" width="0.0683%" height="15" fill="rgb(216,5,24)" fg:x="1513054833" fg:w="3834728"/><text x="27.2067%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,834,728 samples, 0.07%)</title><rect x="26.9567%" y="1221" width="0.0683%" height="15" fill="rgb(225,89,9)" fg:x="1513054833" fg:w="3834728"/><text x="27.2067%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,333,224 samples, 0.06%)</title><rect x="26.9657%" y="1205" width="0.0594%" height="15" fill="rgb(243,75,33)" fg:x="1513556337" fg:w="3333224"/><text x="27.2157%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,351,687 samples, 0.02%)</title><rect x="27.0010%" y="1189" width="0.0241%" height="15" fill="rgb(247,141,45)" fg:x="1515537874" fg:w="1351687"/><text x="27.2510%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,351,687 samples, 0.02%)</title><rect x="27.0010%" y="1173" width="0.0241%" height="15" fill="rgb(232,177,36)" fg:x="1515537874" fg:w="1351687"/><text x="27.2510%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,351,687 samples, 0.02%)</title><rect x="27.0010%" y="1157" width="0.0241%" height="15" fill="rgb(219,125,36)" fg:x="1515537874" fg:w="1351687"/><text x="27.2510%" y="1167.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,351,687 samples, 0.02%)</title><rect x="27.0010%" y="1141" width="0.0241%" height="15" fill="rgb(227,94,9)" fg:x="1515537874" fg:w="1351687"/><text x="27.2510%" y="1151.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,351,687 samples, 0.02%)</title><rect x="27.0010%" y="1125" width="0.0241%" height="15" fill="rgb(240,34,52)" fg:x="1515537874" fg:w="1351687"/><text x="27.2510%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,743,093 samples, 0.08%)</title><rect x="26.9567%" y="1253" width="0.0845%" height="15" fill="rgb(216,45,12)" fg:x="1513054833" fg:w="4743093"/><text x="27.2067%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1237" width="0.0162%" height="15" fill="rgb(246,21,19)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1221" width="0.0162%" height="15" fill="rgb(213,98,42)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1205" width="0.0162%" height="15" fill="rgb(250,136,47)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1189" width="0.0162%" height="15" fill="rgb(251,124,27)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1173" width="0.0162%" height="15" fill="rgb(229,180,14)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1157" width="0.0162%" height="15" fill="rgb(245,216,25)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1141" width="0.0162%" height="15" fill="rgb(251,43,5)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1125" width="0.0162%" height="15" fill="rgb(250,128,24)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (908,365 samples, 0.02%)</title><rect x="27.0250%" y="1109" width="0.0162%" height="15" fill="rgb(217,117,27)" fg:x="1516889561" fg:w="908365"/><text x="27.2750%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,311,614 samples, 0.02%)</title><rect x="27.0412%" y="1189" width="0.0234%" height="15" fill="rgb(245,147,4)" fg:x="1517797926" fg:w="1311614"/><text x="27.2912%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,311,614 samples, 0.02%)</title><rect x="27.0412%" y="1173" width="0.0234%" height="15" fill="rgb(242,201,35)" fg:x="1517797926" fg:w="1311614"/><text x="27.2912%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,311,614 samples, 0.02%)</title><rect x="27.0412%" y="1157" width="0.0234%" height="15" fill="rgb(218,181,1)" fg:x="1517797926" fg:w="1311614"/><text x="27.2912%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,311,614 samples, 0.02%)</title><rect x="27.0412%" y="1141" width="0.0234%" height="15" fill="rgb(222,6,29)" fg:x="1517797926" fg:w="1311614"/><text x="27.2912%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,311,614 samples, 0.02%)</title><rect x="27.0412%" y="1125" width="0.0234%" height="15" fill="rgb(208,186,3)" fg:x="1517797926" fg:w="1311614"/><text x="27.2912%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,311,614 samples, 0.02%)</title><rect x="27.0412%" y="1109" width="0.0234%" height="15" fill="rgb(216,36,26)" fg:x="1517797926" fg:w="1311614"/><text x="27.2912%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (922,338 samples, 0.02%)</title><rect x="27.0646%" y="1029" width="0.0164%" height="15" fill="rgb(248,201,23)" fg:x="1519109540" fg:w="922338"/><text x="27.3146%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (922,338 samples, 0.02%)</title><rect x="27.0646%" y="1013" width="0.0164%" height="15" fill="rgb(251,170,31)" fg:x="1519109540" fg:w="922338"/><text x="27.3146%" y="1023.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (922,338 samples, 0.02%)</title><rect x="27.0646%" y="997" width="0.0164%" height="15" fill="rgb(207,110,25)" fg:x="1519109540" fg:w="922338"/><text x="27.3146%" y="1007.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (922,338 samples, 0.02%)</title><rect x="27.0646%" y="981" width="0.0164%" height="15" fill="rgb(250,54,15)" fg:x="1519109540" fg:w="922338"/><text x="27.3146%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,661,848 samples, 0.15%)</title><rect x="26.9567%" y="1269" width="0.1543%" height="15" fill="rgb(227,68,33)" fg:x="1513054833" fg:w="8661848"/><text x="27.2067%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3,918,755 samples, 0.07%)</title><rect x="27.0412%" y="1253" width="0.0698%" height="15" fill="rgb(238,34,41)" fg:x="1517797926" fg:w="3918755"/><text x="27.2912%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,918,755 samples, 0.07%)</title><rect x="27.0412%" y="1237" width="0.0698%" height="15" fill="rgb(220,11,15)" fg:x="1517797926" fg:w="3918755"/><text x="27.2912%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,918,755 samples, 0.07%)</title><rect x="27.0412%" y="1221" width="0.0698%" height="15" fill="rgb(246,111,35)" fg:x="1517797926" fg:w="3918755"/><text x="27.2912%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,918,755 samples, 0.07%)</title><rect x="27.0412%" y="1205" width="0.0698%" height="15" fill="rgb(209,88,53)" fg:x="1517797926" fg:w="3918755"/><text x="27.2912%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1189" width="0.0464%" height="15" fill="rgb(231,185,47)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1173" width="0.0464%" height="15" fill="rgb(233,154,1)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1157" width="0.0464%" height="15" fill="rgb(225,15,46)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1141" width="0.0464%" height="15" fill="rgb(211,135,41)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1125" width="0.0464%" height="15" fill="rgb(208,54,0)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1109" width="0.0464%" height="15" fill="rgb(244,136,14)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1093" width="0.0464%" height="15" fill="rgb(241,56,14)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1077" width="0.0464%" height="15" fill="rgb(205,80,24)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1061" width="0.0464%" height="15" fill="rgb(220,57,4)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,607,141 samples, 0.05%)</title><rect x="27.0646%" y="1045" width="0.0464%" height="15" fill="rgb(226,193,50)" fg:x="1519109540" fg:w="2607141"/><text x="27.3146%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,684,803 samples, 0.03%)</title><rect x="27.0810%" y="1029" width="0.0300%" height="15" fill="rgb(231,168,22)" fg:x="1520031878" fg:w="1684803"/><text x="27.3310%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,684,803 samples, 0.03%)</title><rect x="27.0810%" y="1013" width="0.0300%" height="15" fill="rgb(254,215,14)" fg:x="1520031878" fg:w="1684803"/><text x="27.3310%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,684,803 samples, 0.03%)</title><rect x="27.0810%" y="997" width="0.0300%" height="15" fill="rgb(211,115,16)" fg:x="1520031878" fg:w="1684803"/><text x="27.3310%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (771,831 samples, 0.01%)</title><rect x="27.1110%" y="1237" width="0.0138%" height="15" fill="rgb(236,210,16)" fg:x="1521716681" fg:w="771831"/><text x="27.3610%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (771,831 samples, 0.01%)</title><rect x="27.1110%" y="1221" width="0.0138%" height="15" fill="rgb(221,94,12)" fg:x="1521716681" fg:w="771831"/><text x="27.3610%" y="1231.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (771,831 samples, 0.01%)</title><rect x="27.1110%" y="1205" width="0.0138%" height="15" fill="rgb(235,218,49)" fg:x="1521716681" fg:w="771831"/><text x="27.3610%" y="1215.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (771,831 samples, 0.01%)</title><rect x="27.1110%" y="1189" width="0.0138%" height="15" fill="rgb(217,114,14)" fg:x="1521716681" fg:w="771831"/><text x="27.3610%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (70,321,858 samples, 1.25%)</title><rect x="25.8809%" y="1349" width="1.2529%" height="15" fill="rgb(216,145,22)" fg:x="1452668158" fg:w="70321858"/><text x="26.1309%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9,935,183 samples, 0.18%)</title><rect x="26.9567%" y="1333" width="0.1770%" height="15" fill="rgb(217,112,39)" fg:x="1513054833" fg:w="9935183"/><text x="27.2067%" y="1343.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9,935,183 samples, 0.18%)</title><rect x="26.9567%" y="1317" width="0.1770%" height="15" fill="rgb(225,85,32)" fg:x="1513054833" fg:w="9935183"/><text x="27.2067%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9,935,183 samples, 0.18%)</title><rect x="26.9567%" y="1301" width="0.1770%" height="15" fill="rgb(245,209,47)" fg:x="1513054833" fg:w="9935183"/><text x="27.2067%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9,935,183 samples, 0.18%)</title><rect x="26.9567%" y="1285" width="0.1770%" height="15" fill="rgb(218,220,15)" fg:x="1513054833" fg:w="9935183"/><text x="27.2067%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,273,335 samples, 0.02%)</title><rect x="27.1110%" y="1269" width="0.0227%" height="15" fill="rgb(222,202,31)" fg:x="1521716681" fg:w="1273335"/><text x="27.3610%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,273,335 samples, 0.02%)</title><rect x="27.1110%" y="1253" width="0.0227%" height="15" fill="rgb(243,203,4)" fg:x="1521716681" fg:w="1273335"/><text x="27.3610%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,001,725 samples, 0.04%)</title><rect x="27.1337%" y="1253" width="0.0357%" height="15" fill="rgb(237,92,17)" fg:x="1522990016" fg:w="2001725"/><text x="27.3837%" y="1263.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (2,001,725 samples, 0.04%)</title><rect x="27.1337%" y="1237" width="0.0357%" height="15" fill="rgb(231,119,7)" fg:x="1522990016" fg:w="2001725"/><text x="27.3837%" y="1247.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,593,277 samples, 0.03%)</title><rect x="27.1694%" y="1205" width="0.0284%" height="15" fill="rgb(237,82,41)" fg:x="1524991741" fg:w="1593277"/><text x="27.4194%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,056,102 samples, 0.04%)</title><rect x="27.1694%" y="1221" width="0.0366%" height="15" fill="rgb(226,81,48)" fg:x="1524991741" fg:w="2056102"/><text x="27.4194%" y="1231.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,120,421 samples, 0.02%)</title><rect x="27.2060%" y="1189" width="0.0200%" height="15" fill="rgb(234,70,51)" fg:x="1527047843" fg:w="1120421"/><text x="27.4560%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,621,925 samples, 0.03%)</title><rect x="27.2060%" y="1205" width="0.0289%" height="15" fill="rgb(251,86,4)" fg:x="1527047843" fg:w="1621925"/><text x="27.4560%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,624,933 samples, 0.05%)</title><rect x="27.2060%" y="1221" width="0.0468%" height="15" fill="rgb(244,144,28)" fg:x="1527047843" fg:w="2624933"/><text x="27.4560%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,003,008 samples, 0.02%)</title><rect x="27.2349%" y="1205" width="0.0179%" height="15" fill="rgb(232,161,39)" fg:x="1528669768" fg:w="1003008"/><text x="27.4849%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,572,087 samples, 0.10%)</title><rect x="27.1694%" y="1253" width="0.0993%" height="15" fill="rgb(247,34,51)" fg:x="1524991741" fg:w="5572087"/><text x="27.4194%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,572,087 samples, 0.10%)</title><rect x="27.1694%" y="1237" width="0.0993%" height="15" fill="rgb(225,132,2)" fg:x="1524991741" fg:w="5572087"/><text x="27.4194%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1221" width="0.0159%" height="15" fill="rgb(209,159,44)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1205" width="0.0159%" height="15" fill="rgb(251,214,1)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1189" width="0.0159%" height="15" fill="rgb(247,84,47)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1173" width="0.0159%" height="15" fill="rgb(240,111,43)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1157" width="0.0159%" height="15" fill="rgb(215,214,35)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1141" width="0.0159%" height="15" fill="rgb(248,207,23)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1125" width="0.0159%" height="15" fill="rgb(214,186,4)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1109" width="0.0159%" height="15" fill="rgb(220,133,22)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1093" width="0.0159%" height="15" fill="rgb(239,134,19)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1077" width="0.0159%" height="15" fill="rgb(250,140,9)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1061" width="0.0159%" height="15" fill="rgb(225,59,14)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1071.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1045" width="0.0159%" height="15" fill="rgb(214,152,51)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1029" width="0.0159%" height="15" fill="rgb(251,227,43)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (891,052 samples, 0.02%)</title><rect x="27.2528%" y="1013" width="0.0159%" height="15" fill="rgb(241,96,17)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (891,052 samples, 0.02%)</title><rect x="27.2528%" y="997" width="0.0159%" height="15" fill="rgb(234,198,43)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="1007.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (891,052 samples, 0.02%)</title><rect x="27.2528%" y="981" width="0.0159%" height="15" fill="rgb(220,108,29)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="991.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (891,052 samples, 0.02%)</title><rect x="27.2528%" y="965" width="0.0159%" height="15" fill="rgb(226,163,33)" fg:x="1529672776" fg:w="891052"/><text x="27.5028%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8,780,952 samples, 0.16%)</title><rect x="27.1337%" y="1269" width="0.1564%" height="15" fill="rgb(205,194,45)" fg:x="1522990016" fg:w="8780952"/><text x="27.3837%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1253" width="0.0215%" height="15" fill="rgb(206,143,44)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1237" width="0.0215%" height="15" fill="rgb(236,136,36)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1221" width="0.0215%" height="15" fill="rgb(249,172,42)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1205" width="0.0215%" height="15" fill="rgb(216,139,23)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1189" width="0.0215%" height="15" fill="rgb(207,166,20)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1173" width="0.0215%" height="15" fill="rgb(210,209,22)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1157" width="0.0215%" height="15" fill="rgb(232,118,20)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1141" width="0.0215%" height="15" fill="rgb(238,113,42)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1151.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1125" width="0.0215%" height="15" fill="rgb(231,42,5)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1135.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,207,140 samples, 0.02%)</title><rect x="27.2687%" y="1109" width="0.0215%" height="15" fill="rgb(243,166,24)" fg:x="1530563828" fg:w="1207140"/><text x="27.5187%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,052,650 samples, 0.02%)</title><rect x="27.2902%" y="1205" width="0.0188%" height="15" fill="rgb(237,226,12)" fg:x="1531770968" fg:w="1052650"/><text x="27.5402%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,052,650 samples, 0.02%)</title><rect x="27.2902%" y="1189" width="0.0188%" height="15" fill="rgb(229,133,24)" fg:x="1531770968" fg:w="1052650"/><text x="27.5402%" y="1199.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,052,650 samples, 0.02%)</title><rect x="27.2902%" y="1173" width="0.0188%" height="15" fill="rgb(238,33,43)" fg:x="1531770968" fg:w="1052650"/><text x="27.5402%" y="1183.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,052,650 samples, 0.02%)</title><rect x="27.2902%" y="1157" width="0.0188%" height="15" fill="rgb(227,59,38)" fg:x="1531770968" fg:w="1052650"/><text x="27.5402%" y="1167.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,052,650 samples, 0.02%)</title><rect x="27.2902%" y="1141" width="0.0188%" height="15" fill="rgb(230,97,0)" fg:x="1531770968" fg:w="1052650"/><text x="27.5402%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10,335,106 samples, 0.18%)</title><rect x="27.1337%" y="1285" width="0.1841%" height="15" fill="rgb(250,173,50)" fg:x="1522990016" fg:w="10335106"/><text x="27.3837%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,554,154 samples, 0.03%)</title><rect x="27.2902%" y="1269" width="0.0277%" height="15" fill="rgb(240,15,50)" fg:x="1531770968" fg:w="1554154"/><text x="27.5402%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,554,154 samples, 0.03%)</title><rect x="27.2902%" y="1253" width="0.0277%" height="15" fill="rgb(221,93,22)" fg:x="1531770968" fg:w="1554154"/><text x="27.5402%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,554,154 samples, 0.03%)</title><rect x="27.2902%" y="1237" width="0.0277%" height="15" fill="rgb(245,180,53)" fg:x="1531770968" fg:w="1554154"/><text x="27.5402%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,554,154 samples, 0.03%)</title><rect x="27.2902%" y="1221" width="0.0277%" height="15" fill="rgb(231,88,51)" fg:x="1531770968" fg:w="1554154"/><text x="27.5402%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (4,543,401 samples, 0.08%)</title><rect x="27.3179%" y="1173" width="0.0809%" height="15" fill="rgb(240,58,21)" fg:x="1533325122" fg:w="4543401"/><text x="27.5679%" y="1183.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (4,543,401 samples, 0.08%)</title><rect x="27.3179%" y="1157" width="0.0809%" height="15" fill="rgb(237,21,10)" fg:x="1533325122" fg:w="4543401"/><text x="27.5679%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,044,905 samples, 0.09%)</title><rect x="27.3179%" y="1205" width="0.0899%" height="15" fill="rgb(218,43,11)" fg:x="1533325122" fg:w="5044905"/><text x="27.5679%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,044,905 samples, 0.09%)</title><rect x="27.3179%" y="1189" width="0.0899%" height="15" fill="rgb(218,221,29)" fg:x="1533325122" fg:w="5044905"/><text x="27.5679%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,644,898 samples, 0.10%)</title><rect x="27.3179%" y="1221" width="0.1006%" height="15" fill="rgb(214,118,42)" fg:x="1533325122" fg:w="5644898"/><text x="27.5679%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1205" width="0.0107%" height="15" fill="rgb(251,200,26)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1189" width="0.0107%" height="15" fill="rgb(237,101,39)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1173" width="0.0107%" height="15" fill="rgb(251,117,11)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1157" width="0.0107%" height="15" fill="rgb(216,223,23)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1141" width="0.0107%" height="15" fill="rgb(251,54,12)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1125" width="0.0107%" height="15" fill="rgb(254,176,54)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1109" width="0.0107%" height="15" fill="rgb(210,32,8)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1093" width="0.0107%" height="15" fill="rgb(235,52,38)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1077" width="0.0107%" height="15" fill="rgb(231,4,44)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1061" width="0.0107%" height="15" fill="rgb(249,2,32)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1045" width="0.0107%" height="15" fill="rgb(224,65,26)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1029" width="0.0107%" height="15" fill="rgb(250,73,40)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (599,993 samples, 0.01%)</title><rect x="27.4077%" y="1013" width="0.0107%" height="15" fill="rgb(253,177,16)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (599,993 samples, 0.01%)</title><rect x="27.4077%" y="997" width="0.0107%" height="15" fill="rgb(217,32,34)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="1007.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (599,993 samples, 0.01%)</title><rect x="27.4077%" y="981" width="0.0107%" height="15" fill="rgb(212,7,10)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (599,993 samples, 0.01%)</title><rect x="27.4077%" y="965" width="0.0107%" height="15" fill="rgb(245,89,8)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (599,993 samples, 0.01%)</title><rect x="27.4077%" y="949" width="0.0107%" height="15" fill="rgb(237,16,53)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="959.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (599,993 samples, 0.01%)</title><rect x="27.4077%" y="933" width="0.0107%" height="15" fill="rgb(250,204,30)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="943.50"></text></g><g><title>[libc.so.6] (599,993 samples, 0.01%)</title><rect x="27.4077%" y="917" width="0.0107%" height="15" fill="rgb(208,77,27)" fg:x="1538370027" fg:w="599993"/><text x="27.6577%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (86,803,366 samples, 1.55%)</title><rect x="25.8809%" y="1365" width="1.5465%" height="15" fill="rgb(250,204,28)" fg:x="1452668158" fg:w="86803366"/><text x="26.1309%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (16,481,508 samples, 0.29%)</title><rect x="27.1337%" y="1349" width="0.2936%" height="15" fill="rgb(244,63,21)" fg:x="1522990016" fg:w="16481508"/><text x="27.3837%" y="1359.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (16,481,508 samples, 0.29%)</title><rect x="27.1337%" y="1333" width="0.2936%" height="15" fill="rgb(236,85,44)" fg:x="1522990016" fg:w="16481508"/><text x="27.3837%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16,481,508 samples, 0.29%)</title><rect x="27.1337%" y="1317" width="0.2936%" height="15" fill="rgb(215,98,4)" fg:x="1522990016" fg:w="16481508"/><text x="27.3837%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16,481,508 samples, 0.29%)</title><rect x="27.1337%" y="1301" width="0.2936%" height="15" fill="rgb(235,38,11)" fg:x="1522990016" fg:w="16481508"/><text x="27.3837%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6,146,402 samples, 0.11%)</title><rect x="27.3179%" y="1285" width="0.1095%" height="15" fill="rgb(254,186,25)" fg:x="1533325122" fg:w="6146402"/><text x="27.5679%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,146,402 samples, 0.11%)</title><rect x="27.3179%" y="1269" width="0.1095%" height="15" fill="rgb(225,55,31)" fg:x="1533325122" fg:w="6146402"/><text x="27.5679%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,146,402 samples, 0.11%)</title><rect x="27.3179%" y="1253" width="0.1095%" height="15" fill="rgb(211,15,21)" fg:x="1533325122" fg:w="6146402"/><text x="27.5679%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6,146,402 samples, 0.11%)</title><rect x="27.3179%" y="1237" width="0.1095%" height="15" fill="rgb(215,187,41)" fg:x="1533325122" fg:w="6146402"/><text x="27.5679%" y="1247.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,784,856 samples, 0.03%)</title><rect x="27.4274%" y="1269" width="0.0318%" height="15" fill="rgb(248,69,32)" fg:x="1539471524" fg:w="1784856"/><text x="27.6774%" y="1279.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,784,856 samples, 0.03%)</title><rect x="27.4274%" y="1253" width="0.0318%" height="15" fill="rgb(252,102,52)" fg:x="1539471524" fg:w="1784856"/><text x="27.6774%" y="1263.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,784,856 samples, 0.03%)</title><rect x="27.4274%" y="1237" width="0.0318%" height="15" fill="rgb(253,140,32)" fg:x="1539471524" fg:w="1784856"/><text x="27.6774%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,289,368 samples, 0.06%)</title><rect x="27.4274%" y="1285" width="0.0586%" height="15" fill="rgb(216,56,42)" fg:x="1539471524" fg:w="3289368"/><text x="27.6774%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,504,512 samples, 0.03%)</title><rect x="27.4592%" y="1269" width="0.0268%" height="15" fill="rgb(216,184,14)" fg:x="1541256380" fg:w="1504512"/><text x="27.7092%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,003,008 samples, 0.02%)</title><rect x="27.4681%" y="1253" width="0.0179%" height="15" fill="rgb(237,187,27)" fg:x="1541757884" fg:w="1003008"/><text x="27.7181%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,003,008 samples, 0.02%)</title><rect x="27.4681%" y="1237" width="0.0179%" height="15" fill="rgb(219,65,3)" fg:x="1541757884" fg:w="1003008"/><text x="27.7181%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,003,008 samples, 0.02%)</title><rect x="27.4681%" y="1221" width="0.0179%" height="15" fill="rgb(245,83,25)" fg:x="1541757884" fg:w="1003008"/><text x="27.7181%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,003,008 samples, 0.02%)</title><rect x="27.4681%" y="1205" width="0.0179%" height="15" fill="rgb(214,205,45)" fg:x="1541757884" fg:w="1003008"/><text x="27.7181%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (984,230 samples, 0.02%)</title><rect x="27.4860%" y="1205" width="0.0175%" height="15" fill="rgb(241,20,18)" fg:x="1542760892" fg:w="984230"/><text x="27.7360%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (984,230 samples, 0.02%)</title><rect x="27.4860%" y="1189" width="0.0175%" height="15" fill="rgb(232,163,23)" fg:x="1542760892" fg:w="984230"/><text x="27.7360%" y="1199.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (984,230 samples, 0.02%)</title><rect x="27.4860%" y="1173" width="0.0175%" height="15" fill="rgb(214,5,46)" fg:x="1542760892" fg:w="984230"/><text x="27.7360%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,464,099 samples, 0.10%)</title><rect x="27.4274%" y="1301" width="0.0973%" height="15" fill="rgb(229,78,17)" fg:x="1539471524" fg:w="5464099"/><text x="27.6774%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,174,731 samples, 0.04%)</title><rect x="27.4860%" y="1285" width="0.0387%" height="15" fill="rgb(248,89,10)" fg:x="1542760892" fg:w="2174731"/><text x="27.7360%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,174,731 samples, 0.04%)</title><rect x="27.4860%" y="1269" width="0.0387%" height="15" fill="rgb(248,54,15)" fg:x="1542760892" fg:w="2174731"/><text x="27.7360%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,174,731 samples, 0.04%)</title><rect x="27.4860%" y="1253" width="0.0387%" height="15" fill="rgb(223,116,6)" fg:x="1542760892" fg:w="2174731"/><text x="27.7360%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,174,731 samples, 0.04%)</title><rect x="27.4860%" y="1237" width="0.0387%" height="15" fill="rgb(205,125,38)" fg:x="1542760892" fg:w="2174731"/><text x="27.7360%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,174,731 samples, 0.04%)</title><rect x="27.4860%" y="1221" width="0.0387%" height="15" fill="rgb(251,78,38)" fg:x="1542760892" fg:w="2174731"/><text x="27.7360%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1205" width="0.0212%" height="15" fill="rgb(253,78,28)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1189" width="0.0212%" height="15" fill="rgb(209,120,3)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1173" width="0.0212%" height="15" fill="rgb(238,229,9)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1157" width="0.0212%" height="15" fill="rgb(253,159,18)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1141" width="0.0212%" height="15" fill="rgb(244,42,34)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1125" width="0.0212%" height="15" fill="rgb(224,8,7)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1109" width="0.0212%" height="15" fill="rgb(210,201,45)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1093" width="0.0212%" height="15" fill="rgb(252,185,21)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1077" width="0.0212%" height="15" fill="rgb(223,131,1)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1061" width="0.0212%" height="15" fill="rgb(245,141,16)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1045" width="0.0212%" height="15" fill="rgb(229,55,45)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1029" width="0.0212%" height="15" fill="rgb(208,92,15)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="1013" width="0.0212%" height="15" fill="rgb(234,185,47)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="997" width="0.0212%" height="15" fill="rgb(253,104,50)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="981" width="0.0212%" height="15" fill="rgb(205,70,7)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="965" width="0.0212%" height="15" fill="rgb(240,178,43)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="949" width="0.0212%" height="15" fill="rgb(214,112,2)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="933" width="0.0212%" height="15" fill="rgb(206,46,17)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="943.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="917" width="0.0212%" height="15" fill="rgb(225,220,16)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="927.50"></text></g><g><title>&lt;jpeg_decoder::upsampler::UpsamplerH2V2 as jpeg_decoder::upsampler::Upsample&gt;::upsample_row (1,190,501 samples, 0.02%)</title><rect x="27.5035%" y="901" width="0.0212%" height="15" fill="rgb(238,65,40)" fg:x="1543745122" fg:w="1190501"/><text x="27.7535%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5,908,219 samples, 0.11%)</title><rect x="27.4274%" y="1365" width="0.1053%" height="15" fill="rgb(230,151,21)" fg:x="1539471524" fg:w="5908219"/><text x="27.6774%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,908,219 samples, 0.11%)</title><rect x="27.4274%" y="1349" width="0.1053%" height="15" fill="rgb(218,58,49)" fg:x="1539471524" fg:w="5908219"/><text x="27.6774%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5,908,219 samples, 0.11%)</title><rect x="27.4274%" y="1333" width="0.1053%" height="15" fill="rgb(219,179,14)" fg:x="1539471524" fg:w="5908219"/><text x="27.6774%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,908,219 samples, 0.11%)</title><rect x="27.4274%" y="1317" width="0.1053%" height="15" fill="rgb(223,72,1)" fg:x="1539471524" fg:w="5908219"/><text x="27.6774%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (94,400,852 samples, 1.68%)</title><rect x="25.8809%" y="1381" width="1.6819%" height="15" fill="rgb(238,126,10)" fg:x="1452668158" fg:w="94400852"/><text x="26.1309%" y="1391.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (1,689,267 samples, 0.03%)</title><rect x="27.5326%" y="1365" width="0.0301%" height="15" fill="rgb(224,206,38)" fg:x="1545379743" fg:w="1689267"/><text x="27.7826%" y="1375.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (1,689,267 samples, 0.03%)</title><rect x="27.5326%" y="1349" width="0.0301%" height="15" fill="rgb(212,201,54)" fg:x="1545379743" fg:w="1689267"/><text x="27.7826%" y="1359.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,653,350 samples, 0.03%)</title><rect x="27.5627%" y="1253" width="0.0295%" height="15" fill="rgb(218,154,48)" fg:x="1547069010" fg:w="1653350"/><text x="27.8127%" y="1263.50"></text></g><g><title>[libc.so.6] (1,653,350 samples, 0.03%)</title><rect x="27.5627%" y="1237" width="0.0295%" height="15" fill="rgb(232,93,24)" fg:x="1547069010" fg:w="1653350"/><text x="27.8127%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,359,924 samples, 0.04%)</title><rect x="27.5627%" y="1301" width="0.0420%" height="15" fill="rgb(245,30,21)" fg:x="1547069010" fg:w="2359924"/><text x="27.8127%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,359,924 samples, 0.04%)</title><rect x="27.5627%" y="1285" width="0.0420%" height="15" fill="rgb(242,148,29)" fg:x="1547069010" fg:w="2359924"/><text x="27.8127%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,359,924 samples, 0.04%)</title><rect x="27.5627%" y="1269" width="0.0420%" height="15" fill="rgb(244,153,54)" fg:x="1547069010" fg:w="2359924"/><text x="27.8127%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (706,574 samples, 0.01%)</title><rect x="27.5922%" y="1253" width="0.0126%" height="15" fill="rgb(252,87,22)" fg:x="1548722360" fg:w="706574"/><text x="27.8422%" y="1263.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (706,574 samples, 0.01%)</title><rect x="27.5922%" y="1237" width="0.0126%" height="15" fill="rgb(210,51,29)" fg:x="1548722360" fg:w="706574"/><text x="27.8422%" y="1247.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (706,574 samples, 0.01%)</title><rect x="27.5922%" y="1221" width="0.0126%" height="15" fill="rgb(242,136,47)" fg:x="1548722360" fg:w="706574"/><text x="27.8422%" y="1231.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (706,574 samples, 0.01%)</title><rect x="27.5922%" y="1205" width="0.0126%" height="15" fill="rgb(238,68,4)" fg:x="1548722360" fg:w="706574"/><text x="27.8422%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,514,436 samples, 0.06%)</title><rect x="27.5627%" y="1317" width="0.0626%" height="15" fill="rgb(242,161,30)" fg:x="1547069010" fg:w="3514436"/><text x="27.8127%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1301" width="0.0206%" height="15" fill="rgb(218,58,44)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1311.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1285" width="0.0206%" height="15" fill="rgb(252,125,32)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1269" width="0.0206%" height="15" fill="rgb(219,178,0)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1253" width="0.0206%" height="15" fill="rgb(213,152,7)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1237" width="0.0206%" height="15" fill="rgb(249,109,34)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1221" width="0.0206%" height="15" fill="rgb(232,96,21)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1205" width="0.0206%" height="15" fill="rgb(228,27,39)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1189" width="0.0206%" height="15" fill="rgb(211,182,52)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1173" width="0.0206%" height="15" fill="rgb(234,178,38)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1183.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1157" width="0.0206%" height="15" fill="rgb(221,111,3)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1167.50"></text></g><g><title>[libc.so.6] (1,154,512 samples, 0.02%)</title><rect x="27.6048%" y="1141" width="0.0206%" height="15" fill="rgb(228,175,21)" fg:x="1549428934" fg:w="1154512"/><text x="27.8548%" y="1151.50"></text></g><g><title>[libc.so.6] (910,319 samples, 0.02%)</title><rect x="27.6253%" y="1205" width="0.0162%" height="15" fill="rgb(228,174,43)" fg:x="1550583446" fg:w="910319"/><text x="27.8753%" y="1215.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,411,823 samples, 0.03%)</title><rect x="27.6253%" y="1221" width="0.0252%" height="15" fill="rgb(211,191,0)" fg:x="1550583446" fg:w="1411823"/><text x="27.8753%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (100,398,073 samples, 1.79%)</title><rect x="25.8809%" y="1397" width="1.7887%" height="15" fill="rgb(253,117,3)" fg:x="1452668158" fg:w="100398073"/><text x="26.1309%" y="1407.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5,997,221 samples, 0.11%)</title><rect x="27.5627%" y="1381" width="0.1068%" height="15" fill="rgb(241,127,19)" fg:x="1547069010" fg:w="5997221"/><text x="27.8127%" y="1391.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,997,221 samples, 0.11%)</title><rect x="27.5627%" y="1365" width="0.1068%" height="15" fill="rgb(218,103,12)" fg:x="1547069010" fg:w="5997221"/><text x="27.8127%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5,997,221 samples, 0.11%)</title><rect x="27.5627%" y="1349" width="0.1068%" height="15" fill="rgb(236,214,43)" fg:x="1547069010" fg:w="5997221"/><text x="27.8127%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,997,221 samples, 0.11%)</title><rect x="27.5627%" y="1333" width="0.1068%" height="15" fill="rgb(244,144,19)" fg:x="1547069010" fg:w="5997221"/><text x="27.8127%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,482,785 samples, 0.04%)</title><rect x="27.6253%" y="1317" width="0.0442%" height="15" fill="rgb(246,188,10)" fg:x="1550583446" fg:w="2482785"/><text x="27.8753%" y="1327.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,482,785 samples, 0.04%)</title><rect x="27.6253%" y="1301" width="0.0442%" height="15" fill="rgb(212,193,33)" fg:x="1550583446" fg:w="2482785"/><text x="27.8753%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,482,785 samples, 0.04%)</title><rect x="27.6253%" y="1285" width="0.0442%" height="15" fill="rgb(241,51,29)" fg:x="1550583446" fg:w="2482785"/><text x="27.8753%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,482,785 samples, 0.04%)</title><rect x="27.6253%" y="1269" width="0.0442%" height="15" fill="rgb(211,58,19)" fg:x="1550583446" fg:w="2482785"/><text x="27.8753%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,482,785 samples, 0.04%)</title><rect x="27.6253%" y="1253" width="0.0442%" height="15" fill="rgb(229,111,26)" fg:x="1550583446" fg:w="2482785"/><text x="27.8753%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,482,785 samples, 0.04%)</title><rect x="27.6253%" y="1237" width="0.0442%" height="15" fill="rgb(213,115,40)" fg:x="1550583446" fg:w="2482785"/><text x="27.8753%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,070,962 samples, 0.02%)</title><rect x="27.6505%" y="1221" width="0.0191%" height="15" fill="rgb(209,56,44)" fg:x="1551995269" fg:w="1070962"/><text x="27.9005%" y="1231.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (1,070,962 samples, 0.02%)</title><rect x="27.6505%" y="1205" width="0.0191%" height="15" fill="rgb(230,108,32)" fg:x="1551995269" fg:w="1070962"/><text x="27.9005%" y="1215.50"></text></g><g><title>jpeg_decoder::decoder::color_convert_line_ycbcr (1,070,962 samples, 0.02%)</title><rect x="27.6505%" y="1189" width="0.0191%" height="15" fill="rgb(216,165,31)" fg:x="1551995269" fg:w="1070962"/><text x="27.9005%" y="1199.50"></text></g><g><title>jpeg_decoder::arch::ssse3::color_convert_line_ycbcr (1,070,962 samples, 0.02%)</title><rect x="27.6505%" y="1173" width="0.0191%" height="15" fill="rgb(218,122,21)" fg:x="1551995269" fg:w="1070962"/><text x="27.9005%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (101,271,587 samples, 1.80%)</title><rect x="25.8809%" y="1413" width="1.8043%" height="15" fill="rgb(223,224,47)" fg:x="1452668158" fg:w="101271587"/><text x="26.1309%" y="1423.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1397" width="0.0156%" height="15" fill="rgb(238,102,44)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1407.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1381" width="0.0156%" height="15" fill="rgb(236,46,40)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1365" width="0.0156%" height="15" fill="rgb(247,202,50)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1349" width="0.0156%" height="15" fill="rgb(209,99,20)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1333" width="0.0156%" height="15" fill="rgb(252,27,34)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1317" width="0.0156%" height="15" fill="rgb(215,206,23)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1327.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1301" width="0.0156%" height="15" fill="rgb(212,135,36)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1285" width="0.0156%" height="15" fill="rgb(240,189,1)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1269" width="0.0156%" height="15" fill="rgb(242,56,20)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1253" width="0.0156%" height="15" fill="rgb(247,132,33)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1237" width="0.0156%" height="15" fill="rgb(208,149,11)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1221" width="0.0156%" height="15" fill="rgb(211,33,11)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1205" width="0.0156%" height="15" fill="rgb(221,29,38)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1189" width="0.0156%" height="15" fill="rgb(206,182,49)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1173" width="0.0156%" height="15" fill="rgb(216,140,1)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1157" width="0.0156%" height="15" fill="rgb(232,57,40)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1167.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1141" width="0.0156%" height="15" fill="rgb(224,186,18)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1151.50"></text></g><g><title>[libc.so.6] (873,514 samples, 0.02%)</title><rect x="27.6696%" y="1125" width="0.0156%" height="15" fill="rgb(215,121,11)" fg:x="1553066231" fg:w="873514"/><text x="27.9196%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (102,299,436 samples, 1.82%)</title><rect x="25.8809%" y="1429" width="1.8226%" height="15" fill="rgb(245,147,10)" fg:x="1452668158" fg:w="102299436"/><text x="26.1309%" y="1439.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,027,849 samples, 0.02%)</title><rect x="27.6851%" y="1413" width="0.0183%" height="15" fill="rgb(238,153,13)" fg:x="1553939745" fg:w="1027849"/><text x="27.9351%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,027,849 samples, 0.02%)</title><rect x="27.6851%" y="1397" width="0.0183%" height="15" fill="rgb(233,108,0)" fg:x="1553939745" fg:w="1027849"/><text x="27.9351%" y="1407.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,443,439,818 samples, 25.72%)</title><rect x="2.0255%" y="1461" width="25.7164%" height="15" fill="rgb(212,157,17)" fg:x="113687973" fg:w="1443439818"/><text x="2.2755%" y="1471.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayo..</text></g><g><title>rayon_core::join::join_context::{{closure}} (104,459,633 samples, 1.86%)</title><rect x="25.8809%" y="1445" width="1.8611%" height="15" fill="rgb(225,213,38)" fg:x="1452668158" fg:w="104459633"/><text x="26.1309%" y="1455.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,160,197 samples, 0.04%)</title><rect x="27.7034%" y="1429" width="0.0385%" height="15" fill="rgb(248,16,11)" fg:x="1554967594" fg:w="2160197"/><text x="27.9534%" y="1439.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,160,197 samples, 0.04%)</title><rect x="27.7034%" y="1413" width="0.0385%" height="15" fill="rgb(241,33,4)" fg:x="1554967594" fg:w="2160197"/><text x="27.9534%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,160,197 samples, 0.04%)</title><rect x="27.7034%" y="1397" width="0.0385%" height="15" fill="rgb(222,26,43)" fg:x="1554967594" fg:w="2160197"/><text x="27.9534%" y="1407.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,160,197 samples, 0.04%)</title><rect x="27.7034%" y="1381" width="0.0385%" height="15" fill="rgb(243,29,36)" fg:x="1554967594" fg:w="2160197"/><text x="27.9534%" y="1391.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,160,197 samples, 0.04%)</title><rect x="27.7034%" y="1365" width="0.0385%" height="15" fill="rgb(241,9,27)" fg:x="1554967594" fg:w="2160197"/><text x="27.9534%" y="1375.50"></text></g><g><title>__sched_yield (6,828,875 samples, 0.12%)</title><rect x="27.7419%" y="1461" width="0.1217%" height="15" fill="rgb(205,117,26)" fg:x="1557127791" fg:w="6828875"/><text x="27.9919%" y="1471.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,482,674 samples, 0.03%)</title><rect x="27.8636%" y="1461" width="0.0264%" height="15" fill="rgb(209,80,39)" fg:x="1563956666" fg:w="1482674"/><text x="28.1136%" y="1471.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (11,840,667 samples, 0.21%)</title><rect x="29.0514%" y="1381" width="0.2110%" height="15" fill="rgb(239,155,6)" fg:x="1630628781" fg:w="11840667"/><text x="29.3014%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (79,694,436 samples, 1.42%)</title><rect x="27.9197%" y="1445" width="1.4198%" height="15" fill="rgb(212,104,12)" fg:x="1567103796" fg:w="79694436"/><text x="28.1697%" y="1455.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (65,986,488 samples, 1.18%)</title><rect x="28.1639%" y="1429" width="1.1756%" height="15" fill="rgb(234,204,3)" fg:x="1580811744" fg:w="65986488"/><text x="28.4139%" y="1439.50"></text></g><g><title>crossbeam_epoch::default::with_handle (50,568,275 samples, 0.90%)</title><rect x="28.4386%" y="1413" width="0.9009%" height="15" fill="rgb(251,218,7)" fg:x="1596229957" fg:w="50568275"/><text x="28.6886%" y="1423.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (16,169,451 samples, 0.29%)</title><rect x="29.0514%" y="1397" width="0.2881%" height="15" fill="rgb(221,81,32)" fg:x="1630628781" fg:w="16169451"/><text x="29.3014%" y="1407.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (4,328,784 samples, 0.08%)</title><rect x="29.2624%" y="1381" width="0.0771%" height="15" fill="rgb(214,152,26)" fg:x="1642469448" fg:w="4328784"/><text x="29.5124%" y="1391.50"></text></g><g><title>[libc.so.6] (3,846,767 samples, 0.07%)</title><rect x="29.2710%" y="1365" width="0.0685%" height="15" fill="rgb(223,22,3)" fg:x="1642951465" fg:w="3846767"/><text x="29.5210%" y="1375.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (6,003,057 samples, 0.11%)</title><rect x="29.3395%" y="1445" width="0.1070%" height="15" fill="rgb(207,174,7)" fg:x="1646798232" fg:w="6003057"/><text x="29.5895%" y="1455.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (93,547,149 samples, 1.67%)</title><rect x="27.8900%" y="1461" width="1.6666%" height="15" fill="rgb(224,19,52)" fg:x="1565439340" fg:w="93547149"/><text x="28.1400%" y="1471.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6,185,200 samples, 0.11%)</title><rect x="29.4465%" y="1445" width="0.1102%" height="15" fill="rgb(228,24,14)" fg:x="1652801289" fg:w="6185200"/><text x="29.6965%" y="1455.50"></text></g><g><title>crossbeam_epoch::default::with_handle (5,479,450 samples, 0.10%)</title><rect x="29.4590%" y="1429" width="0.0976%" height="15" fill="rgb(230,153,43)" fg:x="1653507039" fg:w="5479450"/><text x="29.7090%" y="1439.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (8,001,649 samples, 0.14%)</title><rect x="29.5566%" y="1461" width="0.1426%" height="15" fill="rgb(231,106,12)" fg:x="1658986489" fg:w="8001649"/><text x="29.8066%" y="1471.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (6,711,728 samples, 0.12%)</title><rect x="29.5796%" y="1445" width="0.1196%" height="15" fill="rgb(215,92,2)" fg:x="1660276410" fg:w="6711728"/><text x="29.8296%" y="1455.50"></text></g><g><title>[libc.so.6] (1,580,994,997 samples, 28.17%)</title><rect x="1.6198%" y="1573" width="28.1671%" height="15" fill="rgb(249,143,25)" fg:x="90918266" fg:w="1580994997"/><text x="1.8698%" y="1583.50">[libc.so.6]</text></g><g><title>[libc.so.6] (1,576,975,330 samples, 28.10%)</title><rect x="1.6914%" y="1557" width="28.0955%" height="15" fill="rgb(252,7,35)" fg:x="94937933" fg:w="1576975330"/><text x="1.9414%" y="1567.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1,561,681,441 samples, 27.82%)</title><rect x="1.9639%" y="1541" width="27.8231%" height="15" fill="rgb(216,69,40)" fg:x="110231822" fg:w="1561681441"/><text x="2.2139%" y="1551.50">std::sys::pal::unix::thread::Thread::new::thr..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,561,681,441 samples, 27.82%)</title><rect x="1.9639%" y="1525" width="27.8231%" height="15" fill="rgb(240,36,33)" fg:x="110231822" fg:w="1561681441"/><text x="2.2139%" y="1535.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,561,681,441 samples, 27.82%)</title><rect x="1.9639%" y="1509" width="27.8231%" height="15" fill="rgb(231,128,14)" fg:x="110231822" fg:w="1561681441"/><text x="2.2139%" y="1519.50">std::sys::backtrace::__rust_begin_short_backt..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (1,561,681,441 samples, 27.82%)</title><rect x="1.9639%" y="1493" width="27.8231%" height="15" fill="rgb(245,143,14)" fg:x="110231822" fg:w="1561681441"/><text x="2.2139%" y="1503.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,561,681,441 samples, 27.82%)</title><rect x="1.9639%" y="1477" width="27.8231%" height="15" fill="rgb(222,130,28)" fg:x="110231822" fg:w="1561681441"/><text x="2.2139%" y="1487.50">rayon_core::registry::WorkerThread::wait_unti..</text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (4,925,125 samples, 0.09%)</title><rect x="29.6992%" y="1461" width="0.0877%" height="15" fill="rgb(212,10,48)" fg:x="1666988138" fg:w="4925125"/><text x="29.9492%" y="1471.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (4,925,125 samples, 0.09%)</title><rect x="29.6992%" y="1445" width="0.0877%" height="15" fill="rgb(254,118,45)" fg:x="1666988138" fg:w="4925125"/><text x="29.9492%" y="1455.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (4,007,029 samples, 0.07%)</title><rect x="29.7156%" y="1429" width="0.0714%" height="15" fill="rgb(228,6,45)" fg:x="1667906234" fg:w="4007029"/><text x="29.9656%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (15,328,076 samples, 0.27%)</title><rect x="29.7870%" y="1573" width="0.2731%" height="15" fill="rgb(241,18,35)" fg:x="1671913263" fg:w="15328076"/><text x="30.0370%" y="1583.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,271,686 samples, 0.04%)</title><rect x="30.0600%" y="1573" width="0.0405%" height="15" fill="rgb(227,214,53)" fg:x="1687241339" fg:w="2271686"/><text x="30.3100%" y="1583.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,271,686 samples, 0.04%)</title><rect x="30.0600%" y="1557" width="0.0405%" height="15" fill="rgb(224,107,51)" fg:x="1687241339" fg:w="2271686"/><text x="30.3100%" y="1567.50"></text></g><g><title>[libc.so.6] (1,413,001 samples, 0.03%)</title><rect x="30.1094%" y="1557" width="0.0252%" height="15" fill="rgb(248,60,28)" fg:x="1690014529" fg:w="1413001"/><text x="30.3594%" y="1567.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (8,591,369 samples, 0.15%)</title><rect x="30.1346%" y="1557" width="0.1531%" height="15" fill="rgb(249,101,23)" fg:x="1691427530" fg:w="8591369"/><text x="30.3846%" y="1567.50"></text></g><g><title>jpeg_decoder::arch::ssse3::dequantize_and_idct_block_8x8 (4,369,289 samples, 0.08%)</title><rect x="30.2877%" y="1557" width="0.0778%" height="15" fill="rgb(228,51,19)" fg:x="1700018899" fg:w="4369289"/><text x="30.5377%" y="1567.50"></text></g><g><title>jpeg_decoder::huffman::HuffmanDecoder::decode (7,987,583 samples, 0.14%)</title><rect x="30.3745%" y="1557" width="0.1423%" height="15" fill="rgb(213,20,6)" fg:x="1704889692" fg:w="7987583"/><text x="30.6245%" y="1567.50"></text></g><g><title>truncf (1,351,395 samples, 0.02%)</title><rect x="30.5257%" y="1557" width="0.0241%" height="15" fill="rgb(212,124,10)" fg:x="1713378779" fg:w="1351395"/><text x="30.7757%" y="1567.50"></text></g><g><title>[unknown] (27,775,694 samples, 0.49%)</title><rect x="30.1005%" y="1573" width="0.4949%" height="15" fill="rgb(248,3,40)" fg:x="1689513025" fg:w="27775694"/><text x="30.3505%" y="1583.50"></text></g><g><title>wgpu_core::binding_model::BindGroup&lt;A&gt;::validate_dynamic_bindings (2,558,545 samples, 0.05%)</title><rect x="30.5498%" y="1557" width="0.0456%" height="15" fill="rgb(223,178,23)" fg:x="1714730174" fg:w="2558545"/><text x="30.7998%" y="1567.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,559,690 samples, 0.03%)</title><rect x="30.5954%" y="1493" width="0.0278%" height="15" fill="rgb(240,132,45)" fg:x="1717288719" fg:w="1559690"/><text x="30.8454%" y="1503.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,559,690 samples, 0.03%)</title><rect x="30.5954%" y="1477" width="0.0278%" height="15" fill="rgb(245,164,36)" fg:x="1717288719" fg:w="1559690"/><text x="30.8454%" y="1487.50"></text></g><g><title>[libEGL.so.1.1.0] (1,559,690 samples, 0.03%)</title><rect x="30.5954%" y="1461" width="0.0278%" height="15" fill="rgb(231,188,53)" fg:x="1717288719" fg:w="1559690"/><text x="30.8454%" y="1471.50"></text></g><g><title>cfree (1,559,690 samples, 0.03%)</title><rect x="30.5954%" y="1445" width="0.0278%" height="15" fill="rgb(237,198,39)" fg:x="1717288719" fg:w="1559690"/><text x="30.8454%" y="1455.50"></text></g><g><title>[libc.so.6] (1,559,690 samples, 0.03%)</title><rect x="30.5954%" y="1429" width="0.0278%" height="15" fill="rgb(223,120,35)" fg:x="1717288719" fg:w="1559690"/><text x="30.8454%" y="1439.50"></text></g><g><title>[libc.so.6] (1,559,690 samples, 0.03%)</title><rect x="30.5954%" y="1413" width="0.0278%" height="15" fill="rgb(253,107,49)" fg:x="1717288719" fg:w="1559690"/><text x="30.8454%" y="1423.50"></text></g><g><title>[libc.so.6] (1,559,690 samples, 0.03%)</title><rect x="30.5954%" y="1397" width="0.0278%" height="15" fill="rgb(216,44,31)" fg:x="1717288719" fg:w="1559690"/><text x="30.8454%" y="1407.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1493" width="0.0694%" height="15" fill="rgb(253,87,21)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1503.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1477" width="0.0694%" height="15" fill="rgb(226,18,2)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1487.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1461" width="0.0694%" height="15" fill="rgb(216,8,46)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1471.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1445" width="0.0694%" height="15" fill="rgb(226,140,39)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1455.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1429" width="0.0694%" height="15" fill="rgb(221,194,54)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1439.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1413" width="0.0694%" height="15" fill="rgb(213,92,11)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1423.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1397" width="0.0694%" height="15" fill="rgb(229,162,46)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1407.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1381" width="0.0694%" height="15" fill="rgb(214,111,36)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1391.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1365" width="0.0694%" height="15" fill="rgb(207,6,21)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1375.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (3,896,732 samples, 0.07%)</title><rect x="30.6232%" y="1349" width="0.0694%" height="15" fill="rgb(213,127,38)" fg:x="1718848409" fg:w="3896732"/><text x="30.8732%" y="1359.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,018,575 samples, 0.02%)</title><rect x="30.6926%" y="1493" width="0.0181%" height="15" fill="rgb(238,118,32)" fg:x="1722745141" fg:w="1018575"/><text x="30.9426%" y="1503.50"></text></g><g><title>pthread_once (1,018,575 samples, 0.02%)</title><rect x="30.6926%" y="1477" width="0.0181%" height="15" fill="rgb(240,139,39)" fg:x="1722745141" fg:w="1018575"/><text x="30.9426%" y="1487.50"></text></g><g><title>[libc.so.6] (1,018,575 samples, 0.02%)</title><rect x="30.6926%" y="1461" width="0.0181%" height="15" fill="rgb(235,10,37)" fg:x="1722745141" fg:w="1018575"/><text x="30.9426%" y="1471.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,018,575 samples, 0.02%)</title><rect x="30.6926%" y="1445" width="0.0181%" height="15" fill="rgb(249,171,38)" fg:x="1722745141" fg:w="1018575"/><text x="30.9426%" y="1455.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,018,575 samples, 0.02%)</title><rect x="30.6926%" y="1429" width="0.0181%" height="15" fill="rgb(242,144,32)" fg:x="1722745141" fg:w="1018575"/><text x="30.9426%" y="1439.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,018,575 samples, 0.02%)</title><rect x="30.6926%" y="1413" width="0.0181%" height="15" fill="rgb(217,117,21)" fg:x="1722745141" fg:w="1018575"/><text x="30.9426%" y="1423.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (4,371,768 samples, 0.08%)</title><rect x="30.7107%" y="1493" width="0.0779%" height="15" fill="rgb(249,87,1)" fg:x="1723763716" fg:w="4371768"/><text x="30.9607%" y="1503.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (4,371,768 samples, 0.08%)</title><rect x="30.7107%" y="1477" width="0.0779%" height="15" fill="rgb(248,196,48)" fg:x="1723763716" fg:w="4371768"/><text x="30.9607%" y="1487.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1445" width="0.0245%" height="15" fill="rgb(251,206,33)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1429" width="0.0245%" height="15" fill="rgb(232,141,28)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1413" width="0.0245%" height="15" fill="rgb(209,167,14)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1397" width="0.0245%" height="15" fill="rgb(225,11,50)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1381" width="0.0245%" height="15" fill="rgb(209,50,20)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1365" width="0.0245%" height="15" fill="rgb(212,17,46)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1349" width="0.0245%" height="15" fill="rgb(216,101,39)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1359.50"></text></g><g><title>cfree (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1333" width="0.0245%" height="15" fill="rgb(212,228,48)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1343.50"></text></g><g><title>[libc.so.6] (1,373,363 samples, 0.02%)</title><rect x="30.7886%" y="1317" width="0.0245%" height="15" fill="rgb(250,6,50)" fg:x="1728135484" fg:w="1373363"/><text x="31.0386%" y="1327.50"></text></g><g><title>exit (13,454,759 samples, 0.24%)</title><rect x="30.5954%" y="1525" width="0.2397%" height="15" fill="rgb(250,160,48)" fg:x="1717288719" fg:w="13454759"/><text x="30.8454%" y="1535.50"></text></g><g><title>[libc.so.6] (13,454,759 samples, 0.24%)</title><rect x="30.5954%" y="1509" width="0.2397%" height="15" fill="rgb(244,216,33)" fg:x="1717288719" fg:w="13454759"/><text x="30.8454%" y="1519.50"></text></g><g><title>glDeterministicTPCModeDistParams (2,607,994 samples, 0.05%)</title><rect x="30.7886%" y="1493" width="0.0465%" height="15" fill="rgb(207,157,5)" fg:x="1728135484" fg:w="2607994"/><text x="31.0386%" y="1503.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (2,607,994 samples, 0.05%)</title><rect x="30.7886%" y="1477" width="0.0465%" height="15" fill="rgb(228,199,8)" fg:x="1728135484" fg:w="2607994"/><text x="31.0386%" y="1487.50"></text></g><g><title>[libGLX_nvidia.so.575.64] (2,607,994 samples, 0.05%)</title><rect x="30.7886%" y="1461" width="0.0465%" height="15" fill="rgb(227,80,20)" fg:x="1728135484" fg:w="2607994"/><text x="31.0386%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,234,631 samples, 0.02%)</title><rect x="30.8131%" y="1445" width="0.0220%" height="15" fill="rgb(222,9,33)" fg:x="1729508847" fg:w="1234631"/><text x="31.0631%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,234,631 samples, 0.02%)</title><rect x="30.8131%" y="1429" width="0.0220%" height="15" fill="rgb(239,44,28)" fg:x="1729508847" fg:w="1234631"/><text x="31.0631%" y="1439.50"></text></g><g><title>cfree (1,234,631 samples, 0.02%)</title><rect x="30.8131%" y="1413" width="0.0220%" height="15" fill="rgb(249,187,43)" fg:x="1729508847" fg:w="1234631"/><text x="31.0631%" y="1423.50"></text></g><g><title>[libc.so.6] (1,234,631 samples, 0.02%)</title><rect x="30.8131%" y="1397" width="0.0220%" height="15" fill="rgb(216,141,28)" fg:x="1729508847" fg:w="1234631"/><text x="31.0631%" y="1407.50"></text></g><g><title>[libc.so.6] (1,234,631 samples, 0.02%)</title><rect x="30.8131%" y="1381" width="0.0220%" height="15" fill="rgb(230,154,53)" fg:x="1729508847" fg:w="1234631"/><text x="31.0631%" y="1391.50"></text></g><g><title>[libc.so.6] (1,234,631 samples, 0.02%)</title><rect x="30.8131%" y="1365" width="0.0220%" height="15" fill="rgb(227,82,4)" fg:x="1729508847" fg:w="1234631"/><text x="31.0631%" y="1375.50"></text></g><g><title>[libc.so.6] (1,234,631 samples, 0.02%)</title><rect x="30.8131%" y="1349" width="0.0220%" height="15" fill="rgb(220,107,16)" fg:x="1729508847" fg:w="1234631"/><text x="31.0631%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;iced_winit::program::run_instance&lt;iced::program::Program::run_with::Instance&lt;iced::program::with_theme::WithTheme&lt;iced::program::with_title::WithTitle&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;,iced::application::Application&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;&gt;::title&lt;&amp;str&gt;::{{closure}}&gt;,iced::application::Application&lt;iced::program::with_title::WithTitle&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;,iced::application::Application&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;&gt;::title&lt;&amp;str&gt;::{{closure}}&gt;&gt;::theme&lt;papyrust::main::{{closure}}&gt;::{{closure}}&gt;,papyrust::Papyrust::new&gt;,iced_renderer::fallback::Compositor&lt;iced_wgpu::window::compositor::Compositor,iced_tiny_skia::window::compositor::Compositor&gt;&gt;::{{closure}}&gt;&gt;&gt; (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1381" width="0.0489%" height="15" fill="rgb(207,187,2)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;iced_winit::program::run_instance&lt;iced::program::Program::run_with::Instance&lt;iced::program::with_theme::WithTheme&lt;iced::program::with_title::WithTitle&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;,iced::application::Application&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;&gt;::title&lt;&amp;str&gt;::{{closure}}&gt;,iced::application::Application&lt;iced::program::with_title::WithTitle&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;,iced::application::Application&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;&gt;::title&lt;&amp;str&gt;::{{closure}}&gt;&gt;::theme&lt;papyrust::main::{{closure}}&gt;::{{closure}}&gt;,papyrust::Papyrust::new&gt;,iced_renderer::fallback::Compositor&lt;iced_wgpu::window::compositor::Compositor,iced_tiny_skia::window::compositor::Compositor&gt;&gt;::{{closure}}&gt;&gt; (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1365" width="0.0489%" height="15" fill="rgb(210,162,52)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_winit::program::run_instance&lt;iced::program::Program::run_with::Instance&lt;iced::program::with_theme::WithTheme&lt;iced::program::with_title::WithTitle&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;,iced::application::Application&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;&gt;::title&lt;&amp;str&gt;::{{closure}}&gt;,iced::application::Application&lt;iced::program::with_title::WithTitle&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;,iced::application::Application&lt;iced::application::application::Instance&lt;papyrust::Papyrust,papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;,papyrust::Papyrust::update,papyrust::Papyrust::view&gt;&gt;::title&lt;&amp;str&gt;::{{closure}}&gt;&gt;::theme&lt;papyrust::main::{{closure}}&gt;::{{closure}}&gt;,papyrust::Papyrust::new&gt;,iced_renderer::fallback::Compositor&lt;iced_wgpu::window::compositor::Compositor,iced_tiny_skia::window::compositor::Compositor&gt;&gt;::{{closure}}&gt; (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1349" width="0.0489%" height="15" fill="rgb(217,216,49)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_renderer::fallback::Compositor&lt;iced_wgpu::window::compositor::Compositor,iced_tiny_skia::window::compositor::Compositor&gt;&gt; (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1333" width="0.0489%" height="15" fill="rgb(218,146,49)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_wgpu::window::compositor::Compositor&gt; (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1317" width="0.0489%" height="15" fill="rgb(216,55,40)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Device&gt; (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1301" width="0.0489%" height="15" fill="rgb(208,196,21)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1311.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_drop (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1285" width="0.0489%" height="15" fill="rgb(242,117,42)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1295.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_drop (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1269" width="0.0489%" height="15" fill="rgb(210,11,23)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1279.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_poll (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1253" width="0.0489%" height="15" fill="rgb(217,110,2)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1263.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1237" width="0.0489%" height="15" fill="rgb(229,77,54)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1247.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1221" width="0.0489%" height="15" fill="rgb(218,53,16)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1205" width="0.0489%" height="15" fill="rgb(215,38,13)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1215.50"></text></g><g><title>cfree (2,746,867 samples, 0.05%)</title><rect x="30.8351%" y="1189" width="0.0489%" height="15" fill="rgb(235,42,18)" fg:x="1730743478" fg:w="2746867"/><text x="31.0851%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1205" width="0.0355%" height="15" fill="rgb(219,66,54)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1189" width="0.0355%" height="15" fill="rgb(222,205,4)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1199.50"></text></g><g><title>wayland_backend::sys::client::ReadEventsGuard::read (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1173" width="0.0355%" height="15" fill="rgb(227,213,46)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1183.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::read (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1157" width="0.0355%" height="15" fill="rgb(250,145,42)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1167.50"></text></g><g><title>wayland_backend::sys::client_impl::Dispatcher::dispatch_pending (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1141" width="0.0355%" height="15" fill="rgb(219,15,2)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1151.50"></text></g><g><title>wl_display_dispatch_queue_pending (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1125" width="0.0355%" height="15" fill="rgb(231,181,52)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1135.50"></text></g><g><title>[libwayland-client.so.0.23.1] (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1109" width="0.0355%" height="15" fill="rgb(235,1,42)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1119.50"></text></g><g><title>wayland_backend::sys::client_impl::dispatcher_func (1,994,825 samples, 0.04%)</title><rect x="30.8840%" y="1093" width="0.0355%" height="15" fill="rgb(249,88,27)" fg:x="1733490345" fg:w="1994825"/><text x="31.1340%" y="1103.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::before_handle_events (5,068,244 samples, 0.09%)</title><rect x="30.8840%" y="1237" width="0.0903%" height="15" fill="rgb(235,145,16)" fg:x="1733490345" fg:w="5068244"/><text x="31.1340%" y="1247.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::before_handle_events (5,068,244 samples, 0.09%)</title><rect x="30.8840%" y="1221" width="0.0903%" height="15" fill="rgb(237,114,19)" fg:x="1733490345" fg:w="5068244"/><text x="31.1340%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wayland_backend::sys::client::ReadEventsGuard&gt;&gt; (3,073,419 samples, 0.05%)</title><rect x="30.9196%" y="1205" width="0.0548%" height="15" fill="rgb(238,51,50)" fg:x="1735485170" fg:w="3073419"/><text x="31.1696%" y="1215.50"></text></g><g><title>wayland_backend::sys::client::Backend::dispatch_inner_queue (3,477,516 samples, 0.06%)</title><rect x="30.9743%" y="1125" width="0.0620%" height="15" fill="rgb(205,194,25)" fg:x="1738558589" fg:w="3477516"/><text x="31.2243%" y="1135.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::dispatch_inner_queue (3,477,516 samples, 0.06%)</title><rect x="30.9743%" y="1109" width="0.0620%" height="15" fill="rgb(215,203,17)" fg:x="1738558589" fg:w="3477516"/><text x="31.2243%" y="1119.50"></text></g><g><title>wayland_backend::sys::client_impl::Dispatcher::dispatch_pending (3,477,516 samples, 0.06%)</title><rect x="30.9743%" y="1093" width="0.0620%" height="15" fill="rgb(233,112,49)" fg:x="1738558589" fg:w="3477516"/><text x="31.2243%" y="1103.50"></text></g><g><title>wl_display_dispatch_queue_pending (3,477,516 samples, 0.06%)</title><rect x="30.9743%" y="1077" width="0.0620%" height="15" fill="rgb(241,130,26)" fg:x="1738558589" fg:w="3477516"/><text x="31.2243%" y="1087.50"></text></g><g><title>[libwayland-client.so.0.23.1] (3,477,516 samples, 0.06%)</title><rect x="30.9743%" y="1061" width="0.0620%" height="15" fill="rgb(252,223,19)" fg:x="1738558589" fg:w="3477516"/><text x="31.2243%" y="1071.50"></text></g><g><title>wayland_backend::sys::client_impl::dispatcher_func (3,477,516 samples, 0.06%)</title><rect x="30.9743%" y="1045" width="0.0620%" height="15" fill="rgb(211,95,25)" fg:x="1738558589" fg:w="3477516"/><text x="31.2243%" y="1055.50"></text></g><g><title>&lt;wayland_client::protocol::wl_pointer::WlPointer as wayland_client::Proxy&gt;::parse_event (2,729,585 samples, 0.05%)</title><rect x="31.0363%" y="1109" width="0.0486%" height="15" fill="rgb(251,182,27)" fg:x="1742036105" fg:w="2729585"/><text x="31.2863%" y="1119.50"></text></g><g><title>calloop_wayland_source::WaylandSource&lt;D&gt;::loop_callback_pending (9,485,826 samples, 0.17%)</title><rect x="30.9743%" y="1205" width="0.1690%" height="15" fill="rgb(238,24,4)" fg:x="1738558589" fg:w="9485826"/><text x="31.2243%" y="1215.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events::_{{closure}} (9,485,826 samples, 0.17%)</title><rect x="30.9743%" y="1189" width="0.1690%" height="15" fill="rgb(224,220,25)" fg:x="1738558589" fg:w="9485826"/><text x="31.2243%" y="1199.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::new::_{{closure}} (9,485,826 samples, 0.17%)</title><rect x="30.9743%" y="1173" width="0.1690%" height="15" fill="rgb(239,133,26)" fg:x="1738558589" fg:w="9485826"/><text x="31.2243%" y="1183.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatch_pending (9,485,826 samples, 0.17%)</title><rect x="30.9743%" y="1157" width="0.1690%" height="15" fill="rgb(211,94,48)" fg:x="1738558589" fg:w="9485826"/><text x="31.2243%" y="1167.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatching_impl (9,485,826 samples, 0.17%)</title><rect x="30.9743%" y="1141" width="0.1690%" height="15" fill="rgb(239,87,6)" fg:x="1738558589" fg:w="9485826"/><text x="31.2243%" y="1151.50"></text></g><g><title>wayland_client::event_queue::queue_callback (6,008,310 samples, 0.11%)</title><rect x="31.0363%" y="1125" width="0.1070%" height="15" fill="rgb(227,62,0)" fg:x="1742036105" fg:w="6008310"/><text x="31.2863%" y="1135.50"></text></g><g><title>winit::platform_impl::linux::wayland::seat::pointer::&lt;impl wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_pointer::WlPointer,winit::platform_impl::linux::wayland::seat::pointer::WinitPointerData&gt; for winit::platform_impl::linux::wayland::state::WinitState&gt;::event (3,278,725 samples, 0.06%)</title><rect x="31.0849%" y="1109" width="0.0584%" height="15" fill="rgb(211,226,4)" fg:x="1744765690" fg:w="3278725"/><text x="31.3349%" y="1119.50"></text></g><g><title>smithay_client_toolkit::seat::pointer::&lt;impl wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_pointer::WlPointer,U,D&gt; for smithay_client_toolkit::seat::SeatState&gt;::event (3,278,725 samples, 0.06%)</title><rect x="31.0849%" y="1093" width="0.0584%" height="15" fill="rgb(253,38,52)" fg:x="1744765690" fg:w="3278725"/><text x="31.3349%" y="1103.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (14,528,470 samples, 0.26%)</title><rect x="30.9743%" y="1237" width="0.2588%" height="15" fill="rgb(229,126,40)" fg:x="1738558589" fg:w="14528470"/><text x="31.2243%" y="1247.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::process_events (14,528,470 samples, 0.26%)</title><rect x="30.9743%" y="1221" width="0.2588%" height="15" fill="rgb(229,165,44)" fg:x="1738558589" fg:w="14528470"/><text x="31.2243%" y="1231.50"></text></g><g><title>calloop_wayland_source::flush_queue (5,042,644 samples, 0.09%)</title><rect x="31.1433%" y="1205" width="0.0898%" height="15" fill="rgb(247,95,47)" fg:x="1748044415" fg:w="5042644"/><text x="31.3933%" y="1215.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::flush (5,042,644 samples, 0.09%)</title><rect x="31.1433%" y="1189" width="0.0898%" height="15" fill="rgb(216,140,30)" fg:x="1748044415" fg:w="5042644"/><text x="31.3933%" y="1199.50"></text></g><g><title>wayland_client::conn::Connection::flush (5,042,644 samples, 0.09%)</title><rect x="31.1433%" y="1173" width="0.0898%" height="15" fill="rgb(246,214,8)" fg:x="1748044415" fg:w="5042644"/><text x="31.3933%" y="1183.50"></text></g><g><title>wayland_backend::sys::client::Backend::flush (5,042,644 samples, 0.09%)</title><rect x="31.1433%" y="1157" width="0.0898%" height="15" fill="rgb(227,224,15)" fg:x="1748044415" fg:w="5042644"/><text x="31.3933%" y="1167.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::flush (5,042,644 samples, 0.09%)</title><rect x="31.1433%" y="1141" width="0.0898%" height="15" fill="rgb(233,175,4)" fg:x="1748044415" fg:w="5042644"/><text x="31.3933%" y="1151.50"></text></g><g><title>wl_display_flush (5,042,644 samples, 0.09%)</title><rect x="31.1433%" y="1125" width="0.0898%" height="15" fill="rgb(221,66,45)" fg:x="1748044415" fg:w="5042644"/><text x="31.3933%" y="1135.50"></text></g><g><title>pthread_mutex_unlock (5,042,644 samples, 0.09%)</title><rect x="31.1433%" y="1109" width="0.0898%" height="15" fill="rgb(221,178,18)" fg:x="1748044415" fg:w="5042644"/><text x="31.3933%" y="1119.50"></text></g><g><title>polling::Poller::wait (1,705,838 samples, 0.03%)</title><rect x="31.2331%" y="1221" width="0.0304%" height="15" fill="rgb(213,81,29)" fg:x="1753087059" fg:w="1705838"/><text x="31.4831%" y="1231.50"></text></g><g><title>polling::epoll::Poller::wait (1,705,838 samples, 0.03%)</title><rect x="31.2331%" y="1205" width="0.0304%" height="15" fill="rgb(220,89,49)" fg:x="1753087059" fg:w="1705838"/><text x="31.4831%" y="1215.50"></text></g><g><title>polling::epoll::Poller::modify (1,705,838 samples, 0.03%)</title><rect x="31.2331%" y="1189" width="0.0304%" height="15" fill="rgb(227,60,33)" fg:x="1753087059" fg:w="1705838"/><text x="31.4831%" y="1199.50"></text></g><g><title>calloop::sys::Poll::poll (6,210,951 samples, 0.11%)</title><rect x="31.2331%" y="1237" width="0.1107%" height="15" fill="rgb(205,113,12)" fg:x="1753087059" fg:w="6210951"/><text x="31.4831%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4,505,113 samples, 0.08%)</title><rect x="31.2635%" y="1221" width="0.0803%" height="15" fill="rgb(211,32,1)" fg:x="1754792897" fg:w="4505113"/><text x="31.5135%" y="1231.50"></text></g><g><title>clock_gettime (4,505,113 samples, 0.08%)</title><rect x="31.2635%" y="1205" width="0.0803%" height="15" fill="rgb(246,2,12)" fg:x="1754792897" fg:w="4505113"/><text x="31.5135%" y="1215.50"></text></g><g><title>__vdso_clock_gettime (4,505,113 samples, 0.08%)</title><rect x="31.2635%" y="1189" width="0.0803%" height="15" fill="rgb(243,37,27)" fg:x="1754792897" fg:w="4505113"/><text x="31.5135%" y="1199.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::loop_dispatch (27,996,910 samples, 0.50%)</title><rect x="30.8840%" y="1285" width="0.4988%" height="15" fill="rgb(248,211,31)" fg:x="1733490345" fg:w="27996910"/><text x="31.1340%" y="1295.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (27,996,910 samples, 0.50%)</title><rect x="30.8840%" y="1269" width="0.4988%" height="15" fill="rgb(242,146,47)" fg:x="1733490345" fg:w="27996910"/><text x="31.1340%" y="1279.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events (27,996,910 samples, 0.50%)</title><rect x="30.8840%" y="1253" width="0.4988%" height="15" fill="rgb(206,70,20)" fg:x="1733490345" fg:w="27996910"/><text x="31.1340%" y="1263.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2,189,245 samples, 0.04%)</title><rect x="31.3438%" y="1237" width="0.0390%" height="15" fill="rgb(215,10,51)" fg:x="1759298010" fg:w="2189245"/><text x="31.5938%" y="1247.50"></text></g><g><title>clock_gettime (2,189,245 samples, 0.04%)</title><rect x="31.3438%" y="1221" width="0.0390%" height="15" fill="rgb(243,178,53)" fg:x="1759298010" fg:w="2189245"/><text x="31.5938%" y="1231.50"></text></g><g><title>__vdso_clock_gettime (2,189,245 samples, 0.04%)</title><rect x="31.3438%" y="1205" width="0.0390%" height="15" fill="rgb(233,221,20)" fg:x="1759298010" fg:w="2189245"/><text x="31.5938%" y="1215.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::try_next (2,876,356 samples, 0.05%)</title><rect x="31.4252%" y="1189" width="0.0512%" height="15" fill="rgb(218,95,35)" fg:x="1763867648" fg:w="2876356"/><text x="31.6752%" y="1199.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (2,876,356 samples, 0.05%)</title><rect x="31.4252%" y="1173" width="0.0512%" height="15" fill="rgb(229,13,5)" fg:x="1763867648" fg:w="2876356"/><text x="31.6752%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,876,356 samples, 0.05%)</title><rect x="31.4252%" y="1157" width="0.0512%" height="15" fill="rgb(252,164,30)" fg:x="1763867648" fg:w="2876356"/><text x="31.6752%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (2,876,356 samples, 0.05%)</title><rect x="31.4252%" y="1141" width="0.0512%" height="15" fill="rgb(232,68,36)" fg:x="1763867648" fg:w="2876356"/><text x="31.6752%" y="1151.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_text (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="661" width="0.0179%" height="15" fill="rgb(219,59,54)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="671.50"></text></g><g><title>cosmic_text::buffer::Buffer::shape_until_scroll (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="645" width="0.0179%" height="15" fill="rgb(250,92,33)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="655.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout_in_buffer (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="629" width="0.0179%" height="15" fill="rgb(229,162,54)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="639.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::shape_in_buffer (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="613" width="0.0179%" height="15" fill="rgb(244,114,52)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="623.50"></text></g><g><title>cosmic_text::shape::ShapeLine::new_in_buffer (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="597" width="0.0179%" height="15" fill="rgb(212,211,43)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="607.50"></text></g><g><title>cosmic_text::shape::ShapeSpan::new_in_buffer (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="581" width="0.0179%" height="15" fill="rgb(226,147,8)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="591.50"></text></g><g><title>cosmic_text::shape::ShapeWord::new_in_buffer (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="565" width="0.0179%" height="15" fill="rgb(226,23,13)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="575.50"></text></g><g><title>cosmic_text::shape::Shaping::run (1,003,008 samples, 0.02%)</title><rect x="31.4765%" y="549" width="0.0179%" height="15" fill="rgb(240,63,4)" fg:x="1766744004" fg:w="1003008"/><text x="31.7265%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::eq_by (7,055,595 samples, 0.13%)</title><rect x="31.4943%" y="517" width="0.1257%" height="15" fill="rgb(221,1,32)" fg:x="1767747012" fg:w="7055595"/><text x="31.7443%" y="527.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (5,512,130 samples, 0.10%)</title><rect x="31.5218%" y="501" width="0.0982%" height="15" fill="rgb(242,117,10)" fg:x="1769290477" fg:w="5512130"/><text x="31.7718%" y="511.50"></text></g><g><title>std::path::Components::parse_next_component_back (5,512,130 samples, 0.10%)</title><rect x="31.5218%" y="485" width="0.0982%" height="15" fill="rgb(249,172,44)" fg:x="1769290477" fg:w="5512130"/><text x="31.7718%" y="495.50"></text></g><g><title>cosmic_text::font::system::FontSystem::new_with_locale_and_db (9,727,714 samples, 0.17%)</title><rect x="31.4943%" y="597" width="0.1733%" height="15" fill="rgb(244,46,45)" fg:x="1767747012" fg:w="9727714"/><text x="31.7443%" y="607.50"></text></g><g><title>cosmic_text::font::system::FontSystem::cache_fonts (9,727,714 samples, 0.17%)</title><rect x="31.4943%" y="581" width="0.1733%" height="15" fill="rgb(206,43,17)" fg:x="1767747012" fg:w="9727714"/><text x="31.7443%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,727,714 samples, 0.17%)</title><rect x="31.4943%" y="565" width="0.1733%" height="15" fill="rgb(239,218,39)" fg:x="1767747012" fg:w="9727714"/><text x="31.7443%" y="575.50"></text></g><g><title>fontdb::Database::make_shared_face_data (9,727,714 samples, 0.17%)</title><rect x="31.4943%" y="549" width="0.1733%" height="15" fill="rgb(208,169,54)" fg:x="1767747012" fg:w="9727714"/><text x="31.7443%" y="559.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::PartialEq&gt;::eq (9,727,714 samples, 0.17%)</title><rect x="31.4943%" y="533" width="0.1733%" height="15" fill="rgb(247,25,42)" fg:x="1767747012" fg:w="9727714"/><text x="31.7443%" y="543.50"></text></g><g><title>std::path::Path::components (2,672,119 samples, 0.05%)</title><rect x="31.6200%" y="517" width="0.0476%" height="15" fill="rgb(226,23,31)" fg:x="1774802607" fg:w="2672119"/><text x="31.8700%" y="527.50"></text></g><g><title>fontconfig_parser::types::document::FontConfig::merge_config (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="581" width="0.0570%" height="15" fill="rgb(247,16,28)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="591.50"></text></g><g><title>fontconfig_parser::types::document::FontConfig::include (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="565" width="0.0570%" height="15" fill="rgb(231,147,38)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="575.50"></text></g><g><title>fontconfig_parser::types::document::FontConfig::merge_config (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="549" width="0.0570%" height="15" fill="rgb(253,81,48)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="559.50"></text></g><g><title>roxmltree::parse::parse (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="533" width="0.0570%" height="15" fill="rgb(249,222,43)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="543.50"></text></g><g><title>roxmltree::tokenizer::parse (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="517" width="0.0570%" height="15" fill="rgb(221,3,27)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="527.50"></text></g><g><title>roxmltree::tokenizer::parse_element (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="501" width="0.0570%" height="15" fill="rgb(228,180,5)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="511.50"></text></g><g><title>roxmltree::tokenizer::parse_content (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="485" width="0.0570%" height="15" fill="rgb(227,131,42)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="495.50"></text></g><g><title>roxmltree::tokenizer::parse_element (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="469" width="0.0570%" height="15" fill="rgb(212,3,39)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="479.50"></text></g><g><title>roxmltree::tokenizer::parse_content (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="453" width="0.0570%" height="15" fill="rgb(226,45,5)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="463.50"></text></g><g><title>roxmltree::tokenizer::parse_element (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="437" width="0.0570%" height="15" fill="rgb(215,167,45)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="447.50"></text></g><g><title>roxmltree::tokenizer::parse_content (3,199,005 samples, 0.06%)</title><rect x="31.6676%" y="421" width="0.0570%" height="15" fill="rgb(250,218,53)" fg:x="1777474726" fg:w="3199005"/><text x="31.9176%" y="431.50"></text></g><g><title>[unknown] (1,602,194 samples, 0.03%)</title><rect x="31.7246%" y="549" width="0.0285%" height="15" fill="rgb(207,140,0)" fg:x="1780673731" fg:w="1602194"/><text x="31.9746%" y="559.50"></text></g><g><title>__munmap (1,602,194 samples, 0.03%)</title><rect x="31.7246%" y="533" width="0.0285%" height="15" fill="rgb(238,133,51)" fg:x="1780673731" fg:w="1602194"/><text x="31.9746%" y="543.50"></text></g><g><title>fontdb::parse_face_info (2,501,681 samples, 0.04%)</title><rect x="31.7867%" y="533" width="0.0446%" height="15" fill="rgb(218,203,53)" fg:x="1784157193" fg:w="2501681"/><text x="32.0367%" y="543.50"></text></g><g><title>fontdb::name_to_unicode (2,501,681 samples, 0.04%)</title><rect x="31.7867%" y="517" width="0.0446%" height="15" fill="rgb(226,184,25)" fg:x="1784157193" fg:w="2501681"/><text x="32.0367%" y="527.50"></text></g><g><title>alloc::string::String::from_utf16 (2,501,681 samples, 0.04%)</title><rect x="31.7867%" y="501" width="0.0446%" height="15" fill="rgb(231,121,21)" fg:x="1784157193" fg:w="2501681"/><text x="32.0367%" y="511.50"></text></g><g><title>malloc (2,501,681 samples, 0.04%)</title><rect x="31.7867%" y="485" width="0.0446%" height="15" fill="rgb(251,14,34)" fg:x="1784157193" fg:w="2501681"/><text x="32.0367%" y="495.50"></text></g><g><title>[libc.so.6] (2,501,681 samples, 0.04%)</title><rect x="31.7867%" y="469" width="0.0446%" height="15" fill="rgb(249,193,11)" fg:x="1784157193" fg:w="2501681"/><text x="32.0367%" y="479.50"></text></g><g><title>iced_winit::program::build_user_interface (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1157" width="0.4084%" height="15" fill="rgb(220,172,37)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1167.50"></text></g><g><title>iced_runtime::user_interface::UserInterface&lt;Message,Theme,Renderer&gt;::build (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1141" width="0.4084%" height="15" fill="rgb(231,229,43)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1151.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1125" width="0.4084%" height="15" fill="rgb(250,161,5)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1135.50"></text></g><g><title>iced_core::layout::flex::resolve (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1109" width="0.4084%" height="15" fill="rgb(218,225,18)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1119.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1093" width="0.4084%" height="15" fill="rgb(245,45,42)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1103.50"></text></g><g><title>iced_widget::container::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1077" width="0.4084%" height="15" fill="rgb(211,115,1)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1087.50"></text></g><g><title>iced_core::layout::positioned (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1061" width="0.4084%" height="15" fill="rgb(248,133,52)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1071.50"></text></g><g><title>iced_widget::container::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1045" width="0.4084%" height="15" fill="rgb(238,100,21)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1055.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1029" width="0.4084%" height="15" fill="rgb(247,144,11)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1039.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="1013" width="0.4084%" height="15" fill="rgb(206,164,16)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1023.50"></text></g><g><title>iced_widget::container::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="997" width="0.4084%" height="15" fill="rgb(222,34,3)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="1007.50"></text></g><g><title>iced_core::layout::positioned (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="981" width="0.4084%" height="15" fill="rgb(248,82,4)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="991.50"></text></g><g><title>iced_widget::container::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="965" width="0.4084%" height="15" fill="rgb(228,81,46)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="975.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="949" width="0.4084%" height="15" fill="rgb(227,67,47)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="959.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="933" width="0.4084%" height="15" fill="rgb(215,93,53)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="943.50"></text></g><g><title>iced_widget::container::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="917" width="0.4084%" height="15" fill="rgb(248,194,39)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="927.50"></text></g><g><title>iced_core::layout::positioned (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="901" width="0.4084%" height="15" fill="rgb(215,5,19)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="911.50"></text></g><g><title>iced_widget::container::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="885" width="0.4084%" height="15" fill="rgb(226,215,51)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="895.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="869" width="0.4084%" height="15" fill="rgb(225,56,26)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="879.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="853" width="0.4084%" height="15" fill="rgb(222,75,29)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="863.50"></text></g><g><title>iced_core::layout::flex::resolve (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="837" width="0.4084%" height="15" fill="rgb(236,139,6)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="847.50"></text></g><g><title>&lt;iced_widget::button::Button&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="821" width="0.4084%" height="15" fill="rgb(223,137,36)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="831.50"></text></g><g><title>iced_core::layout::padded (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="805" width="0.4084%" height="15" fill="rgb(226,99,2)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="815.50"></text></g><g><title>iced_core::layout::positioned (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="789" width="0.4084%" height="15" fill="rgb(206,133,23)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="799.50"></text></g><g><title>&lt;iced_widget::button::Button&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="773" width="0.4084%" height="15" fill="rgb(243,173,15)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="783.50"></text></g><g><title>&lt;iced_core::widget::text::Text&lt;Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="757" width="0.4084%" height="15" fill="rgb(228,69,28)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="767.50"></text></g><g><title>iced_core::widget::text::layout (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="741" width="0.4084%" height="15" fill="rgb(212,51,22)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="751.50"></text></g><g><title>iced_core::layout::sized (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="725" width="0.4084%" height="15" fill="rgb(227,113,0)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="735.50"></text></g><g><title>iced_core::widget::text::layout::_{{closure}} (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="709" width="0.4084%" height="15" fill="rgb(252,84,27)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="719.50"></text></g><g><title>iced_core::text::paragraph::Plain&lt;P&gt;::update (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="693" width="0.4084%" height="15" fill="rgb(223,145,39)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="703.50"></text></g><g><title>&lt;iced_graphics::text::paragraph::Paragraph as iced_core::text::paragraph::Paragraph&gt;::with_text (22,923,518 samples, 0.41%)</title><rect x="31.4765%" y="677" width="0.4084%" height="15" fill="rgb(239,219,30)" fg:x="1766744004" fg:w="22923518"/><text x="31.7265%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (21,920,510 samples, 0.39%)</title><rect x="31.4943%" y="661" width="0.3905%" height="15" fill="rgb(224,196,39)" fg:x="1767747012" fg:w="21920510"/><text x="31.7443%" y="671.50"></text></g><g><title>once_cell::imp::initialize_or_wait (21,920,510 samples, 0.39%)</title><rect x="31.4943%" y="645" width="0.3905%" height="15" fill="rgb(205,35,43)" fg:x="1767747012" fg:w="21920510"/><text x="31.7443%" y="655.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (21,920,510 samples, 0.39%)</title><rect x="31.4943%" y="629" width="0.3905%" height="15" fill="rgb(228,201,21)" fg:x="1767747012" fg:w="21920510"/><text x="31.7443%" y="639.50"></text></g><g><title>cosmic_text::font::system::FontSystem::new_with_fonts (21,920,510 samples, 0.39%)</title><rect x="31.4943%" y="613" width="0.3905%" height="15" fill="rgb(237,118,16)" fg:x="1767747012" fg:w="21920510"/><text x="31.7443%" y="623.50"></text></g><g><title>fontdb::Database::load_system_fonts (12,192,796 samples, 0.22%)</title><rect x="31.6676%" y="597" width="0.2172%" height="15" fill="rgb(241,17,19)" fg:x="1777474726" fg:w="12192796"/><text x="31.9176%" y="607.50"></text></g><g><title>fontdb::Database::load_fonts_dir_impl (8,993,791 samples, 0.16%)</title><rect x="31.7246%" y="581" width="0.1602%" height="15" fill="rgb(214,10,25)" fg:x="1780673731" fg:w="8993791"/><text x="31.9746%" y="591.50"></text></g><g><title>fontdb::Database::load_fonts_dir_impl (8,993,791 samples, 0.16%)</title><rect x="31.7246%" y="565" width="0.1602%" height="15" fill="rgb(238,37,29)" fg:x="1780673731" fg:w="8993791"/><text x="31.9746%" y="575.50"></text></g><g><title>fontdb::Database::load_font_file_impl (7,391,597 samples, 0.13%)</title><rect x="31.7532%" y="549" width="0.1317%" height="15" fill="rgb(253,83,25)" fg:x="1782275925" fg:w="7391597"/><text x="32.0032%" y="559.50"></text></g><g><title>memmap2::os::MmapInner::map (3,008,648 samples, 0.05%)</title><rect x="31.8313%" y="533" width="0.0536%" height="15" fill="rgb(234,192,12)" fg:x="1786658874" fg:w="3008648"/><text x="32.0813%" y="543.50"></text></g><g><title>iced_winit::program::run::Runner&lt;Message,F,C&gt;::process_event (26,094,473 samples, 0.46%)</title><rect x="31.4765%" y="1189" width="0.4649%" height="15" fill="rgb(241,216,45)" fg:x="1766744004" fg:w="26094473"/><text x="31.7265%" y="1199.50"></text></g><g><title>iced_winit::program::run_instance::_{{closure}} (26,094,473 samples, 0.46%)</title><rect x="31.4765%" y="1173" width="0.4649%" height="15" fill="rgb(242,22,33)" fg:x="1766744004" fg:w="26094473"/><text x="31.7265%" y="1183.50"></text></g><g><title>iced_winit::program::window_manager::WindowManager&lt;P,C&gt;::insert (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1157" width="0.0565%" height="15" fill="rgb(231,105,49)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1167.50"></text></g><g><title>&lt;iced_renderer::fallback::Compositor&lt;A,B&gt; as iced_graphics::compositor::Compositor&gt;::create_renderer (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1141" width="0.0565%" height="15" fill="rgb(218,204,15)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1151.50"></text></g><g><title>&lt;iced_wgpu::window::compositor::Compositor as iced_graphics::compositor::Compositor&gt;::create_renderer (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1125" width="0.0565%" height="15" fill="rgb(235,138,41)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1135.50"></text></g><g><title>iced_wgpu::Renderer::new (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1109" width="0.0565%" height="15" fill="rgb(246,0,9)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1119.50"></text></g><g><title>iced_wgpu::image::atlas::Atlas::new (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1093" width="0.0565%" height="15" fill="rgb(210,74,4)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1103.50"></text></g><g><title>wgpu::Device::create_texture (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1077" width="0.0565%" height="15" fill="rgb(250,60,41)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1087.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1061" width="0.0565%" height="15" fill="rgb(220,115,12)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_texture (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1045" width="0.0565%" height="15" fill="rgb(237,100,13)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1055.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_texture (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1029" width="0.0565%" height="15" fill="rgb(213,55,26)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1039.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="1013" width="0.0565%" height="15" fill="rgb(216,17,4)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="997" width="0.0565%" height="15" fill="rgb(220,153,47)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="981" width="0.0565%" height="15" fill="rgb(215,131,9)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,170,955 samples, 0.06%)</title><rect x="31.8849%" y="965" width="0.0565%" height="15" fill="rgb(233,46,42)" fg:x="1789667522" fg:w="3170955"/><text x="32.1349%" y="975.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1173" width="0.0402%" height="15" fill="rgb(226,86,7)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1183.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1157" width="0.0402%" height="15" fill="rgb(239,226,21)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1167.50"></text></g><g><title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1141" width="0.0402%" height="15" fill="rgb(244,137,22)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1151.50"></text></g><g><title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1125" width="0.0402%" height="15" fill="rgb(211,139,35)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1135.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1109" width="0.0402%" height="15" fill="rgb(214,62,50)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1119.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1093" width="0.0402%" height="15" fill="rgb(212,113,44)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1077" width="0.0402%" height="15" fill="rgb(226,150,43)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (2,258,534 samples, 0.04%)</title><rect x="32.0200%" y="1061" width="0.0402%" height="15" fill="rgb(250,71,37)" fg:x="1797251894" fg:w="2258534"/><text x="32.2700%" y="1071.50"></text></g><g><title>iced_wgpu::buffer::Buffer&lt;T&gt;::write (3,144,129 samples, 0.06%)</title><rect x="32.1506%" y="1077" width="0.0560%" height="15" fill="rgb(219,76,19)" fg:x="1804580081" fg:w="3144129"/><text x="32.4006%" y="1087.50"></text></g><g><title>wgpu::util::belt::StagingBelt::write_buffer (3,144,129 samples, 0.06%)</title><rect x="32.1506%" y="1061" width="0.0560%" height="15" fill="rgb(250,39,11)" fg:x="1804580081" fg:w="3144129"/><text x="32.4006%" y="1071.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_copy_buffer_to_buffer (3,144,129 samples, 0.06%)</title><rect x="32.1506%" y="1045" width="0.0560%" height="15" fill="rgb(230,64,31)" fg:x="1804580081" fg:w="3144129"/><text x="32.4006%" y="1055.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_copy_buffer_to_buffer (3,144,129 samples, 0.06%)</title><rect x="32.1506%" y="1029" width="0.0560%" height="15" fill="rgb(208,222,23)" fg:x="1804580081" fg:w="3144129"/><text x="32.4006%" y="1039.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (3,144,129 samples, 0.06%)</title><rect x="32.1506%" y="1013" width="0.0560%" height="15" fill="rgb(227,125,18)" fg:x="1804580081" fg:w="3144129"/><text x="32.4006%" y="1023.50"></text></g><g><title>cfree (2,181,928 samples, 0.04%)</title><rect x="32.2066%" y="1061" width="0.0389%" height="15" fill="rgb(234,210,9)" fg:x="1807724210" fg:w="2181928"/><text x="32.4566%" y="1071.50"></text></g><g><title>[libc.so.6] (2,181,928 samples, 0.04%)</title><rect x="32.2066%" y="1045" width="0.0389%" height="15" fill="rgb(217,127,24)" fg:x="1807724210" fg:w="2181928"/><text x="32.4566%" y="1055.50"></text></g><g><title>[libc.so.6] (2,181,928 samples, 0.04%)</title><rect x="32.2066%" y="1029" width="0.0389%" height="15" fill="rgb(239,141,48)" fg:x="1807724210" fg:w="2181928"/><text x="32.4566%" y="1039.50"></text></g><g><title>[libc.so.6] (2,181,928 samples, 0.04%)</title><rect x="32.2066%" y="1013" width="0.0389%" height="15" fill="rgb(227,109,8)" fg:x="1807724210" fg:w="2181928"/><text x="32.4566%" y="1023.50"></text></g><g><title>[libc.so.6] (172,855,602 samples, 3.08%)</title><rect x="32.2454%" y="1045" width="3.0796%" height="15" fill="rgb(235,184,23)" fg:x="1809906138" fg:w="172855602"/><text x="32.4954%" y="1055.50">[li..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (38,635,996 samples, 0.69%)</title><rect x="35.3251%" y="1013" width="0.6883%" height="15" fill="rgb(227,226,48)" fg:x="1982761740" fg:w="38635996"/><text x="35.5751%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_buffer (38,635,996 samples, 0.69%)</title><rect x="35.3251%" y="997" width="0.6883%" height="15" fill="rgb(206,150,11)" fg:x="1982761740" fg:w="38635996"/><text x="35.5751%" y="1007.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (38,635,996 samples, 0.69%)</title><rect x="35.3251%" y="981" width="0.6883%" height="15" fill="rgb(254,2,33)" fg:x="1982761740" fg:w="38635996"/><text x="35.5751%" y="991.50"></text></g><g><title>[libc.so.6] (38,635,996 samples, 0.69%)</title><rect x="35.3251%" y="965" width="0.6883%" height="15" fill="rgb(243,160,20)" fg:x="1982761740" fg:w="38635996"/><text x="35.5751%" y="975.50"></text></g><g><title>iced_wgpu::image::atlas::Atlas::upload_allocation (114,483,585 samples, 2.04%)</title><rect x="35.3251%" y="1045" width="2.0396%" height="15" fill="rgb(218,208,30)" fg:x="1982761740" fg:w="114483585"/><text x="35.5751%" y="1055.50">i..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (114,483,585 samples, 2.04%)</title><rect x="35.3251%" y="1029" width="2.0396%" height="15" fill="rgb(224,120,49)" fg:x="1982761740" fg:w="114483585"/><text x="35.5751%" y="1039.50">&lt;..</text></g><g><title>[libc.so.6] (75,847,589 samples, 1.35%)</title><rect x="36.0134%" y="1013" width="1.3513%" height="15" fill="rgb(246,12,2)" fg:x="2021397736" fg:w="75847589"/><text x="36.2634%" y="1023.50"></text></g><g><title>wgpu::CommandEncoder::copy_texture_to_texture (1,780,138 samples, 0.03%)</title><rect x="37.3647%" y="1045" width="0.0317%" height="15" fill="rgb(236,117,3)" fg:x="2097245325" fg:w="1780138"/><text x="37.6147%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_copy_texture_to_texture (1,780,138 samples, 0.03%)</title><rect x="37.3647%" y="1029" width="0.0317%" height="15" fill="rgb(216,128,52)" fg:x="2097245325" fg:w="1780138"/><text x="37.6147%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_copy_texture_to_texture (1,780,138 samples, 0.03%)</title><rect x="37.3647%" y="1013" width="0.0317%" height="15" fill="rgb(246,145,19)" fg:x="2097245325" fg:w="1780138"/><text x="37.6147%" y="1023.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_copy_texture_to_texture (1,780,138 samples, 0.03%)</title><rect x="37.3647%" y="997" width="0.0317%" height="15" fill="rgb(222,11,46)" fg:x="2097245325" fg:w="1780138"/><text x="37.6147%" y="1007.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_texture_to_texture (1,780,138 samples, 0.03%)</title><rect x="37.3647%" y="981" width="0.0317%" height="15" fill="rgb(245,82,36)" fg:x="2097245325" fg:w="1780138"/><text x="37.6147%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,780,138 samples, 0.03%)</title><rect x="37.3647%" y="965" width="0.0317%" height="15" fill="rgb(250,73,51)" fg:x="2097245325" fg:w="1780138"/><text x="37.6147%" y="975.50"></text></g><g><title>iced_wgpu::image::Pipeline::prepare (296,178,261 samples, 5.28%)</title><rect x="32.1506%" y="1093" width="5.2767%" height="15" fill="rgb(221,189,23)" fg:x="1804580081" fg:w="296178261"/><text x="32.4006%" y="1103.50">iced_w..</text></g><g><title>iced_wgpu::image::raster::Cache::upload (293,034,132 samples, 5.22%)</title><rect x="32.2066%" y="1077" width="5.2207%" height="15" fill="rgb(210,33,7)" fg:x="1807724210" fg:w="293034132"/><text x="32.4566%" y="1087.50">iced_w..</text></g><g><title>iced_wgpu::image::atlas::Atlas::upload (290,852,204 samples, 5.18%)</title><rect x="32.2454%" y="1061" width="5.1818%" height="15" fill="rgb(210,107,22)" fg:x="1809906138" fg:w="290852204"/><text x="32.4954%" y="1071.50">iced_w..</text></g><g><title>wgpu::Device::create_bind_group (1,732,879 samples, 0.03%)</title><rect x="37.3964%" y="1045" width="0.0309%" height="15" fill="rgb(222,116,37)" fg:x="2099025463" fg:w="1732879"/><text x="37.6464%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (1,732,879 samples, 0.03%)</title><rect x="37.3964%" y="1029" width="0.0309%" height="15" fill="rgb(254,17,48)" fg:x="2099025463" fg:w="1732879"/><text x="37.6464%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_bind_group (1,732,879 samples, 0.03%)</title><rect x="37.3964%" y="1013" width="0.0309%" height="15" fill="rgb(224,36,32)" fg:x="2099025463" fg:w="1732879"/><text x="37.6464%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_bind_group (1,732,879 samples, 0.03%)</title><rect x="37.3964%" y="997" width="0.0309%" height="15" fill="rgb(232,90,46)" fg:x="2099025463" fg:w="1732879"/><text x="37.6464%" y="1007.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_bind_group (1,732,879 samples, 0.03%)</title><rect x="37.3964%" y="981" width="0.0309%" height="15" fill="rgb(241,66,40)" fg:x="2099025463" fg:w="1732879"/><text x="37.6464%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (1,732,879 samples, 0.03%)</title><rect x="37.3964%" y="965" width="0.0309%" height="15" fill="rgb(249,184,29)" fg:x="2099025463" fg:w="1732879"/><text x="37.6464%" y="975.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::allocate (1,732,879 samples, 0.03%)</title><rect x="37.3964%" y="949" width="0.0309%" height="15" fill="rgb(231,181,1)" fg:x="2099025463" fg:w="1732879"/><text x="37.6464%" y="959.50"></text></g><g><title>iced_wgpu::layer::Layer::flush_text (945,195 samples, 0.02%)</title><rect x="37.4273%" y="1093" width="0.0168%" height="15" fill="rgb(224,94,2)" fg:x="2100758342" fg:w="945195"/><text x="37.6773%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (945,195 samples, 0.02%)</title><rect x="37.4273%" y="1077" width="0.0168%" height="15" fill="rgb(229,170,15)" fg:x="2100758342" fg:w="945195"/><text x="37.6773%" y="1087.50"></text></g><g><title>malloc (945,195 samples, 0.02%)</title><rect x="37.4273%" y="1061" width="0.0168%" height="15" fill="rgb(240,127,35)" fg:x="2100758342" fg:w="945195"/><text x="37.6773%" y="1071.50"></text></g><g><title>[libc.so.6] (945,195 samples, 0.02%)</title><rect x="37.4273%" y="1045" width="0.0168%" height="15" fill="rgb(248,196,34)" fg:x="2100758342" fg:w="945195"/><text x="37.6773%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_copy_buffer_to_buffer (8,978,906 samples, 0.16%)</title><rect x="37.5393%" y="1061" width="0.1600%" height="15" fill="rgb(236,137,7)" fg:x="2107046670" fg:w="8978906"/><text x="37.7893%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_copy_buffer_to_buffer (8,978,906 samples, 0.16%)</title><rect x="37.5393%" y="1045" width="0.1600%" height="15" fill="rgb(235,127,16)" fg:x="2107046670" fg:w="8978906"/><text x="37.7893%" y="1055.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (8,978,906 samples, 0.16%)</title><rect x="37.5393%" y="1029" width="0.1600%" height="15" fill="rgb(250,192,54)" fg:x="2107046670" fg:w="8978906"/><text x="37.7893%" y="1039.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (8,978,906 samples, 0.16%)</title><rect x="37.5393%" y="1013" width="0.1600%" height="15" fill="rgb(218,98,20)" fg:x="2107046670" fg:w="8978906"/><text x="37.7893%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (6,288,928 samples, 0.11%)</title><rect x="37.5872%" y="997" width="0.1120%" height="15" fill="rgb(230,176,47)" fg:x="2109736648" fg:w="6288928"/><text x="37.8372%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,288,928 samples, 0.11%)</title><rect x="37.5872%" y="981" width="0.1120%" height="15" fill="rgb(244,2,33)" fg:x="2109736648" fg:w="6288928"/><text x="37.8372%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,353,593 samples, 0.06%)</title><rect x="37.6395%" y="965" width="0.0597%" height="15" fill="rgb(231,100,17)" fg:x="2112671983" fg:w="3353593"/><text x="37.8895%" y="975.50"></text></g><g><title>iced_wgpu::quad::Pipeline::prepare (17,708,993 samples, 0.32%)</title><rect x="37.4441%" y="1093" width="0.3155%" height="15" fill="rgb(245,23,12)" fg:x="2101703537" fg:w="17708993"/><text x="37.6941%" y="1103.50"></text></g><g><title>wgpu::util::belt::StagingBelt::write_buffer (14,730,175 samples, 0.26%)</title><rect x="37.4972%" y="1077" width="0.2624%" height="15" fill="rgb(249,55,22)" fg:x="2104682355" fg:w="14730175"/><text x="37.7472%" y="1087.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (3,386,954 samples, 0.06%)</title><rect x="37.6993%" y="1061" width="0.0603%" height="15" fill="rgb(207,134,9)" fg:x="2116025576" fg:w="3386954"/><text x="37.9493%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="949" width="0.0126%" height="15" fill="rgb(218,134,0)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="933" width="0.0126%" height="15" fill="rgb(213,212,33)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="917" width="0.0126%" height="15" fill="rgb(252,106,18)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="901" width="0.0126%" height="15" fill="rgb(208,126,42)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="885" width="0.0126%" height="15" fill="rgb(246,175,29)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="869" width="0.0126%" height="15" fill="rgb(215,13,50)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="853" width="0.0126%" height="15" fill="rgb(216,172,15)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="837" width="0.0126%" height="15" fill="rgb(212,103,13)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="821" width="0.0126%" height="15" fill="rgb(231,171,36)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (705,082 samples, 0.01%)</title><rect x="37.7596%" y="805" width="0.0126%" height="15" fill="rgb(250,123,20)" fg:x="2119412530" fg:w="705082"/><text x="38.0096%" y="815.50"></text></g><g><title>iced_glyphon::text_render::TextRenderer::new (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="1077" width="0.0265%" height="15" fill="rgb(212,53,50)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="1087.50"></text></g><g><title>iced_glyphon::cache::Cache::get_or_create_pipeline (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="1061" width="0.0265%" height="15" fill="rgb(243,54,12)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="1071.50"></text></g><g><title>wgpu::Device::create_render_pipeline (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="1045" width="0.0265%" height="15" fill="rgb(234,101,34)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_render_pipeline (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="1029" width="0.0265%" height="15" fill="rgb(254,67,22)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_render_pipeline (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="1013" width="0.0265%" height="15" fill="rgb(250,35,47)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_render_pipeline (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="997" width="0.0265%" height="15" fill="rgb(226,126,38)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="1007.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_render_pipeline (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="981" width="0.0265%" height="15" fill="rgb(216,138,53)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_render_pipeline (1,487,159 samples, 0.03%)</title><rect x="37.7596%" y="965" width="0.0265%" height="15" fill="rgb(246,199,43)" fg:x="2119412530" fg:w="1487159"/><text x="38.0096%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::compile_stage (782,077 samples, 0.01%)</title><rect x="37.7722%" y="949" width="0.0139%" height="15" fill="rgb(232,125,11)" fg:x="2120117612" fg:w="782077"/><text x="38.0222%" y="959.50"></text></g><g><title>naga::back::spv::write_vec (782,077 samples, 0.01%)</title><rect x="37.7722%" y="933" width="0.0139%" height="15" fill="rgb(218,219,45)" fg:x="2120117612" fg:w="782077"/><text x="38.0222%" y="943.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write (782,077 samples, 0.01%)</title><rect x="37.7722%" y="917" width="0.0139%" height="15" fill="rgb(216,102,54)" fg:x="2120117612" fg:w="782077"/><text x="38.0222%" y="927.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_logical_layout (782,077 samples, 0.01%)</title><rect x="37.7722%" y="901" width="0.0139%" height="15" fill="rgb(250,228,7)" fg:x="2120117612" fg:w="782077"/><text x="38.0222%" y="911.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_function (782,077 samples, 0.01%)</title><rect x="37.7722%" y="885" width="0.0139%" height="15" fill="rgb(226,125,25)" fg:x="2120117612" fg:w="782077"/><text x="38.0222%" y="895.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_block (782,077 samples, 0.01%)</title><rect x="37.7722%" y="869" width="0.0139%" height="15" fill="rgb(224,165,27)" fg:x="2120117612" fg:w="782077"/><text x="38.0222%" y="879.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_expression_pointer (782,077 samples, 0.01%)</title><rect x="37.7722%" y="853" width="0.0139%" height="15" fill="rgb(233,86,3)" fg:x="2120117612" fg:w="782077"/><text x="38.0222%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,825,627 samples, 0.10%)</title><rect x="37.7861%" y="1061" width="0.1038%" height="15" fill="rgb(228,116,20)" fg:x="2120899689" fg:w="5825627"/><text x="38.0361%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,825,627 samples, 0.10%)</title><rect x="37.7861%" y="1045" width="0.1038%" height="15" fill="rgb(209,192,17)" fg:x="2120899689" fg:w="5825627"/><text x="38.0361%" y="1055.50"></text></g><g><title>iced_graphics::text::paragraph::Weak::upgrade (5,825,627 samples, 0.10%)</title><rect x="37.7861%" y="1029" width="0.1038%" height="15" fill="rgb(224,88,34)" fg:x="2120899689" fg:w="5825627"/><text x="38.0361%" y="1039.50"></text></g><g><title>&lt;cosmic_text::buffer::LayoutRunIter as core::iter::traits::iterator::Iterator&gt;::next (6,578,685 samples, 0.12%)</title><rect x="38.6296%" y="1045" width="0.1172%" height="15" fill="rgb(233,38,6)" fg:x="2168242083" fg:w="6578685"/><text x="38.8796%" y="1055.50"></text></g><g><title>[libc.so.6] (5,352,812 samples, 0.10%)</title><rect x="38.7468%" y="1045" width="0.0954%" height="15" fill="rgb(212,59,30)" fg:x="2174820768" fg:w="5352812"/><text x="38.9968%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,994,825 samples, 0.04%)</title><rect x="38.8422%" y="1045" width="0.0355%" height="15" fill="rgb(213,80,3)" fg:x="2180173580" fg:w="1994825"/><text x="39.0922%" y="1055.50"></text></g><g><title>iced_core::transformation::&lt;impl core::ops::arith::Mul&lt;iced_core::transformation::Transformation&gt; for iced_core::rectangle::Rectangle&gt;::mul (1,994,825 samples, 0.04%)</title><rect x="38.8422%" y="1029" width="0.0355%" height="15" fill="rgb(251,178,7)" fg:x="2180173580" fg:w="1994825"/><text x="39.0922%" y="1039.50"></text></g><g><title>cosmic_text::layout::LayoutGlyph::physical (11,223,152 samples, 0.20%)</title><rect x="38.8777%" y="1045" width="0.2000%" height="15" fill="rgb(213,154,26)" fg:x="2182168405" fg:w="11223152"/><text x="39.1277%" y="1055.50"></text></g><g><title>truncf (2,421,706 samples, 0.04%)</title><rect x="39.0345%" y="1029" width="0.0431%" height="15" fill="rgb(238,165,49)" fg:x="2190969851" fg:w="2421706"/><text x="39.2845%" y="1039.50"></text></g><g><title>swash::scale::Scaler::scale_outline_impl (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="981" width="0.4671%" height="15" fill="rgb(248,91,46)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="991.50"></text></g><g><title>skrifa::outline::OutlineGlyph::draw (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="965" width="0.4671%" height="15" fill="rgb(244,21,52)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="975.50"></text></g><g><title>skrifa::outline::hint::HintingInstance::draw (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="949" width="0.4671%" height="15" fill="rgb(247,122,20)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="959.50"></text></g><g><title>skrifa::outline::with_glyf_memory (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="933" width="0.4671%" height="15" fill="rgb(218,27,9)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="943.50"></text></g><g><title>skrifa::outline::hint::HintingInstance::draw::_{{closure}} (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="917" width="0.4671%" height="15" fill="rgb(246,7,6)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="927.50"></text></g><g><title>skrifa::outline::glyf::FreeTypeScaler::scale (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="901" width="0.4671%" height="15" fill="rgb(227,135,54)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="911.50"></text></g><g><title>&lt;skrifa::outline::glyf::FreeTypeScaler as skrifa::outline::glyf::Scaler&gt;::load_simple (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="885" width="0.4671%" height="15" fill="rgb(247,14,11)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="895.50"></text></g><g><title>skrifa::outline::glyf::hint::instance::HintInstance::hint (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="869" width="0.4671%" height="15" fill="rgb(206,149,34)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="879.50"></text></g><g><title>skrifa::outline::glyf::hint::engine::dispatch::&lt;impl skrifa::outline::glyf::hint::engine::Engine&gt;::run (26,217,041 samples, 0.47%)</title><rect x="39.0777%" y="853" width="0.4671%" height="15" fill="rgb(227,228,4)" fg:x="2193391557" fg:w="26217041"/><text x="39.3277%" y="863.50"></text></g><g><title>read_fonts::tables::glyf::bytecode::decode::Decoder::decode (3,400,905 samples, 0.06%)</title><rect x="39.4841%" y="837" width="0.0606%" height="15" fill="rgb(238,218,28)" fg:x="2216207693" fg:w="3400905"/><text x="39.7341%" y="847.50"></text></g><g><title>swash::scale::Render::render (29,942,730 samples, 0.53%)</title><rect x="39.0777%" y="1013" width="0.5335%" height="15" fill="rgb(252,86,40)" fg:x="2193391557" fg:w="29942730"/><text x="39.3277%" y="1023.50"></text></g><g><title>swash::scale::Render::render_into (29,942,730 samples, 0.53%)</title><rect x="39.0777%" y="997" width="0.5335%" height="15" fill="rgb(251,225,11)" fg:x="2193391557" fg:w="29942730"/><text x="39.3277%" y="1007.50"></text></g><g><title>zeno::mask::Mask&lt;D&gt;::placement (3,725,689 samples, 0.07%)</title><rect x="39.5447%" y="981" width="0.0664%" height="15" fill="rgb(206,46,49)" fg:x="2219608598" fg:w="3725689"/><text x="39.7947%" y="991.50"></text></g><g><title>zeno::scratch::Scratch::bounds (3,725,689 samples, 0.07%)</title><rect x="39.5447%" y="965" width="0.0664%" height="15" fill="rgb(245,128,24)" fg:x="2219608598" fg:w="3725689"/><text x="39.7947%" y="975.50"></text></g><g><title>read_fonts::tables::glyf::bytecode::decode::Decoder::decode (2,153,374 samples, 0.04%)</title><rect x="39.6111%" y="949" width="0.0384%" height="15" fill="rgb(219,177,34)" fg:x="2223334287" fg:w="2153374"/><text x="39.8611%" y="959.50"></text></g><g><title>swash::scale::ScalerBuilder::build (19,332,515 samples, 0.34%)</title><rect x="39.6111%" y="1013" width="0.3444%" height="15" fill="rgb(218,60,48)" fg:x="2223334287" fg:w="19332515"/><text x="39.8611%" y="1023.50"></text></g><g><title>swash::scale::hinting_cache::HintingCache::get (19,332,515 samples, 0.34%)</title><rect x="39.6111%" y="997" width="0.3444%" height="15" fill="rgb(221,11,5)" fg:x="2223334287" fg:w="19332515"/><text x="39.8611%" y="1007.50"></text></g><g><title>skrifa::outline::hint::HintingInstance::new (19,332,515 samples, 0.34%)</title><rect x="39.6111%" y="981" width="0.3444%" height="15" fill="rgb(220,148,13)" fg:x="2223334287" fg:w="19332515"/><text x="39.8611%" y="991.50"></text></g><g><title>skrifa::outline::glyf::hint::instance::HintInstance::reconfigure (19,332,515 samples, 0.34%)</title><rect x="39.6111%" y="965" width="0.3444%" height="15" fill="rgb(210,16,3)" fg:x="2223334287" fg:w="19332515"/><text x="39.8611%" y="975.50"></text></g><g><title>skrifa::outline::glyf::hint::engine::dispatch::&lt;impl skrifa::outline::glyf::hint::engine::Engine&gt;::run (17,179,141 samples, 0.31%)</title><rect x="39.6495%" y="949" width="0.3061%" height="15" fill="rgb(236,80,2)" fg:x="2225487661" fg:w="17179141"/><text x="39.8995%" y="959.50"></text></g><g><title>skrifa::outline::glyf::hint::value_stack::ValueStack::push_inline_operands (4,195,348 samples, 0.07%)</title><rect x="39.8808%" y="933" width="0.0747%" height="15" fill="rgb(239,129,19)" fg:x="2238471454" fg:w="4195348"/><text x="40.1308%" y="943.50"></text></g><g><title>cosmic_text::swash::SwashCache::get_image_uncached (52,287,570 samples, 0.93%)</title><rect x="39.0777%" y="1045" width="0.9316%" height="15" fill="rgb(220,106,35)" fg:x="2193391557" fg:w="52287570"/><text x="39.3277%" y="1055.50"></text></g><g><title>cosmic_text::swash::swash_image (52,287,570 samples, 0.93%)</title><rect x="39.0777%" y="1029" width="0.9316%" height="15" fill="rgb(252,139,45)" fg:x="2193391557" fg:w="52287570"/><text x="39.3277%" y="1039.50"></text></g><g><title>swash::scale::ScalerBuilder::new (3,012,325 samples, 0.05%)</title><rect x="39.9555%" y="1013" width="0.0537%" height="15" fill="rgb(229,8,36)" fg:x="2242666802" fg:w="3012325"/><text x="40.2055%" y="1023.50"></text></g><g><title>&lt;read_fonts::FontRef as skrifa::provider::MetadataProvider&gt;::outline_glyphs (3,012,325 samples, 0.05%)</title><rect x="39.9555%" y="997" width="0.0537%" height="15" fill="rgb(230,126,33)" fg:x="2242666802" fg:w="3012325"/><text x="40.2055%" y="1007.50"></text></g><g><title>skrifa::outline::OutlineGlyphCollection::new (3,012,325 samples, 0.05%)</title><rect x="39.9555%" y="981" width="0.0537%" height="15" fill="rgb(239,140,21)" fg:x="2242666802" fg:w="3012325"/><text x="40.2055%" y="991.50"></text></g><g><title>skrifa::outline::glyf::Outlines::new (3,012,325 samples, 0.05%)</title><rect x="39.9555%" y="965" width="0.0537%" height="15" fill="rgb(254,104,9)" fg:x="2242666802" fg:w="3012325"/><text x="40.2055%" y="975.50"></text></g><g><title>read_fonts::table_provider::TableProvider::hdmx (3,012,325 samples, 0.05%)</title><rect x="39.9555%" y="949" width="0.0537%" height="15" fill="rgb(239,52,14)" fg:x="2242666802" fg:w="3012325"/><text x="40.2055%" y="959.50"></text></g><g><title>read_fonts::tables::maxp::&lt;impl read_fonts::read::FontRead for read_fonts::table_ref::TableRef&lt;read_fonts::tables::maxp::MaxpMarker&gt;&gt;::read (3,012,325 samples, 0.05%)</title><rect x="39.9555%" y="933" width="0.0537%" height="15" fill="rgb(208,227,44)" fg:x="2242666802" fg:w="3012325"/><text x="40.2055%" y="943.50"></text></g><g><title>&lt;font_types::version::Version16Dot16 as font_types::version::Compatible&lt;(u16,u16)&gt;&gt;::compatible (3,012,325 samples, 0.05%)</title><rect x="39.9555%" y="917" width="0.0537%" height="15" fill="rgb(246,18,19)" fg:x="2242666802" fg:w="3012325"/><text x="40.2055%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10,614,113 samples, 0.19%)</title><rect x="40.0511%" y="1029" width="0.1891%" height="15" fill="rgb(235,228,25)" fg:x="2248031762" fg:w="10614113"/><text x="40.3011%" y="1039.50"></text></g><g><title>iced_glyphon::text_atlas::InnerAtlas::promote (26,671,716 samples, 0.48%)</title><rect x="40.0092%" y="1045" width="0.4752%" height="15" fill="rgb(240,156,20)" fg:x="2245679127" fg:w="26671716"/><text x="40.2592%" y="1055.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::promote (13,704,968 samples, 0.24%)</title><rect x="40.2402%" y="1029" width="0.2442%" height="15" fill="rgb(224,8,20)" fg:x="2258645875" fg:w="13704968"/><text x="40.4902%" y="1039.50"></text></g><g><title>iced_glyphon::text_atlas::TextAtlas::glyph (14,018,109 samples, 0.25%)</title><rect x="40.4844%" y="1045" width="0.2497%" height="15" fill="rgb(214,12,52)" fg:x="2272350843" fg:w="14018109"/><text x="40.7344%" y="1055.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::peek (11,389,622 samples, 0.20%)</title><rect x="40.5312%" y="1029" width="0.2029%" height="15" fill="rgb(211,220,47)" fg:x="2274979330" fg:w="11389622"/><text x="40.7812%" y="1039.50"></text></g><g><title>wgpu::Queue::write_texture (2,516,047 samples, 0.04%)</title><rect x="40.7341%" y="1045" width="0.0448%" height="15" fill="rgb(250,173,5)" fg:x="2286368952" fg:w="2516047"/><text x="40.9841%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (2,516,047 samples, 0.04%)</title><rect x="40.7341%" y="1029" width="0.0448%" height="15" fill="rgb(250,125,52)" fg:x="2286368952" fg:w="2516047"/><text x="40.9841%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_texture (2,516,047 samples, 0.04%)</title><rect x="40.7341%" y="1013" width="0.0448%" height="15" fill="rgb(209,133,18)" fg:x="2286368952" fg:w="2516047"/><text x="40.9841%" y="1023.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_texture (2,516,047 samples, 0.04%)</title><rect x="40.7341%" y="997" width="0.0448%" height="15" fill="rgb(216,173,22)" fg:x="2286368952" fg:w="2516047"/><text x="40.9841%" y="1007.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_texture (2,516,047 samples, 0.04%)</title><rect x="40.7341%" y="981" width="0.0448%" height="15" fill="rgb(205,3,22)" fg:x="2286368952" fg:w="2516047"/><text x="40.9841%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,516,047 samples, 0.04%)</title><rect x="40.7341%" y="965" width="0.0448%" height="15" fill="rgb(248,22,20)" fg:x="2286368952" fg:w="2516047"/><text x="40.9841%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,516,047 samples, 0.04%)</title><rect x="40.7341%" y="949" width="0.0448%" height="15" fill="rgb(233,6,29)" fg:x="2286368952" fg:w="2516047"/><text x="40.9841%" y="959.50"></text></g><g><title>wgpu::util::belt::StagingBelt::recall (6,092,054 samples, 0.11%)</title><rect x="40.7790%" y="1045" width="0.1085%" height="15" fill="rgb(240,22,54)" fg:x="2288884999" fg:w="6092054"/><text x="41.0290%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_map_async (6,092,054 samples, 0.11%)</title><rect x="40.7790%" y="1029" width="0.1085%" height="15" fill="rgb(231,133,32)" fg:x="2288884999" fg:w="6092054"/><text x="41.0290%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::buffer_map_async (6,092,054 samples, 0.11%)</title><rect x="40.7790%" y="1013" width="0.1085%" height="15" fill="rgb(248,193,4)" fg:x="2288884999" fg:w="6092054"/><text x="41.0290%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::buffer_map_async (3,892,769 samples, 0.07%)</title><rect x="40.8182%" y="997" width="0.0694%" height="15" fill="rgb(211,178,46)" fg:x="2291084284" fg:w="3892769"/><text x="41.0682%" y="1007.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_copy_buffer_to_buffer (1,620,120 samples, 0.03%)</title><rect x="40.8875%" y="1029" width="0.0289%" height="15" fill="rgb(224,5,42)" fg:x="2294977053" fg:w="1620120"/><text x="41.1375%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_copy_buffer_to_buffer (1,620,120 samples, 0.03%)</title><rect x="40.8875%" y="1013" width="0.0289%" height="15" fill="rgb(239,176,25)" fg:x="2294977053" fg:w="1620120"/><text x="41.1375%" y="1023.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (1,620,120 samples, 0.03%)</title><rect x="40.8875%" y="997" width="0.0289%" height="15" fill="rgb(245,187,50)" fg:x="2294977053" fg:w="1620120"/><text x="41.1375%" y="1007.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_single (1,620,120 samples, 0.03%)</title><rect x="40.8875%" y="981" width="0.0289%" height="15" fill="rgb(248,24,15)" fg:x="2294977053" fg:w="1620120"/><text x="41.1375%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,620,120 samples, 0.03%)</title><rect x="40.8875%" y="965" width="0.0289%" height="15" fill="rgb(205,166,13)" fg:x="2294977053" fg:w="1620120"/><text x="41.1375%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,620,120 samples, 0.03%)</title><rect x="40.8875%" y="949" width="0.0289%" height="15" fill="rgb(208,114,23)" fg:x="2294977053" fg:w="1620120"/><text x="41.1375%" y="959.50"></text></g><g><title>__rustc::__rdl_realloc (1,620,120 samples, 0.03%)</title><rect x="40.8875%" y="933" width="0.0289%" height="15" fill="rgb(239,127,18)" fg:x="2294977053" fg:w="1620120"/><text x="41.1375%" y="943.50"></text></g><g><title>iced_wgpu::text::Pipeline::prepare (179,537,278 samples, 3.20%)</title><rect x="37.7596%" y="1093" width="3.1987%" height="15" fill="rgb(219,154,28)" fg:x="2119412530" fg:w="179537278"/><text x="38.0096%" y="1103.50">ice..</text></g><g><title>iced_wgpu::text::prepare (178,050,119 samples, 3.17%)</title><rect x="37.7861%" y="1077" width="3.1722%" height="15" fill="rgb(225,157,23)" fg:x="2120899689" fg:w="178050119"/><text x="38.0361%" y="1087.50">ice..</text></g><g><title>iced_glyphon::text_render::TextRenderer::prepare_with_depth (172,224,492 samples, 3.07%)</title><rect x="37.8899%" y="1061" width="3.0684%" height="15" fill="rgb(219,8,6)" fg:x="2126725316" fg:w="172224492"/><text x="38.1399%" y="1071.50">ice..</text></g><g><title>wgpu::util::belt::StagingBelt::write_buffer (3,972,755 samples, 0.07%)</title><rect x="40.8875%" y="1045" width="0.0708%" height="15" fill="rgb(212,47,6)" fg:x="2294977053" fg:w="3972755"/><text x="41.1375%" y="1055.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (2,352,635 samples, 0.04%)</title><rect x="40.9164%" y="1029" width="0.0419%" height="15" fill="rgb(224,190,4)" fg:x="2296597173" fg:w="2352635"/><text x="41.1664%" y="1039.50"></text></g><g><title>iced_wgpu::Renderer::prepare (495,323,341 samples, 8.82%)</title><rect x="32.1506%" y="1109" width="8.8247%" height="15" fill="rgb(239,183,29)" fg:x="1804580081" fg:w="495323341"/><text x="32.4006%" y="1119.50">iced_wgpu::R..</text></g><g><title>wgpu::Queue::write_buffer (953,614 samples, 0.02%)</title><rect x="40.9583%" y="1093" width="0.0170%" height="15" fill="rgb(213,57,7)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="1103.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (953,614 samples, 0.02%)</title><rect x="40.9583%" y="1077" width="0.0170%" height="15" fill="rgb(216,148,1)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="1087.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (953,614 samples, 0.02%)</title><rect x="40.9583%" y="1061" width="0.0170%" height="15" fill="rgb(236,182,29)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="1071.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (953,614 samples, 0.02%)</title><rect x="40.9583%" y="1045" width="0.0170%" height="15" fill="rgb(244,120,48)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="1055.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (953,614 samples, 0.02%)</title><rect x="40.9583%" y="1029" width="0.0170%" height="15" fill="rgb(206,71,34)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="1039.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (953,614 samples, 0.02%)</title><rect x="40.9583%" y="1013" width="0.0170%" height="15" fill="rgb(242,32,6)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="1023.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (953,614 samples, 0.02%)</title><rect x="40.9583%" y="997" width="0.0170%" height="15" fill="rgb(241,35,3)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="1007.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (953,614 samples, 0.02%)</title><rect x="40.9583%" y="981" width="0.0170%" height="15" fill="rgb(222,62,19)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (953,614 samples, 0.02%)</title><rect x="40.9583%" y="965" width="0.0170%" height="15" fill="rgb(223,110,41)" fg:x="2298949808" fg:w="953614"/><text x="41.2083%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,876,627 samples, 0.09%)</title><rect x="41.1693%" y="1013" width="0.0869%" height="15" fill="rgb(208,224,4)" fg:x="2310793802" fg:w="4876627"/><text x="41.4193%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,876,627 samples, 0.09%)</title><rect x="41.1693%" y="997" width="0.0869%" height="15" fill="rgb(241,137,19)" fg:x="2310793802" fg:w="4876627"/><text x="41.4193%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (19,366,927 samples, 0.35%)</title><rect x="41.2562%" y="1013" width="0.3450%" height="15" fill="rgb(244,24,17)" fg:x="2315670429" fg:w="19366927"/><text x="41.5062%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (10,026,561 samples, 0.18%)</title><rect x="41.4226%" y="997" width="0.1786%" height="15" fill="rgb(245,178,49)" fg:x="2325010795" fg:w="10026561"/><text x="41.6726%" y="1007.50"></text></g><g><title>feclearexcept (2,689,978 samples, 0.05%)</title><rect x="41.5533%" y="981" width="0.0479%" height="15" fill="rgb(219,160,38)" fg:x="2332347378" fg:w="2689978"/><text x="41.8033%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::vulkan::Api,wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;wgpu_hal::empty::Api&gt;&gt;,wgpu_core::resource::Texture&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (1,893,921 samples, 0.03%)</title><rect x="41.6012%" y="1013" width="0.0337%" height="15" fill="rgb(228,137,14)" fg:x="2335037356" fg:w="1893921"/><text x="41.8512%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (8,855,566 samples, 0.16%)</title><rect x="41.6350%" y="997" width="0.1578%" height="15" fill="rgb(237,134,11)" fg:x="2336931277" fg:w="8855566"/><text x="41.8850%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (8,855,566 samples, 0.16%)</title><rect x="41.6350%" y="981" width="0.1578%" height="15" fill="rgb(211,126,44)" fg:x="2336931277" fg:w="8855566"/><text x="41.8850%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,036,743 samples, 0.11%)</title><rect x="41.6852%" y="965" width="0.1076%" height="15" fill="rgb(226,171,33)" fg:x="2339750100" fg:w="6036743"/><text x="41.9352%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,036,743 samples, 0.11%)</title><rect x="41.6852%" y="949" width="0.1076%" height="15" fill="rgb(253,99,13)" fg:x="2339750100" fg:w="6036743"/><text x="41.9352%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,802,712 samples, 0.05%)</title><rect x="41.7428%" y="933" width="0.0499%" height="15" fill="rgb(244,48,7)" fg:x="2342984131" fg:w="2802712"/><text x="41.9928%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,802,712 samples, 0.05%)</title><rect x="41.7428%" y="917" width="0.0499%" height="15" fill="rgb(244,217,54)" fg:x="2342984131" fg:w="2802712"/><text x="41.9928%" y="927.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (11,230,571 samples, 0.20%)</title><rect x="41.6350%" y="1013" width="0.2001%" height="15" fill="rgb(224,15,18)" fg:x="2336931277" fg:w="11230571"/><text x="41.8850%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (2,375,005 samples, 0.04%)</title><rect x="41.7927%" y="997" width="0.0423%" height="15" fill="rgb(244,99,12)" fg:x="2345786843" fg:w="2375005"/><text x="42.0427%" y="1007.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (3,716,430 samples, 0.07%)</title><rect x="41.8351%" y="997" width="0.0662%" height="15" fill="rgb(233,226,8)" fg:x="2348161848" fg:w="3716430"/><text x="42.0851%" y="1007.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (6,181,558 samples, 0.11%)</title><rect x="41.8351%" y="1013" width="0.1101%" height="15" fill="rgb(229,211,3)" fg:x="2348161848" fg:w="6181558"/><text x="42.0851%" y="1023.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (2,465,128 samples, 0.04%)</title><rect x="41.9013%" y="997" width="0.0439%" height="15" fill="rgb(216,140,21)" fg:x="2351878278" fg:w="2465128"/><text x="42.1513%" y="1007.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (6,293,424 samples, 0.11%)</title><rect x="41.9452%" y="1013" width="0.1121%" height="15" fill="rgb(234,122,30)" fg:x="2354343406" fg:w="6293424"/><text x="42.1952%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (6,293,424 samples, 0.11%)</title><rect x="41.9452%" y="997" width="0.1121%" height="15" fill="rgb(236,25,46)" fg:x="2354343406" fg:w="6293424"/><text x="42.1952%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,293,424 samples, 0.11%)</title><rect x="41.9452%" y="981" width="0.1121%" height="15" fill="rgb(217,52,54)" fg:x="2354343406" fg:w="6293424"/><text x="42.1952%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,293,424 samples, 0.11%)</title><rect x="41.9452%" y="965" width="0.1121%" height="15" fill="rgb(222,29,26)" fg:x="2354343406" fg:w="6293424"/><text x="42.1952%" y="975.50"></text></g><g><title>wgpu_core::command::bind::Binder&lt;A&gt;::assign_group (1,829,539 samples, 0.03%)</title><rect x="42.0573%" y="1013" width="0.0326%" height="15" fill="rgb(216,177,29)" fg:x="2360636830" fg:w="1829539"/><text x="42.3073%" y="1023.50"></text></g><g><title>wgpu_core::command::bind::Binder&lt;A&gt;::change_pipeline_layout (2,319,315 samples, 0.04%)</title><rect x="42.0899%" y="1013" width="0.0413%" height="15" fill="rgb(247,136,51)" fg:x="2362466369" fg:w="2319315"/><text x="42.3399%" y="1023.50"></text></g><g><title>wgpu_core::command::bind::compat::BoundBindGroupLayouts&lt;A&gt;::update_expectations (2,319,315 samples, 0.04%)</title><rect x="42.0899%" y="997" width="0.0413%" height="15" fill="rgb(231,47,47)" fg:x="2362466369" fg:w="2319315"/><text x="42.3399%" y="1007.50"></text></g><g><title>wgpu_core::resource::Resource::is_equal (2,319,315 samples, 0.04%)</title><rect x="42.0899%" y="981" width="0.0413%" height="15" fill="rgb(211,192,36)" fg:x="2362466369" fg:w="2319315"/><text x="42.3399%" y="991.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions&lt;A&gt;::register_implicit_init (2,457,701 samples, 0.04%)</title><rect x="42.1915%" y="997" width="0.0438%" height="15" fill="rgb(229,156,32)" fg:x="2368166816" fg:w="2457701"/><text x="42.4415%" y="1007.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions&lt;A&gt;::register_init_action (2,457,701 samples, 0.04%)</title><rect x="42.1915%" y="981" width="0.0438%" height="15" fill="rgb(248,213,20)" fg:x="2368166816" fg:w="2457701"/><text x="42.4415%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (2,457,701 samples, 0.04%)</title><rect x="42.1915%" y="965" width="0.0438%" height="15" fill="rgb(217,64,7)" fg:x="2368166816" fg:w="2457701"/><text x="42.4415%" y="975.50"></text></g><g><title>[libc.so.6] (3,639,528 samples, 0.06%)</title><rect x="42.2353%" y="981" width="0.0648%" height="15" fill="rgb(232,142,8)" fg:x="2370624517" fg:w="3639528"/><text x="42.4853%" y="991.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (6,444,742 samples, 0.11%)</title><rect x="42.2353%" y="997" width="0.1148%" height="15" fill="rgb(224,92,44)" fg:x="2370624517" fg:w="6444742"/><text x="42.4853%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2,805,214 samples, 0.05%)</title><rect x="42.3001%" y="981" width="0.0500%" height="15" fill="rgb(214,169,17)" fg:x="2374264045" fg:w="2805214"/><text x="42.5501%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,805,214 samples, 0.05%)</title><rect x="42.3001%" y="965" width="0.0500%" height="15" fill="rgb(210,59,37)" fg:x="2374264045" fg:w="2805214"/><text x="42.5501%" y="975.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,651,986 samples, 0.03%)</title><rect x="42.3893%" y="981" width="0.0294%" height="15" fill="rgb(214,116,48)" fg:x="2379268544" fg:w="1651986"/><text x="42.6393%" y="991.50"></text></g><g><title>[libc.so.6] (1,651,986 samples, 0.03%)</title><rect x="42.3893%" y="965" width="0.0294%" height="15" fill="rgb(244,191,6)" fg:x="2379268544" fg:w="1651986"/><text x="42.6393%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,762,284 samples, 0.08%)</title><rect x="42.4187%" y="981" width="0.0848%" height="15" fill="rgb(241,50,52)" fg:x="2380920530" fg:w="4762284"/><text x="42.6687%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,762,284 samples, 0.08%)</title><rect x="42.4187%" y="965" width="0.0848%" height="15" fill="rgb(236,75,39)" fg:x="2380920530" fg:w="4762284"/><text x="42.6687%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,762,284 samples, 0.08%)</title><rect x="42.4187%" y="949" width="0.0848%" height="15" fill="rgb(236,99,0)" fg:x="2380920530" fg:w="4762284"/><text x="42.6687%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,240,517 samples, 0.04%)</title><rect x="42.4636%" y="933" width="0.0399%" height="15" fill="rgb(207,202,15)" fg:x="2383442297" fg:w="2240517"/><text x="42.7136%" y="943.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (26,861,804 samples, 0.48%)</title><rect x="42.1312%" y="1013" width="0.4786%" height="15" fill="rgb(233,207,14)" fg:x="2364785684" fg:w="26861804"/><text x="42.3812%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (14,578,229 samples, 0.26%)</title><rect x="42.3501%" y="997" width="0.2597%" height="15" fill="rgb(226,27,51)" fg:x="2377069259" fg:w="14578229"/><text x="42.6001%" y="1007.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5,964,674 samples, 0.11%)</title><rect x="42.5035%" y="981" width="0.1063%" height="15" fill="rgb(206,104,42)" fg:x="2385682814" fg:w="5964674"/><text x="42.7535%" y="991.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::merge_bind_group (1,369,527 samples, 0.02%)</title><rect x="42.6098%" y="1013" width="0.0244%" height="15" fill="rgb(212,225,4)" fg:x="2391647488" fg:w="1369527"/><text x="42.8598%" y="1023.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_bind_group (1,369,527 samples, 0.02%)</title><rect x="42.6098%" y="997" width="0.0244%" height="15" fill="rgb(233,96,42)" fg:x="2391647488" fg:w="1369527"/><text x="42.8598%" y="1007.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (3,629,701 samples, 0.06%)</title><rect x="42.6342%" y="1013" width="0.0647%" height="15" fill="rgb(229,21,32)" fg:x="2393017015" fg:w="3629701"/><text x="42.8842%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,629,701 samples, 0.06%)</title><rect x="42.6342%" y="997" width="0.0647%" height="15" fill="rgb(226,216,24)" fg:x="2393017015" fg:w="3629701"/><text x="42.8842%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,629,701 samples, 0.06%)</title><rect x="42.6342%" y="981" width="0.0647%" height="15" fill="rgb(221,163,17)" fg:x="2393017015" fg:w="3629701"/><text x="42.8842%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,430,416 samples, 0.03%)</title><rect x="42.6734%" y="965" width="0.0255%" height="15" fill="rgb(216,216,42)" fg:x="2395216300" fg:w="1430416"/><text x="42.9234%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (10,721,118 samples, 0.19%)</title><rect x="42.6989%" y="1013" width="0.1910%" height="15" fill="rgb(240,118,7)" fg:x="2396646716" fg:w="10721118"/><text x="42.9489%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (10,721,118 samples, 0.19%)</title><rect x="42.6989%" y="997" width="0.1910%" height="15" fill="rgb(221,67,37)" fg:x="2396646716" fg:w="10721118"/><text x="42.9489%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (10,721,118 samples, 0.19%)</title><rect x="42.6989%" y="981" width="0.1910%" height="15" fill="rgb(241,32,44)" fg:x="2396646716" fg:w="10721118"/><text x="42.9489%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_scissor_rect (2,834,010 samples, 0.05%)</title><rect x="42.8899%" y="1013" width="0.0505%" height="15" fill="rgb(235,204,43)" fg:x="2407367834" fg:w="2834010"/><text x="43.1399%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,834,010 samples, 0.05%)</title><rect x="42.8899%" y="997" width="0.0505%" height="15" fill="rgb(213,116,10)" fg:x="2407367834" fg:w="2834010"/><text x="43.1399%" y="1007.50"></text></g><g><title>iced_wgpu::Renderer::present (608,981,151 samples, 10.85%)</title><rect x="32.1506%" y="1125" width="10.8497%" height="15" fill="rgb(239,15,48)" fg:x="1804580081" fg:w="608981151"/><text x="32.4006%" y="1135.50">iced_wgpu::Rende..</text></g><g><title>iced_wgpu::Renderer::render (113,657,810 samples, 2.02%)</title><rect x="40.9753%" y="1109" width="2.0249%" height="15" fill="rgb(207,123,36)" fg:x="2299903422" fg:w="113657810"/><text x="41.2253%" y="1119.50">i..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (112,680,226 samples, 2.01%)</title><rect x="40.9927%" y="1093" width="2.0075%" height="15" fill="rgb(209,103,30)" fg:x="2300881006" fg:w="112680226"/><text x="41.2427%" y="1103.50">c..</text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (112,680,226 samples, 2.01%)</title><rect x="40.9927%" y="1077" width="2.0075%" height="15" fill="rgb(238,100,19)" fg:x="2300881006" fg:w="112680226"/><text x="41.2427%" y="1087.50">&lt;..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (112,680,226 samples, 2.01%)</title><rect x="40.9927%" y="1061" width="2.0075%" height="15" fill="rgb(244,30,14)" fg:x="2300881006" fg:w="112680226"/><text x="41.2427%" y="1071.50">&lt;..</text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_end_render_pass (112,680,226 samples, 2.01%)</title><rect x="40.9927%" y="1045" width="2.0075%" height="15" fill="rgb(249,174,6)" fg:x="2300881006" fg:w="112680226"/><text x="41.2427%" y="1055.50">&lt;..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (112,680,226 samples, 2.01%)</title><rect x="40.9927%" y="1029" width="2.0075%" height="15" fill="rgb(235,213,41)" fg:x="2300881006" fg:w="112680226"/><text x="41.2427%" y="1039.50">w..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_vertex_buffer (3,359,388 samples, 0.06%)</title><rect x="42.9404%" y="1013" width="0.0599%" height="15" fill="rgb(213,118,6)" fg:x="2410201844" fg:w="3359388"/><text x="43.1904%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,359,388 samples, 0.06%)</title><rect x="42.9404%" y="997" width="0.0599%" height="15" fill="rgb(235,44,51)" fg:x="2410201844" fg:w="3359388"/><text x="43.1904%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,359,388 samples, 0.06%)</title><rect x="42.9404%" y="981" width="0.0599%" height="15" fill="rgb(217,9,53)" fg:x="2410201844" fg:w="3359388"/><text x="43.1904%" y="991.50"></text></g><g><title>[libc.so.6] (2,199,285 samples, 0.04%)</title><rect x="43.3343%" y="997" width="0.0392%" height="15" fill="rgb(237,172,34)" fg:x="2432313644" fg:w="2199285"/><text x="43.5843%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,453,300 samples, 0.08%)</title><rect x="43.3735%" y="997" width="0.0793%" height="15" fill="rgb(206,206,11)" fg:x="2434512929" fg:w="4453300"/><text x="43.6235%" y="1007.50"></text></g><g><title>pthread_mutex_lock (3,532,482 samples, 0.06%)</title><rect x="43.3899%" y="981" width="0.0629%" height="15" fill="rgb(214,149,29)" fg:x="2435433747" fg:w="3532482"/><text x="43.6399%" y="991.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (25,288,303 samples, 0.45%)</title><rect x="43.0530%" y="1077" width="0.4505%" height="15" fill="rgb(208,123,3)" fg:x="2416521377" fg:w="25288303"/><text x="43.3030%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (25,288,303 samples, 0.45%)</title><rect x="43.0530%" y="1061" width="0.4505%" height="15" fill="rgb(229,126,4)" fg:x="2416521377" fg:w="25288303"/><text x="43.3030%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (25,288,303 samples, 0.45%)</title><rect x="43.0530%" y="1045" width="0.4505%" height="15" fill="rgb(222,92,36)" fg:x="2416521377" fg:w="25288303"/><text x="43.3030%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (21,968,336 samples, 0.39%)</title><rect x="43.1121%" y="1029" width="0.3914%" height="15" fill="rgb(216,39,41)" fg:x="2419841344" fg:w="21968336"/><text x="43.3621%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (19,681,508 samples, 0.35%)</title><rect x="43.1528%" y="1013" width="0.3506%" height="15" fill="rgb(253,127,28)" fg:x="2422128172" fg:w="19681508"/><text x="43.4028%" y="1023.50"></text></g><g><title>pthread_mutex_lock (2,843,451 samples, 0.05%)</title><rect x="43.4528%" y="997" width="0.0507%" height="15" fill="rgb(249,152,51)" fg:x="2438966229" fg:w="2843451"/><text x="43.7028%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5,185,456 samples, 0.09%)</title><rect x="43.5035%" y="1077" width="0.0924%" height="15" fill="rgb(209,123,42)" fg:x="2441809680" fg:w="5185456"/><text x="43.7535%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::device::life::ResourceMaps&lt;wgpu_hal::vulkan::Api&gt;&gt; (5,280,766 samples, 0.09%)</title><rect x="43.5959%" y="1077" width="0.0941%" height="15" fill="rgb(241,118,22)" fg:x="2446995136" fg:w="5280766"/><text x="43.8459%" y="1087.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_buffer_memory (3,373,992 samples, 0.06%)</title><rect x="43.6900%" y="1077" width="0.0601%" height="15" fill="rgb(208,25,7)" fg:x="2452275902" fg:w="3373992"/><text x="43.9400%" y="1087.50"></text></g><g><title>wgpu_core::device::UserClosures::fire (1,333,606 samples, 0.02%)</title><rect x="43.7501%" y="1077" width="0.0238%" height="15" fill="rgb(243,144,39)" fg:x="2455649894" fg:w="1333606"/><text x="44.0001%" y="1087.50"></text></g><g><title>wgpu_core::resource::BufferMapCallback::call (1,333,606 samples, 0.02%)</title><rect x="43.7501%" y="1061" width="0.0238%" height="15" fill="rgb(250,50,5)" fg:x="2455649894" fg:w="1333606"/><text x="44.0001%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,333,606 samples, 0.02%)</title><rect x="43.7501%" y="1045" width="0.0238%" height="15" fill="rgb(207,67,11)" fg:x="2455649894" fg:w="1333606"/><text x="44.0001%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,333,606 samples, 0.02%)</title><rect x="43.7501%" y="1029" width="0.0238%" height="15" fill="rgb(245,204,40)" fg:x="2455649894" fg:w="1333606"/><text x="44.0001%" y="1039.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (1,333,606 samples, 0.02%)</title><rect x="43.7501%" y="1013" width="0.0238%" height="15" fill="rgb(238,228,24)" fg:x="2455649894" fg:w="1333606"/><text x="44.0001%" y="1023.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::send (1,333,606 samples, 0.02%)</title><rect x="43.7501%" y="997" width="0.0238%" height="15" fill="rgb(217,116,22)" fg:x="2455649894" fg:w="1333606"/><text x="44.0001%" y="1007.50"></text></g><g><title>wgpu_core::device::life::ResourceMaps&lt;A&gt;::clear (2,543,058 samples, 0.05%)</title><rect x="43.7738%" y="1077" width="0.0453%" height="15" fill="rgb(234,98,12)" fg:x="2456983500" fg:w="2543058"/><text x="44.0238%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (2,543,058 samples, 0.05%)</title><rect x="43.7738%" y="1061" width="0.0453%" height="15" fill="rgb(242,170,50)" fg:x="2456983500" fg:w="2543058"/><text x="44.0238%" y="1071.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::handle_mapping (1,767,781 samples, 0.03%)</title><rect x="43.8191%" y="1061" width="0.0315%" height="15" fill="rgb(235,7,5)" fg:x="2459526558" fg:w="1767781"/><text x="44.0691%" y="1071.50"></text></g><g><title>wgpu_core::device::map_buffer (1,767,781 samples, 0.03%)</title><rect x="43.8191%" y="1045" width="0.0315%" height="15" fill="rgb(241,114,28)" fg:x="2459526558" fg:w="1767781"/><text x="44.0691%" y="1055.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (8,660,689 samples, 0.15%)</title><rect x="43.8506%" y="1061" width="0.1543%" height="15" fill="rgb(246,112,42)" fg:x="2461294339" fg:w="8660689"/><text x="44.1006%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (8,660,689 samples, 0.15%)</title><rect x="43.8506%" y="1045" width="0.1543%" height="15" fill="rgb(248,228,14)" fg:x="2461294339" fg:w="8660689"/><text x="44.1006%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (7,455,194 samples, 0.13%)</title><rect x="43.8721%" y="1029" width="0.1328%" height="15" fill="rgb(208,133,18)" fg:x="2462499834" fg:w="7455194"/><text x="44.1221%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,985,883 samples, 0.04%)</title><rect x="43.9696%" y="1013" width="0.0354%" height="15" fill="rgb(207,35,49)" fg:x="2467969145" fg:w="1985883"/><text x="44.2196%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,985,883 samples, 0.04%)</title><rect x="43.9696%" y="997" width="0.0354%" height="15" fill="rgb(205,68,36)" fg:x="2467969145" fg:w="1985883"/><text x="44.2196%" y="1007.50"></text></g><g><title>&lt;wgpu_core::resource::Texture&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3,449,097 samples, 0.06%)</title><rect x="44.0049%" y="1029" width="0.0614%" height="15" fill="rgb(245,62,40)" fg:x="2469955028" fg:w="3449097"/><text x="44.2549%" y="1039.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (3,449,097 samples, 0.06%)</title><rect x="44.0049%" y="1013" width="0.0614%" height="15" fill="rgb(228,27,24)" fg:x="2469955028" fg:w="3449097"/><text x="44.2549%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,449,097 samples, 0.06%)</title><rect x="44.0049%" y="997" width="0.0614%" height="15" fill="rgb(253,19,12)" fg:x="2469955028" fg:w="3449097"/><text x="44.2549%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,449,097 samples, 0.06%)</title><rect x="44.0049%" y="981" width="0.0614%" height="15" fill="rgb(232,28,20)" fg:x="2469955028" fg:w="3449097"/><text x="44.2549%" y="991.50"></text></g><g><title>[libc.so.6] (3,449,097 samples, 0.06%)</title><rect x="44.0049%" y="965" width="0.0614%" height="15" fill="rgb(218,35,51)" fg:x="2469955028" fg:w="3449097"/><text x="44.2549%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7,950,544 samples, 0.14%)</title><rect x="44.0049%" y="1045" width="0.1416%" height="15" fill="rgb(212,90,40)" fg:x="2469955028" fg:w="7950544"/><text x="44.2549%" y="1055.50"></text></g><g><title>&lt;wgpu_core::resource::TextureView&lt;A&gt; as core::ops::drop::Drop&gt;::drop (4,501,447 samples, 0.08%)</title><rect x="44.0664%" y="1029" width="0.0802%" height="15" fill="rgb(220,172,12)" fg:x="2473404125" fg:w="4501447"/><text x="44.3164%" y="1039.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (4,501,447 samples, 0.08%)</title><rect x="44.0664%" y="1013" width="0.0802%" height="15" fill="rgb(226,159,20)" fg:x="2473404125" fg:w="4501447"/><text x="44.3164%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,501,447 samples, 0.08%)</title><rect x="44.0664%" y="997" width="0.0802%" height="15" fill="rgb(234,205,16)" fg:x="2473404125" fg:w="4501447"/><text x="44.3164%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,501,447 samples, 0.08%)</title><rect x="44.0664%" y="981" width="0.0802%" height="15" fill="rgb(207,9,39)" fg:x="2473404125" fg:w="4501447"/><text x="44.3164%" y="991.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (21,765,968 samples, 0.39%)</title><rect x="43.8191%" y="1077" width="0.3878%" height="15" fill="rgb(249,143,15)" fg:x="2459526558" fg:w="21765968"/><text x="44.0691%" y="1087.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (11,337,498 samples, 0.20%)</title><rect x="44.0049%" y="1061" width="0.2020%" height="15" fill="rgb(253,133,29)" fg:x="2469955028" fg:w="11337498"/><text x="44.2549%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (3,386,954 samples, 0.06%)</title><rect x="44.1466%" y="1045" width="0.0603%" height="15" fill="rgb(221,187,0)" fg:x="2477905572" fg:w="3386954"/><text x="44.3966%" y="1055.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureTracker&lt;A&gt; as wgpu_core::track::ResourceTracker&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;wgpu_hal::empty::Api&gt;&gt;,wgpu_core::resource::Texture&lt;A&gt;&gt;&gt;::remove_abandoned (3,386,954 samples, 0.06%)</title><rect x="44.1466%" y="1029" width="0.0603%" height="15" fill="rgb(205,204,26)" fg:x="2477905572" fg:w="3386954"/><text x="44.3966%" y="1039.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (3,339,223 samples, 0.06%)</title><rect x="44.2069%" y="1077" width="0.0595%" height="15" fill="rgb(224,68,54)" fg:x="2481292526" fg:w="3339223"/><text x="44.4569%" y="1087.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (83,065,855 samples, 1.48%)</title><rect x="43.0002%" y="1109" width="1.4799%" height="15" fill="rgb(209,67,4)" fg:x="2413561232" fg:w="83065855"/><text x="43.2502%" y="1119.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_submit (83,065,855 samples, 1.48%)</title><rect x="43.0002%" y="1093" width="1.4799%" height="15" fill="rgb(228,229,18)" fg:x="2413561232" fg:w="83065855"/><text x="43.2502%" y="1103.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (11,995,338 samples, 0.21%)</title><rect x="44.2664%" y="1077" width="0.2137%" height="15" fill="rgb(231,89,13)" fg:x="2484631749" fg:w="11995338"/><text x="44.5164%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (11,995,338 samples, 0.21%)</title><rect x="44.2664%" y="1061" width="0.2137%" height="15" fill="rgb(210,182,18)" fg:x="2484631749" fg:w="11995338"/><text x="44.5164%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (6,169,782 samples, 0.11%)</title><rect x="44.3702%" y="1045" width="0.1099%" height="15" fill="rgb(240,105,2)" fg:x="2490457305" fg:w="6169782"/><text x="44.6202%" y="1055.50"></text></g><g><title>iced_wgpu::engine::Engine::submit (87,234,670 samples, 1.55%)</title><rect x="43.0002%" y="1125" width="1.5542%" height="15" fill="rgb(207,170,50)" fg:x="2413561232" fg:w="87234670"/><text x="43.2502%" y="1135.50"></text></g><g><title>wgpu::CommandEncoder::finish (4,168,815 samples, 0.07%)</title><rect x="44.4801%" y="1109" width="0.0743%" height="15" fill="rgb(232,133,24)" fg:x="2496627087" fg:w="4168815"/><text x="44.7301%" y="1119.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_finish (4,168,815 samples, 0.07%)</title><rect x="44.4801%" y="1093" width="0.0743%" height="15" fill="rgb(235,166,27)" fg:x="2496627087" fg:w="4168815"/><text x="44.7301%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_finish (4,168,815 samples, 0.07%)</title><rect x="44.4801%" y="1077" width="0.0743%" height="15" fill="rgb(209,19,13)" fg:x="2496627087" fg:w="4168815"/><text x="44.7301%" y="1087.50"></text></g><g><title>wgpu::Device::create_command_encoder (4,927,840 samples, 0.09%)</title><rect x="44.5544%" y="1125" width="0.0878%" height="15" fill="rgb(226,79,39)" fg:x="2500795902" fg:w="4927840"/><text x="44.8044%" y="1135.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (4,927,840 samples, 0.09%)</title><rect x="44.5544%" y="1109" width="0.0878%" height="15" fill="rgb(222,163,10)" fg:x="2500795902" fg:w="4927840"/><text x="44.8044%" y="1119.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_command_encoder (4,927,840 samples, 0.09%)</title><rect x="44.5544%" y="1093" width="0.0878%" height="15" fill="rgb(214,44,19)" fg:x="2500795902" fg:w="4927840"/><text x="44.8044%" y="1103.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_command_encoder (2,352,635 samples, 0.04%)</title><rect x="44.6003%" y="1077" width="0.0419%" height="15" fill="rgb(210,217,13)" fg:x="2503371107" fg:w="2352635"/><text x="44.8503%" y="1087.50"></text></g><g><title>wgpu_core::registry::FutureId&lt;I,T&gt;::assign (2,352,635 samples, 0.04%)</title><rect x="44.6003%" y="1061" width="0.0419%" height="15" fill="rgb(237,61,54)" fg:x="2503371107" fg:w="2352635"/><text x="44.8503%" y="1071.50"></text></g><g><title>malloc (2,352,635 samples, 0.04%)</title><rect x="44.6003%" y="1045" width="0.0419%" height="15" fill="rgb(226,184,24)" fg:x="2503371107" fg:w="2352635"/><text x="44.8503%" y="1055.50"></text></g><g><title>[libc.so.6] (2,352,635 samples, 0.04%)</title><rect x="44.6003%" y="1029" width="0.0419%" height="15" fill="rgb(223,226,4)" fg:x="2503371107" fg:w="2352635"/><text x="44.8503%" y="1039.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (3,734,138 samples, 0.07%)</title><rect x="44.6903%" y="1061" width="0.0665%" height="15" fill="rgb(210,26,41)" fg:x="2508422600" fg:w="3734138"/><text x="44.9403%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (3,734,138 samples, 0.07%)</title><rect x="44.6903%" y="1045" width="0.0665%" height="15" fill="rgb(220,221,6)" fg:x="2508422600" fg:w="3734138"/><text x="44.9403%" y="1055.50"></text></g><g><title>__libc_fcntl64 (7,412,944 samples, 0.13%)</title><rect x="44.8015%" y="949" width="0.1321%" height="15" fill="rgb(225,89,49)" fg:x="2514667165" fg:w="7412944"/><text x="45.0515%" y="959.50"></text></g><g><title>[libc.so.6] (7,412,944 samples, 0.13%)</title><rect x="44.8015%" y="933" width="0.1321%" height="15" fill="rgb(218,70,45)" fg:x="2514667165" fg:w="7412944"/><text x="45.0515%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (10,021,381 samples, 0.18%)</title><rect x="44.8015%" y="997" width="0.1785%" height="15" fill="rgb(238,166,21)" fg:x="2514667165" fg:w="10021381"/><text x="45.0515%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (10,021,381 samples, 0.18%)</title><rect x="44.8015%" y="981" width="0.1785%" height="15" fill="rgb(224,141,44)" fg:x="2514667165" fg:w="10021381"/><text x="45.0515%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (10,021,381 samples, 0.18%)</title><rect x="44.8015%" y="965" width="0.1785%" height="15" fill="rgb(230,12,49)" fg:x="2514667165" fg:w="10021381"/><text x="45.0515%" y="975.50"></text></g><g><title>fcntl@plt (2,608,437 samples, 0.05%)</title><rect x="44.9336%" y="949" width="0.0465%" height="15" fill="rgb(212,174,12)" fg:x="2522080109" fg:w="2608437"/><text x="45.1836%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (12,374,016 samples, 0.22%)</title><rect x="44.8015%" y="1013" width="0.2205%" height="15" fill="rgb(246,67,9)" fg:x="2514667165" fg:w="12374016"/><text x="45.0515%" y="1023.50"></text></g><g><title>drmSyncobjTimelineWait (2,352,635 samples, 0.04%)</title><rect x="44.9801%" y="997" width="0.0419%" height="15" fill="rgb(239,35,23)" fg:x="2524688546" fg:w="2352635"/><text x="45.2301%" y="1007.50"></text></g><g><title>wgpu::Surface::get_current_texture (25,369,789 samples, 0.45%)</title><rect x="44.6422%" y="1125" width="0.4520%" height="15" fill="rgb(211,167,0)" fg:x="2505723742" fg:w="25369789"/><text x="44.8922%" y="1135.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (25,369,789 samples, 0.45%)</title><rect x="44.6422%" y="1109" width="0.4520%" height="15" fill="rgb(225,119,45)" fg:x="2505723742" fg:w="25369789"/><text x="44.8922%" y="1119.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::surface_get_current_texture (25,369,789 samples, 0.45%)</title><rect x="44.6422%" y="1093" width="0.4520%" height="15" fill="rgb(210,162,6)" fg:x="2505723742" fg:w="25369789"/><text x="44.8922%" y="1103.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_get_current_texture (22,670,931 samples, 0.40%)</title><rect x="44.6903%" y="1077" width="0.4039%" height="15" fill="rgb(208,118,35)" fg:x="2508422600" fg:w="22670931"/><text x="44.9403%" y="1087.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (18,936,793 samples, 0.34%)</title><rect x="44.7568%" y="1061" width="0.3374%" height="15" fill="rgb(239,4,53)" fg:x="2512156738" fg:w="18936793"/><text x="45.0068%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (18,936,793 samples, 0.34%)</title><rect x="44.7568%" y="1045" width="0.3374%" height="15" fill="rgb(213,130,21)" fg:x="2512156738" fg:w="18936793"/><text x="45.0068%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (18,936,793 samples, 0.34%)</title><rect x="44.7568%" y="1029" width="0.3374%" height="15" fill="rgb(235,148,0)" fg:x="2512156738" fg:w="18936793"/><text x="45.0068%" y="1039.50"></text></g><g><title>wl_display_dispatch_queue_pending (4,052,350 samples, 0.07%)</title><rect x="45.0220%" y="1013" width="0.0722%" height="15" fill="rgb(244,224,18)" fg:x="2527041181" fg:w="4052350"/><text x="45.2720%" y="1023.50"></text></g><g><title>[libwayland-client.so.0.23.1] (4,052,350 samples, 0.07%)</title><rect x="45.0220%" y="997" width="0.0722%" height="15" fill="rgb(211,214,4)" fg:x="2527041181" fg:w="4052350"/><text x="45.2720%" y="1007.50"></text></g><g><title>[libwayland-client.so.0.23.1] (4,052,350 samples, 0.07%)</title><rect x="45.0220%" y="981" width="0.0722%" height="15" fill="rgb(206,119,25)" fg:x="2527041181" fg:w="4052350"/><text x="45.2720%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (7,567,136 samples, 0.13%)</title><rect x="45.1449%" y="1013" width="0.1348%" height="15" fill="rgb(243,93,47)" fg:x="2533939247" fg:w="7567136"/><text x="45.3949%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,269,321 samples, 0.08%)</title><rect x="45.2036%" y="997" width="0.0761%" height="15" fill="rgb(224,194,6)" fg:x="2537237062" fg:w="4269321"/><text x="45.4536%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,269,321 samples, 0.08%)</title><rect x="45.2036%" y="981" width="0.0761%" height="15" fill="rgb(243,229,6)" fg:x="2537237062" fg:w="4269321"/><text x="45.4536%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,269,321 samples, 0.08%)</title><rect x="45.2036%" y="965" width="0.0761%" height="15" fill="rgb(207,23,50)" fg:x="2537237062" fg:w="4269321"/><text x="45.4536%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,269,321 samples, 0.08%)</title><rect x="45.2036%" y="949" width="0.0761%" height="15" fill="rgb(253,192,32)" fg:x="2537237062" fg:w="4269321"/><text x="45.4536%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,269,321 samples, 0.08%)</title><rect x="45.2036%" y="933" width="0.0761%" height="15" fill="rgb(213,21,6)" fg:x="2537237062" fg:w="4269321"/><text x="45.4536%" y="943.50"></text></g><g><title>wl_display_dispatch_queue (1,782,169 samples, 0.03%)</title><rect x="45.2797%" y="1013" width="0.0318%" height="15" fill="rgb(243,151,13)" fg:x="2541506383" fg:w="1782169"/><text x="45.5297%" y="1023.50"></text></g><g><title>wl_display_prepare_read_queue (1,782,169 samples, 0.03%)</title><rect x="45.2797%" y="997" width="0.0318%" height="15" fill="rgb(233,165,41)" fg:x="2541506383" fg:w="1782169"/><text x="45.5297%" y="1007.50"></text></g><g><title>[libwayland-client.so.0.23.1] (1,994,825 samples, 0.04%)</title><rect x="45.3624%" y="997" width="0.0355%" height="15" fill="rgb(246,176,45)" fg:x="2546146121" fg:w="1994825"/><text x="45.6124%" y="1007.50"></text></g><g><title>wgpu::SurfaceTexture::present (19,527,417 samples, 0.35%)</title><rect x="45.0942%" y="1125" width="0.3479%" height="15" fill="rgb(217,170,52)" fg:x="2531093531" fg:w="19527417"/><text x="45.3442%" y="1135.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (19,527,417 samples, 0.35%)</title><rect x="45.0942%" y="1109" width="0.3479%" height="15" fill="rgb(214,203,54)" fg:x="2531093531" fg:w="19527417"/><text x="45.3442%" y="1119.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::surface_present (19,527,417 samples, 0.35%)</title><rect x="45.0942%" y="1093" width="0.3479%" height="15" fill="rgb(248,215,49)" fg:x="2531093531" fg:w="19527417"/><text x="45.3442%" y="1103.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_present (19,527,417 samples, 0.35%)</title><rect x="45.0942%" y="1077" width="0.3479%" height="15" fill="rgb(208,46,10)" fg:x="2531093531" fg:w="19527417"/><text x="45.3442%" y="1087.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (17,183,205 samples, 0.31%)</title><rect x="45.1359%" y="1061" width="0.3061%" height="15" fill="rgb(254,5,31)" fg:x="2533437743" fg:w="17183205"/><text x="45.3859%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (17,183,205 samples, 0.31%)</title><rect x="45.1359%" y="1045" width="0.3061%" height="15" fill="rgb(222,104,33)" fg:x="2533437743" fg:w="17183205"/><text x="45.3859%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (16,681,701 samples, 0.30%)</title><rect x="45.1449%" y="1029" width="0.2972%" height="15" fill="rgb(248,49,16)" fg:x="2533939247" fg:w="16681701"/><text x="45.3949%" y="1039.50"></text></g><g><title>wl_proxy_marshal (7,332,396 samples, 0.13%)</title><rect x="45.3114%" y="1013" width="0.1306%" height="15" fill="rgb(232,198,41)" fg:x="2543288552" fg:w="7332396"/><text x="45.5614%" y="1023.50"></text></g><g><title>wl_proxy_marshal_array_flags (2,480,002 samples, 0.04%)</title><rect x="45.3979%" y="997" width="0.0442%" height="15" fill="rgb(214,125,3)" fg:x="2548140946" fg:w="2480002"/><text x="45.6479%" y="1007.50"></text></g><g><title>&lt;iced_renderer::fallback::Compositor&lt;A,B&gt; as iced_graphics::compositor::Compositor&gt;::present (755,846,840 samples, 13.47%)</title><rect x="32.0602%" y="1173" width="13.4662%" height="15" fill="rgb(229,220,28)" fg:x="1799510428" fg:w="755846840"/><text x="32.3102%" y="1183.50">&lt;iced_renderer::fall..</text></g><g><title>&lt;iced_wgpu::window::compositor::Compositor as iced_graphics::compositor::Compositor&gt;::present (755,846,840 samples, 13.47%)</title><rect x="32.0602%" y="1157" width="13.4662%" height="15" fill="rgb(222,64,37)" fg:x="1799510428" fg:w="755846840"/><text x="32.3102%" y="1167.50">&lt;iced_wgpu::window::..</text></g><g><title>iced_wgpu::window::compositor::present (755,846,840 samples, 13.47%)</title><rect x="32.0602%" y="1141" width="13.4662%" height="15" fill="rgb(249,184,13)" fg:x="1799510428" fg:w="755846840"/><text x="32.3102%" y="1151.50">iced_wgpu::window::c..</text></g><g><title>wgpu::Texture::create_view (4,736,320 samples, 0.08%)</title><rect x="45.4421%" y="1125" width="0.0844%" height="15" fill="rgb(252,176,6)" fg:x="2550620948" fg:w="4736320"/><text x="45.6921%" y="1135.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_create_view (4,736,320 samples, 0.08%)</title><rect x="45.4421%" y="1109" width="0.0844%" height="15" fill="rgb(228,153,7)" fg:x="2550620948" fg:w="4736320"/><text x="45.6921%" y="1119.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::texture_create_view (4,736,320 samples, 0.08%)</title><rect x="45.4421%" y="1093" width="0.0844%" height="15" fill="rgb(242,193,5)" fg:x="2550620948" fg:w="4736320"/><text x="45.6921%" y="1103.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::texture_create_view (4,736,320 samples, 0.08%)</title><rect x="45.4421%" y="1077" width="0.0844%" height="15" fill="rgb(232,140,9)" fg:x="2550620948" fg:w="4736320"/><text x="45.6921%" y="1087.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture_view (4,736,320 samples, 0.08%)</title><rect x="45.4421%" y="1061" width="0.0844%" height="15" fill="rgb(213,222,16)" fg:x="2550620948" fg:w="4736320"/><text x="45.6921%" y="1071.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (2,741,495 samples, 0.05%)</title><rect x="45.4776%" y="1045" width="0.0488%" height="15" fill="rgb(222,75,50)" fg:x="2552615773" fg:w="2741495"/><text x="45.7276%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,741,495 samples, 0.05%)</title><rect x="45.4776%" y="1029" width="0.0488%" height="15" fill="rgb(205,180,2)" fg:x="2552615773" fg:w="2741495"/><text x="45.7276%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,741,495 samples, 0.05%)</title><rect x="45.4776%" y="1013" width="0.0488%" height="15" fill="rgb(216,34,7)" fg:x="2552615773" fg:w="2741495"/><text x="45.7276%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,741,495 samples, 0.05%)</title><rect x="45.4776%" y="997" width="0.0488%" height="15" fill="rgb(253,16,32)" fg:x="2552615773" fg:w="2741495"/><text x="45.7276%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,741,495 samples, 0.05%)</title><rect x="45.4776%" y="981" width="0.0488%" height="15" fill="rgb(208,97,28)" fg:x="2552615773" fg:w="2741495"/><text x="45.7276%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,741,495 samples, 0.05%)</title><rect x="45.4776%" y="965" width="0.0488%" height="15" fill="rgb(225,92,11)" fg:x="2552615773" fg:w="2741495"/><text x="45.7276%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="1093" width="0.0244%" height="15" fill="rgb(243,38,12)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="1103.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="1077" width="0.0244%" height="15" fill="rgb(208,139,16)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="1061" width="0.0244%" height="15" fill="rgb(227,24,9)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="1045" width="0.0244%" height="15" fill="rgb(206,62,11)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="1055.50"></text></g><g><title>wl_display_roundtrip_queue (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="1029" width="0.0244%" height="15" fill="rgb(228,134,27)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="1039.50"></text></g><g><title>wl_display_dispatch_queue_pending (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="1013" width="0.0244%" height="15" fill="rgb(205,55,33)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="1023.50"></text></g><g><title>[libwayland-client.so.0.23.1] (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="997" width="0.0244%" height="15" fill="rgb(243,75,43)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="1007.50"></text></g><g><title>[libwayland-client.so.0.23.1] (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="981" width="0.0244%" height="15" fill="rgb(223,27,42)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="991.50"></text></g><g><title>ffi_call (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="965" width="0.0244%" height="15" fill="rgb(232,189,33)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="975.50"></text></g><g><title>[libffi.so.8.2.0] (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="949" width="0.0244%" height="15" fill="rgb(210,9,39)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="959.50"></text></g><g><title>[libffi.so.8.2.0] (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="933" width="0.0244%" height="15" fill="rgb(242,85,26)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,370,879 samples, 0.02%)</title><rect x="45.5353%" y="917" width="0.0244%" height="15" fill="rgb(248,44,4)" fg:x="2555852801" fg:w="1370879"/><text x="45.7853%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (896,014 samples, 0.02%)</title><rect x="45.5597%" y="1077" width="0.0160%" height="15" fill="rgb(250,96,46)" fg:x="2557223680" fg:w="896014"/><text x="45.8097%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (896,014 samples, 0.02%)</title><rect x="45.5597%" y="1061" width="0.0160%" height="15" fill="rgb(229,116,26)" fg:x="2557223680" fg:w="896014"/><text x="45.8097%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (896,014 samples, 0.02%)</title><rect x="45.5597%" y="1045" width="0.0160%" height="15" fill="rgb(246,94,34)" fg:x="2557223680" fg:w="896014"/><text x="45.8097%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (896,014 samples, 0.02%)</title><rect x="45.5597%" y="1029" width="0.0160%" height="15" fill="rgb(251,73,21)" fg:x="2557223680" fg:w="896014"/><text x="45.8097%" y="1039.50"></text></g><g><title>cfree (896,014 samples, 0.02%)</title><rect x="45.5597%" y="1013" width="0.0160%" height="15" fill="rgb(254,121,25)" fg:x="2557223680" fg:w="896014"/><text x="45.8097%" y="1023.50"></text></g><g><title>&lt;iced_wgpu::window::compositor::Compositor as iced_graphics::compositor::Compositor&gt;::configure_surface (3,302,232 samples, 0.06%)</title><rect x="45.5265%" y="1173" width="0.0588%" height="15" fill="rgb(215,161,49)" fg:x="2555357268" fg:w="3302232"/><text x="45.7765%" y="1183.50"></text></g><g><title>wgpu::Surface::configure (3,302,232 samples, 0.06%)</title><rect x="45.5265%" y="1157" width="0.0588%" height="15" fill="rgb(221,43,13)" fg:x="2555357268" fg:w="3302232"/><text x="45.7765%" y="1167.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (3,302,232 samples, 0.06%)</title><rect x="45.5265%" y="1141" width="0.0588%" height="15" fill="rgb(249,5,37)" fg:x="2555357268" fg:w="3302232"/><text x="45.7765%" y="1151.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::surface_configure (3,302,232 samples, 0.06%)</title><rect x="45.5265%" y="1125" width="0.0588%" height="15" fill="rgb(226,25,44)" fg:x="2555357268" fg:w="3302232"/><text x="45.7765%" y="1135.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_configure (3,302,232 samples, 0.06%)</title><rect x="45.5265%" y="1109" width="0.0588%" height="15" fill="rgb(238,189,16)" fg:x="2555357268" fg:w="3302232"/><text x="45.7765%" y="1119.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (1,435,820 samples, 0.03%)</title><rect x="45.5597%" y="1093" width="0.0256%" height="15" fill="rgb(251,186,8)" fg:x="2557223680" fg:w="1435820"/><text x="45.8097%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,403,918 samples, 0.06%)</title><rect x="45.5853%" y="373" width="0.0606%" height="15" fill="rgb(254,34,31)" fg:x="2558659500" fg:w="3403918"/><text x="45.8353%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,403,918 samples, 0.06%)</title><rect x="45.5853%" y="357" width="0.0606%" height="15" fill="rgb(225,215,27)" fg:x="2558659500" fg:w="3403918"/><text x="45.8353%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (3,403,918 samples, 0.06%)</title><rect x="45.5853%" y="341" width="0.0606%" height="15" fill="rgb(221,192,48)" fg:x="2558659500" fg:w="3403918"/><text x="45.8353%" y="351.50"></text></g><g><title>cfree (3,403,918 samples, 0.06%)</title><rect x="45.5853%" y="325" width="0.0606%" height="15" fill="rgb(219,137,20)" fg:x="2558659500" fg:w="3403918"/><text x="45.8353%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,787,799 samples, 0.05%)</title><rect x="45.6914%" y="229" width="0.0497%" height="15" fill="rgb(219,84,11)" fg:x="2564617345" fg:w="2787799"/><text x="45.9414%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,787,799 samples, 0.05%)</title><rect x="45.6914%" y="213" width="0.0497%" height="15" fill="rgb(224,10,23)" fg:x="2564617345" fg:w="2787799"/><text x="45.9414%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (2,787,799 samples, 0.05%)</title><rect x="45.6914%" y="197" width="0.0497%" height="15" fill="rgb(248,22,39)" fg:x="2564617345" fg:w="2787799"/><text x="45.9414%" y="207.50"></text></g><g><title>cfree (2,787,799 samples, 0.05%)</title><rect x="45.6914%" y="181" width="0.0497%" height="15" fill="rgb(212,154,20)" fg:x="2564617345" fg:w="2787799"/><text x="45.9414%" y="191.50"></text></g><g><title>[libc.so.6] (2,787,799 samples, 0.05%)</title><rect x="45.6914%" y="165" width="0.0497%" height="15" fill="rgb(236,199,50)" fg:x="2564617345" fg:w="2787799"/><text x="45.9414%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1173" width="0.2285%" height="15" fill="rgb(211,9,17)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1157" width="0.2285%" height="15" fill="rgb(243,216,36)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1141" width="0.2285%" height="15" fill="rgb(250,2,10)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1125" width="0.2285%" height="15" fill="rgb(226,50,48)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1109" width="0.2285%" height="15" fill="rgb(243,81,16)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1093" width="0.2285%" height="15" fill="rgb(250,14,2)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1077" width="0.2285%" height="15" fill="rgb(233,135,29)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::Drain&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1061" width="0.2285%" height="15" fill="rgb(224,64,43)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1045" width="0.2285%" height="15" fill="rgb(238,84,13)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1029" width="0.2285%" height="15" fill="rgb(253,48,26)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1039.50"></text></g><g><title>iced_winit::program::run_instance::_{{closure}}::_{{closure}} (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="1013" width="0.2285%" height="15" fill="rgb(205,223,31)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1023.50"></text></g><g><title>iced_runtime::user_interface::UserInterface&lt;Message,Theme,Renderer&gt;::into_cache (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="997" width="0.2285%" height="15" fill="rgb(221,41,32)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="981" width="0.2285%" height="15" fill="rgb(213,158,31)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::widget::Widget&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="965" width="0.2285%" height="15" fill="rgb(245,126,43)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::column::Column&lt;papyrust::Message&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="949" width="0.2285%" height="15" fill="rgb(227,7,22)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="933" width="0.2285%" height="15" fill="rgb(252,90,44)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="917" width="0.2285%" height="15" fill="rgb(253,91,0)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;]&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="901" width="0.2285%" height="15" fill="rgb(252,175,49)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="885" width="0.2285%" height="15" fill="rgb(246,150,1)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::overlay::Overlay&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="869" width="0.2285%" height="15" fill="rgb(241,192,25)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::column::Column&lt;papyrust::Message&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="853" width="0.2285%" height="15" fill="rgb(239,187,11)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="837" width="0.2285%" height="15" fill="rgb(218,202,51)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="821" width="0.2285%" height="15" fill="rgb(225,176,8)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;]&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="805" width="0.2285%" height="15" fill="rgb(219,122,41)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="789" width="0.2285%" height="15" fill="rgb(248,140,20)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::overlay::Overlay&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="773" width="0.2285%" height="15" fill="rgb(245,41,37)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::container::Container&lt;papyrust::Message&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="757" width="0.2285%" height="15" fill="rgb(235,82,39)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="741" width="0.2285%" height="15" fill="rgb(230,108,42)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::widget::Widget&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="725" width="0.2285%" height="15" fill="rgb(215,150,50)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::scrollable::Scrollable&lt;papyrust::Message&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="709" width="0.2285%" height="15" fill="rgb(233,212,5)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="693" width="0.2285%" height="15" fill="rgb(245,80,22)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::widget::Widget&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="677" width="0.2285%" height="15" fill="rgb(238,129,16)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::column::Column&lt;papyrust::Message&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="661" width="0.2285%" height="15" fill="rgb(240,19,0)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="645" width="0.2285%" height="15" fill="rgb(232,42,35)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="629" width="0.2285%" height="15" fill="rgb(223,130,24)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;]&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="613" width="0.2285%" height="15" fill="rgb(237,16,22)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="597" width="0.2285%" height="15" fill="rgb(248,192,20)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::overlay::Overlay&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="581" width="0.2285%" height="15" fill="rgb(233,167,2)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::column::Column&lt;papyrust::Message&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="565" width="0.2285%" height="15" fill="rgb(252,71,44)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="549" width="0.2285%" height="15" fill="rgb(238,37,47)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="533" width="0.2285%" height="15" fill="rgb(214,202,54)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;]&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="517" width="0.2285%" height="15" fill="rgb(254,165,40)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="501" width="0.2285%" height="15" fill="rgb(246,173,38)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::overlay::Overlay&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="485" width="0.2285%" height="15" fill="rgb(215,3,27)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::row::Row&lt;papyrust::Message&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="469" width="0.2285%" height="15" fill="rgb(239,169,51)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="453" width="0.2285%" height="15" fill="rgb(212,5,25)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="437" width="0.2285%" height="15" fill="rgb(243,45,17)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;]&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="421" width="0.2285%" height="15" fill="rgb(242,97,9)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="405" width="0.2285%" height="15" fill="rgb(228,71,31)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::overlay::Overlay&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (12,823,093 samples, 0.23%)</title><rect x="45.5853%" y="389" width="0.2285%" height="15" fill="rgb(252,184,16)" fg:x="2558659500" fg:w="12823093"/><text x="45.8353%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::container::Container&lt;papyrust::Message&gt;&gt; (9,419,175 samples, 0.17%)</title><rect x="45.6459%" y="373" width="0.1678%" height="15" fill="rgb(236,169,46)" fg:x="2562063418" fg:w="9419175"/><text x="45.8959%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="357" width="0.1223%" height="15" fill="rgb(207,17,47)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::widget::Widget&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="341" width="0.1223%" height="15" fill="rgb(206,201,28)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::column::Column&lt;papyrust::Message&gt;&gt; (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="325" width="0.1223%" height="15" fill="rgb(224,184,23)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;iced_core::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="309" width="0.1223%" height="15" fill="rgb(208,139,48)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="293" width="0.1223%" height="15" fill="rgb(208,130,10)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;]&gt; (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="277" width="0.1223%" height="15" fill="rgb(211,213,45)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::overlay::element::Element&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="261" width="0.1223%" height="15" fill="rgb(235,100,30)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn iced_core::overlay::Overlay&lt;papyrust::Message,iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt;&gt; (6,865,248 samples, 0.12%)</title><rect x="45.6914%" y="245" width="0.1223%" height="15" fill="rgb(206,144,31)" fg:x="2564617345" fg:w="6865248"/><text x="45.9414%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::widget::text::Text&lt;iced_core::theme::Theme,iced_renderer::fallback::Renderer&lt;iced_wgpu::Renderer,iced_tiny_skia::Renderer&gt;&gt;&gt; (4,077,449 samples, 0.07%)</title><rect x="45.7411%" y="229" width="0.0726%" height="15" fill="rgb(224,200,26)" fg:x="2567405144" fg:w="4077449"/><text x="45.9911%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (4,077,449 samples, 0.07%)</title><rect x="45.7411%" y="213" width="0.0726%" height="15" fill="rgb(247,104,53)" fg:x="2567405144" fg:w="4077449"/><text x="45.9911%" y="223.50"></text></g><g><title>&lt;iced_core::theme::Theme as iced_widget::scrollable::Catalog&gt;::style (4,502,647 samples, 0.08%)</title><rect x="45.8138%" y="1093" width="0.0802%" height="15" fill="rgb(220,14,17)" fg:x="2571482593" fg:w="4502647"/><text x="46.0638%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (4,502,647 samples, 0.08%)</title><rect x="45.8138%" y="1077" width="0.0802%" height="15" fill="rgb(230,140,40)" fg:x="2571482593" fg:w="4502647"/><text x="46.0638%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (4,502,647 samples, 0.08%)</title><rect x="45.8138%" y="1061" width="0.0802%" height="15" fill="rgb(229,2,41)" fg:x="2571482593" fg:w="4502647"/><text x="46.0638%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,129,553 samples, 0.06%)</title><rect x="45.8940%" y="949" width="0.0558%" height="15" fill="rgb(232,89,16)" fg:x="2575985240" fg:w="3129553"/><text x="46.1440%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,129,553 samples, 0.06%)</title><rect x="45.8940%" y="933" width="0.0558%" height="15" fill="rgb(247,59,52)" fg:x="2575985240" fg:w="3129553"/><text x="46.1440%" y="943.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,129,553 samples, 0.06%)</title><rect x="45.8940%" y="917" width="0.0558%" height="15" fill="rgb(226,110,21)" fg:x="2575985240" fg:w="3129553"/><text x="46.1440%" y="927.50"></text></g><g><title>&lt;iced_core::theme::Theme as iced_core::widget::text::Catalog&gt;::style (2,267,819 samples, 0.04%)</title><rect x="45.9497%" y="917" width="0.0404%" height="15" fill="rgb(224,176,43)" fg:x="2579114793" fg:w="2267819"/><text x="46.1997%" y="927.50"></text></g><g><title>&lt;iced_core::widget::text::Text&lt;Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (4,262,644 samples, 0.08%)</title><rect x="45.9497%" y="933" width="0.0759%" height="15" fill="rgb(221,73,6)" fg:x="2579114793" fg:w="4262644"/><text x="46.1997%" y="943.50"></text></g><g><title>iced_core::widget::text::draw (1,994,825 samples, 0.04%)</title><rect x="45.9901%" y="917" width="0.0355%" height="15" fill="rgb(232,78,19)" fg:x="2581382612" fg:w="1994825"/><text x="46.2401%" y="927.50"></text></g><g><title>&lt;iced_graphics::text::paragraph::Paragraph as iced_core::text::paragraph::Paragraph&gt;::horizontal_alignment (1,994,825 samples, 0.04%)</title><rect x="45.9901%" y="901" width="0.0355%" height="15" fill="rgb(233,112,48)" fg:x="2581382612" fg:w="1994825"/><text x="46.2401%" y="911.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (15,534,372 samples, 0.28%)</title><rect x="45.8138%" y="1141" width="0.2768%" height="15" fill="rgb(243,131,47)" fg:x="2571482593" fg:w="15534372"/><text x="46.0638%" y="1151.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (15,534,372 samples, 0.28%)</title><rect x="45.8138%" y="1125" width="0.2768%" height="15" fill="rgb(226,51,1)" fg:x="2571482593" fg:w="15534372"/><text x="46.0638%" y="1135.50"></text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (15,534,372 samples, 0.28%)</title><rect x="45.8138%" y="1109" width="0.2768%" height="15" fill="rgb(247,58,7)" fg:x="2571482593" fg:w="15534372"/><text x="46.0638%" y="1119.50"></text></g><g><title>iced_core::renderer::Renderer::with_layer (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="1093" width="0.1965%" height="15" fill="rgb(209,7,32)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="1103.50"></text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw::_{{closure}} (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="1077" width="0.1965%" height="15" fill="rgb(209,39,41)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="1087.50"></text></g><g><title>iced_core::renderer::Renderer::with_translation (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="1061" width="0.1965%" height="15" fill="rgb(226,182,46)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="1071.50"></text></g><g><title>iced_core::renderer::Renderer::with_transformation (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="1045" width="0.1965%" height="15" fill="rgb(230,219,10)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="1055.50"></text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw::_{{closure}}::_{{closure}} (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="1029" width="0.1965%" height="15" fill="rgb(227,175,30)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="1039.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="1013" width="0.1965%" height="15" fill="rgb(217,2,50)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="1023.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="997" width="0.1965%" height="15" fill="rgb(229,160,0)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="1007.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="981" width="0.1965%" height="15" fill="rgb(207,78,37)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="991.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (11,031,725 samples, 0.20%)</title><rect x="45.8940%" y="965" width="0.1965%" height="15" fill="rgb(225,57,0)" fg:x="2575985240" fg:w="11031725"/><text x="46.1440%" y="975.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (7,902,172 samples, 0.14%)</title><rect x="45.9497%" y="949" width="0.1408%" height="15" fill="rgb(232,154,2)" fg:x="2579114793" fg:w="7902172"/><text x="46.1997%" y="959.50"></text></g><g><title>&lt;iced_widget::image::Image&lt;Handle&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (3,639,528 samples, 0.06%)</title><rect x="46.0257%" y="933" width="0.0648%" height="15" fill="rgb(241,212,25)" fg:x="2583377437" fg:w="3639528"/><text x="46.2757%" y="943.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (19,284,160 samples, 0.34%)</title><rect x="45.8138%" y="1157" width="0.3436%" height="15" fill="rgb(226,69,20)" fg:x="2571482593" fg:w="19284160"/><text x="46.0638%" y="1167.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (3,749,788 samples, 0.07%)</title><rect x="46.0905%" y="1141" width="0.0668%" height="15" fill="rgb(247,184,54)" fg:x="2587016965" fg:w="3749788"/><text x="46.3405%" y="1151.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (3,749,788 samples, 0.07%)</title><rect x="46.0905%" y="1125" width="0.0668%" height="15" fill="rgb(210,145,0)" fg:x="2587016965" fg:w="3749788"/><text x="46.3405%" y="1135.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (3,749,788 samples, 0.07%)</title><rect x="46.0905%" y="1109" width="0.0668%" height="15" fill="rgb(253,82,12)" fg:x="2587016965" fg:w="3749788"/><text x="46.3405%" y="1119.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (3,749,788 samples, 0.07%)</title><rect x="46.0905%" y="1093" width="0.0668%" height="15" fill="rgb(245,42,11)" fg:x="2587016965" fg:w="3749788"/><text x="46.3405%" y="1103.50"></text></g><g><title>&lt;iced_widget::button::Button&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (3,749,788 samples, 0.07%)</title><rect x="46.0905%" y="1077" width="0.0668%" height="15" fill="rgb(219,147,32)" fg:x="2587016965" fg:w="3749788"/><text x="46.3405%" y="1087.50"></text></g><g><title>&lt;iced_core::widget::text::Text&lt;Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::draw (3,749,788 samples, 0.07%)</title><rect x="46.0905%" y="1061" width="0.0668%" height="15" fill="rgb(246,12,7)" fg:x="2587016965" fg:w="3749788"/><text x="46.3405%" y="1071.50"></text></g><g><title>iced_core::widget::tree::State::downcast_ref (3,749,788 samples, 0.07%)</title><rect x="46.0905%" y="1045" width="0.0668%" height="15" fill="rgb(243,50,9)" fg:x="2587016965" fg:w="3749788"/><text x="46.3405%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,425,241 samples, 0.06%)</title><rect x="46.1573%" y="421" width="0.0610%" height="15" fill="rgb(219,149,6)" fg:x="2590766753" fg:w="3425241"/><text x="46.4073%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,425,241 samples, 0.06%)</title><rect x="46.1573%" y="405" width="0.0610%" height="15" fill="rgb(241,51,42)" fg:x="2590766753" fg:w="3425241"/><text x="46.4073%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,994,825 samples, 0.04%)</title><rect x="46.1828%" y="389" width="0.0355%" height="15" fill="rgb(226,128,27)" fg:x="2592197169" fg:w="1994825"/><text x="46.4328%" y="399.50"></text></g><g><title>iced_core::layout::Layout::children::_{{closure}} (1,994,825 samples, 0.04%)</title><rect x="46.1828%" y="373" width="0.0355%" height="15" fill="rgb(244,144,4)" fg:x="2592197169" fg:w="1994825"/><text x="46.4328%" y="383.50"></text></g><g><title>iced_core::layout::Layout::with_offset (1,994,825 samples, 0.04%)</title><rect x="46.1828%" y="357" width="0.0355%" height="15" fill="rgb(221,4,13)" fg:x="2592197169" fg:w="1994825"/><text x="46.4328%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,878,087 samples, 0.14%)</title><rect x="46.1573%" y="517" width="0.1404%" height="15" fill="rgb(208,170,28)" fg:x="2590766753" fg:w="7878087"/><text x="46.4073%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,878,087 samples, 0.14%)</title><rect x="46.1573%" y="501" width="0.1404%" height="15" fill="rgb(226,131,13)" fg:x="2590766753" fg:w="7878087"/><text x="46.4073%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (7,878,087 samples, 0.14%)</title><rect x="46.1573%" y="485" width="0.1404%" height="15" fill="rgb(215,72,41)" fg:x="2590766753" fg:w="7878087"/><text x="46.4073%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7,878,087 samples, 0.14%)</title><rect x="46.1573%" y="469" width="0.1404%" height="15" fill="rgb(243,108,20)" fg:x="2590766753" fg:w="7878087"/><text x="46.4073%" y="479.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction::_{{closure}} (7,878,087 samples, 0.14%)</title><rect x="46.1573%" y="453" width="0.1404%" height="15" fill="rgb(230,189,17)" fg:x="2590766753" fg:w="7878087"/><text x="46.4073%" y="463.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (7,878,087 samples, 0.14%)</title><rect x="46.1573%" y="437" width="0.1404%" height="15" fill="rgb(220,50,17)" fg:x="2590766753" fg:w="7878087"/><text x="46.4073%" y="447.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (4,452,846 samples, 0.08%)</title><rect x="46.2183%" y="421" width="0.0793%" height="15" fill="rgb(248,152,48)" fg:x="2594191994" fg:w="4452846"/><text x="46.4683%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (2,382,078 samples, 0.04%)</title><rect x="46.2552%" y="405" width="0.0424%" height="15" fill="rgb(244,91,11)" fg:x="2596262762" fg:w="2382078"/><text x="46.5052%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (2,382,078 samples, 0.04%)</title><rect x="46.2552%" y="389" width="0.0424%" height="15" fill="rgb(220,157,5)" fg:x="2596262762" fg:w="2382078"/><text x="46.5052%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2,382,078 samples, 0.04%)</title><rect x="46.2552%" y="373" width="0.0424%" height="15" fill="rgb(253,137,8)" fg:x="2596262762" fg:w="2382078"/><text x="46.5052%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,382,078 samples, 0.04%)</title><rect x="46.2552%" y="357" width="0.0424%" height="15" fill="rgb(217,137,51)" fg:x="2596262762" fg:w="2382078"/><text x="46.5052%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,382,078 samples, 0.04%)</title><rect x="46.2552%" y="341" width="0.0424%" height="15" fill="rgb(218,209,53)" fg:x="2596262762" fg:w="2382078"/><text x="46.5052%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2,382,078 samples, 0.04%)</title><rect x="46.2552%" y="325" width="0.0424%" height="15" fill="rgb(249,137,25)" fg:x="2596262762" fg:w="2382078"/><text x="46.5052%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,942,401 samples, 0.05%)</title><rect x="46.2977%" y="437" width="0.0524%" height="15" fill="rgb(239,155,26)" fg:x="2598644840" fg:w="2942401"/><text x="46.5477%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,942,401 samples, 0.05%)</title><rect x="46.2977%" y="421" width="0.0524%" height="15" fill="rgb(227,85,46)" fg:x="2598644840" fg:w="2942401"/><text x="46.5477%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,942,401 samples, 0.05%)</title><rect x="46.2977%" y="405" width="0.0524%" height="15" fill="rgb(251,107,43)" fg:x="2598644840" fg:w="2942401"/><text x="46.5477%" y="415.50"></text></g><g><title>iced_core::layout::Layout::children::_{{closure}} (2,942,401 samples, 0.05%)</title><rect x="46.2977%" y="389" width="0.0524%" height="15" fill="rgb(234,170,33)" fg:x="2598644840" fg:w="2942401"/><text x="46.5477%" y="399.50"></text></g><g><title>iced_core::layout::Layout::with_offset (2,942,401 samples, 0.05%)</title><rect x="46.2977%" y="373" width="0.0524%" height="15" fill="rgb(206,29,35)" fg:x="2598644840" fg:w="2942401"/><text x="46.5477%" y="383.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1157" width="0.2688%" height="15" fill="rgb(227,138,25)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1141" width="0.2688%" height="15" fill="rgb(249,131,35)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1125" width="0.2688%" height="15" fill="rgb(239,6,40)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1109" width="0.2688%" height="15" fill="rgb(246,136,47)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1093" width="0.2688%" height="15" fill="rgb(253,58,26)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1077" width="0.2688%" height="15" fill="rgb(237,141,10)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1061" width="0.2688%" height="15" fill="rgb(234,156,12)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1071.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction::_{{closure}} (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1045" width="0.2688%" height="15" fill="rgb(243,224,36)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1055.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1029" width="0.2688%" height="15" fill="rgb(205,229,51)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="1013" width="0.2688%" height="15" fill="rgb(223,189,4)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="997" width="0.2688%" height="15" fill="rgb(249,167,54)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="981" width="0.2688%" height="15" fill="rgb(218,34,28)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="965" width="0.2688%" height="15" fill="rgb(232,109,42)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="949" width="0.2688%" height="15" fill="rgb(248,214,46)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="933" width="0.2688%" height="15" fill="rgb(244,216,40)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="943.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction::_{{closure}} (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="917" width="0.2688%" height="15" fill="rgb(231,226,31)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="927.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="901" width="0.2688%" height="15" fill="rgb(238,38,43)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="911.50"></text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="885" width="0.2688%" height="15" fill="rgb(208,88,43)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="895.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="869" width="0.2688%" height="15" fill="rgb(205,136,37)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="853" width="0.2688%" height="15" fill="rgb(237,34,14)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="837" width="0.2688%" height="15" fill="rgb(236,193,44)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="821" width="0.2688%" height="15" fill="rgb(231,48,10)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="805" width="0.2688%" height="15" fill="rgb(213,141,34)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="789" width="0.2688%" height="15" fill="rgb(249,130,34)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="773" width="0.2688%" height="15" fill="rgb(219,42,41)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="757" width="0.2688%" height="15" fill="rgb(224,100,54)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="767.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction::_{{closure}} (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="741" width="0.2688%" height="15" fill="rgb(229,200,27)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="751.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="725" width="0.2688%" height="15" fill="rgb(217,118,10)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="709" width="0.2688%" height="15" fill="rgb(206,22,3)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="693" width="0.2688%" height="15" fill="rgb(232,163,46)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="677" width="0.2688%" height="15" fill="rgb(206,95,13)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="661" width="0.2688%" height="15" fill="rgb(253,154,18)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="645" width="0.2688%" height="15" fill="rgb(219,32,23)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="629" width="0.2688%" height="15" fill="rgb(230,191,45)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="613" width="0.2688%" height="15" fill="rgb(229,64,36)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="623.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction::_{{closure}} (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="597" width="0.2688%" height="15" fill="rgb(205,129,25)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="607.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="581" width="0.2688%" height="15" fill="rgb(254,112,7)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="565" width="0.2688%" height="15" fill="rgb(226,53,48)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="549" width="0.2688%" height="15" fill="rgb(214,153,38)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (15,089,809 samples, 0.27%)</title><rect x="46.1573%" y="533" width="0.2688%" height="15" fill="rgb(243,101,7)" fg:x="2590766753" fg:w="15089809"/><text x="46.4073%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,211,722 samples, 0.13%)</title><rect x="46.2977%" y="517" width="0.1285%" height="15" fill="rgb(240,140,22)" fg:x="2598644840" fg:w="7211722"/><text x="46.5477%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7,211,722 samples, 0.13%)</title><rect x="46.2977%" y="501" width="0.1285%" height="15" fill="rgb(235,114,2)" fg:x="2598644840" fg:w="7211722"/><text x="46.5477%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7,211,722 samples, 0.13%)</title><rect x="46.2977%" y="485" width="0.1285%" height="15" fill="rgb(242,59,12)" fg:x="2598644840" fg:w="7211722"/><text x="46.5477%" y="495.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction::_{{closure}} (7,211,722 samples, 0.13%)</title><rect x="46.2977%" y="469" width="0.1285%" height="15" fill="rgb(252,134,9)" fg:x="2598644840" fg:w="7211722"/><text x="46.5477%" y="479.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (7,211,722 samples, 0.13%)</title><rect x="46.2977%" y="453" width="0.1285%" height="15" fill="rgb(236,4,44)" fg:x="2598644840" fg:w="7211722"/><text x="46.5477%" y="463.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::mouse_interaction (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="437" width="0.0761%" height="15" fill="rgb(254,172,41)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="421" width="0.0761%" height="15" fill="rgb(244,63,20)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="405" width="0.0761%" height="15" fill="rgb(250,73,31)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="389" width="0.0761%" height="15" fill="rgb(241,38,36)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="373" width="0.0761%" height="15" fill="rgb(245,211,2)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="357" width="0.0761%" height="15" fill="rgb(206,120,28)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="341" width="0.0761%" height="15" fill="rgb(211,59,34)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="325" width="0.0761%" height="15" fill="rgb(233,168,5)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="335.50"></text></g><g><title>iced_core::layout::Layout::children::_{{closure}} (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="309" width="0.0761%" height="15" fill="rgb(234,33,13)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="319.50"></text></g><g><title>iced_core::layout::Layout::with_offset (4,269,321 samples, 0.08%)</title><rect x="46.3501%" y="293" width="0.0761%" height="15" fill="rgb(231,150,26)" fg:x="2601587241" fg:w="4269321"/><text x="46.6001%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,000,117 samples, 0.07%)</title><rect x="46.4262%" y="789" width="0.0713%" height="15" fill="rgb(217,191,4)" fg:x="2605856562" fg:w="4000117"/><text x="46.6762%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,000,117 samples, 0.07%)</title><rect x="46.4262%" y="773" width="0.0713%" height="15" fill="rgb(246,198,38)" fg:x="2605856562" fg:w="4000117"/><text x="46.6762%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2,989,543 samples, 0.05%)</title><rect x="46.5420%" y="229" width="0.0533%" height="15" fill="rgb(245,64,37)" fg:x="2612358883" fg:w="2989543"/><text x="46.7920%" y="239.50"></text></g><g><title>iced_runtime::user_interface::UserInterface&lt;Message,Theme,Renderer&gt;::draw (48,676,169 samples, 0.87%)</title><rect x="45.8138%" y="1173" width="0.8672%" height="15" fill="rgb(250,30,36)" fg:x="2571482593" fg:w="48676169"/><text x="46.0638%" y="1183.50"></text></g><g><title>iced_core::overlay::from_children (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1157" width="0.2548%" height="15" fill="rgb(217,86,53)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1141" width="0.2548%" height="15" fill="rgb(228,157,16)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1125" width="0.2548%" height="15" fill="rgb(217,59,31)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1109" width="0.2548%" height="15" fill="rgb(237,138,41)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1093" width="0.2548%" height="15" fill="rgb(227,91,49)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1077" width="0.2548%" height="15" fill="rgb(247,21,44)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1061" width="0.2548%" height="15" fill="rgb(219,210,51)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1045" width="0.2548%" height="15" fill="rgb(209,140,6)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1029" width="0.2548%" height="15" fill="rgb(221,188,24)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="1013" width="0.2548%" height="15" fill="rgb(232,154,20)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1023.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="997" width="0.2548%" height="15" fill="rgb(244,137,50)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="1007.50"></text></g><g><title>iced_core::overlay::from_children (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="981" width="0.2548%" height="15" fill="rgb(225,185,43)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="965" width="0.2548%" height="15" fill="rgb(213,205,38)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="949" width="0.2548%" height="15" fill="rgb(236,73,12)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="933" width="0.2548%" height="15" fill="rgb(235,219,13)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="917" width="0.2548%" height="15" fill="rgb(218,59,36)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="901" width="0.2548%" height="15" fill="rgb(205,110,39)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="885" width="0.2548%" height="15" fill="rgb(218,206,42)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="869" width="0.2548%" height="15" fill="rgb(248,125,24)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="853" width="0.2548%" height="15" fill="rgb(242,28,27)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="837" width="0.2548%" height="15" fill="rgb(216,228,15)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="847.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="821" width="0.2548%" height="15" fill="rgb(235,116,46)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="831.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (14,302,200 samples, 0.25%)</title><rect x="46.4262%" y="805" width="0.2548%" height="15" fill="rgb(224,18,32)" fg:x="2605856562" fg:w="14302200"/><text x="46.6762%" y="815.50"></text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="789" width="0.1835%" height="15" fill="rgb(252,5,12)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="799.50"></text></g><g><title>iced_core::overlay::from_children (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="773" width="0.1835%" height="15" fill="rgb(251,36,5)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="757" width="0.1835%" height="15" fill="rgb(217,53,14)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="741" width="0.1835%" height="15" fill="rgb(215,86,45)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="725" width="0.1835%" height="15" fill="rgb(242,169,11)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="709" width="0.1835%" height="15" fill="rgb(211,213,45)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="693" width="0.1835%" height="15" fill="rgb(205,88,11)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="677" width="0.1835%" height="15" fill="rgb(252,69,26)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="661" width="0.1835%" height="15" fill="rgb(246,123,37)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="645" width="0.1835%" height="15" fill="rgb(212,205,5)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="629" width="0.1835%" height="15" fill="rgb(253,148,0)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="639.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="613" width="0.1835%" height="15" fill="rgb(239,22,4)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="623.50"></text></g><g><title>iced_core::overlay::from_children (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="597" width="0.1835%" height="15" fill="rgb(226,26,53)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="581" width="0.1835%" height="15" fill="rgb(225,229,45)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="565" width="0.1835%" height="15" fill="rgb(220,60,37)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="549" width="0.1835%" height="15" fill="rgb(217,180,35)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="533" width="0.1835%" height="15" fill="rgb(229,7,53)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="517" width="0.1835%" height="15" fill="rgb(254,137,3)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="501" width="0.1835%" height="15" fill="rgb(215,140,41)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="485" width="0.1835%" height="15" fill="rgb(250,80,15)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="469" width="0.1835%" height="15" fill="rgb(252,191,6)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="453" width="0.1835%" height="15" fill="rgb(246,217,18)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="463.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="437" width="0.1835%" height="15" fill="rgb(223,93,7)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="447.50"></text></g><g><title>iced_core::overlay::from_children (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="421" width="0.1835%" height="15" fill="rgb(225,55,52)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="405" width="0.1835%" height="15" fill="rgb(240,31,24)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="389" width="0.1835%" height="15" fill="rgb(205,56,52)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="373" width="0.1835%" height="15" fill="rgb(246,146,12)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="357" width="0.1835%" height="15" fill="rgb(239,84,36)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="341" width="0.1835%" height="15" fill="rgb(207,41,40)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="325" width="0.1835%" height="15" fill="rgb(241,179,25)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="309" width="0.1835%" height="15" fill="rgb(210,0,34)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="293" width="0.1835%" height="15" fill="rgb(225,217,29)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="277" width="0.1835%" height="15" fill="rgb(216,191,38)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="287.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="261" width="0.1835%" height="15" fill="rgb(232,140,52)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="271.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (10,302,083 samples, 0.18%)</title><rect x="46.4974%" y="245" width="0.1835%" height="15" fill="rgb(223,158,51)" fg:x="2609856679" fg:w="10302083"/><text x="46.7474%" y="255.50"></text></g><g><title>iced_core::overlay::from_children (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="229" width="0.0857%" height="15" fill="rgb(235,29,51)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="213" width="0.0857%" height="15" fill="rgb(215,181,18)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="197" width="0.0857%" height="15" fill="rgb(227,125,34)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="181" width="0.0857%" height="15" fill="rgb(230,197,49)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="165" width="0.0857%" height="15" fill="rgb(239,141,16)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="149" width="0.0857%" height="15" fill="rgb(225,105,43)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="133" width="0.0857%" height="15" fill="rgb(214,131,14)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,810,336 samples, 0.09%)</title><rect x="46.5953%" y="117" width="0.0857%" height="15" fill="rgb(229,177,11)" fg:x="2615348426" fg:w="4810336"/><text x="46.8453%" y="127.50"></text></g><g><title>alloc::vec::from_elem (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1157" width="0.0629%" height="15" fill="rgb(231,180,14)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1167.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1141" width="0.0629%" height="15" fill="rgb(232,88,2)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1125" width="0.0629%" height="15" fill="rgb(205,220,8)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1109" width="0.0629%" height="15" fill="rgb(225,23,53)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1093" width="0.0629%" height="15" fill="rgb(213,62,29)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1077" width="0.0629%" height="15" fill="rgb(227,75,7)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1061" width="0.0629%" height="15" fill="rgb(207,105,14)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1045" width="0.0629%" height="15" fill="rgb(245,62,29)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1029" width="0.0629%" height="15" fill="rgb(236,202,4)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1039.50"></text></g><g><title>malloc (3,528,336 samples, 0.06%)</title><rect x="46.6810%" y="1013" width="0.0629%" height="15" fill="rgb(250,67,1)" fg:x="2620158762" fg:w="3528336"/><text x="46.9310%" y="1023.50"></text></g><g><title>&lt;iced_core::event::Event as core::clone::Clone&gt;::clone (5,405,782 samples, 0.10%)</title><rect x="46.8162%" y="869" width="0.0963%" height="15" fill="rgb(253,115,44)" fg:x="2627748151" fg:w="5405782"/><text x="47.0662%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,657,466 samples, 0.05%)</title><rect x="46.9878%" y="437" width="0.0473%" height="15" fill="rgb(251,139,18)" fg:x="2637380612" fg:w="2657466"/><text x="47.2378%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,657,466 samples, 0.05%)</title><rect x="46.9878%" y="421" width="0.0473%" height="15" fill="rgb(218,22,32)" fg:x="2637380612" fg:w="2657466"/><text x="47.2378%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="997" width="0.4274%" height="15" fill="rgb(243,53,5)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="1007.50"></text></g><g><title>iced_runtime::user_interface::UserInterface&lt;Message,Theme,Renderer&gt;::update::_{{closure}} (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="981" width="0.4274%" height="15" fill="rgb(227,56,16)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="991.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="965" width="0.4274%" height="15" fill="rgb(245,53,0)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="949" width="0.4274%" height="15" fill="rgb(216,170,35)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="933" width="0.4274%" height="15" fill="rgb(211,200,8)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="917" width="0.4274%" height="15" fill="rgb(228,204,44)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="901" width="0.4274%" height="15" fill="rgb(214,121,17)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="911.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event::_{{closure}} (23,991,592 samples, 0.43%)</title><rect x="46.8162%" y="885" width="0.4274%" height="15" fill="rgb(233,64,38)" fg:x="2627748151" fg:w="23991592"/><text x="47.0662%" y="895.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="869" width="0.3311%" height="15" fill="rgb(253,54,19)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="853" width="0.3311%" height="15" fill="rgb(253,94,18)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="837" width="0.3311%" height="15" fill="rgb(227,57,52)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="821" width="0.3311%" height="15" fill="rgb(230,228,50)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="805" width="0.3311%" height="15" fill="rgb(217,205,27)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="815.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event::_{{closure}} (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="789" width="0.3311%" height="15" fill="rgb(252,71,50)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="799.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="773" width="0.3311%" height="15" fill="rgb(209,86,4)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="783.50"></text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (18,585,810 samples, 0.33%)</title><rect x="46.9125%" y="757" width="0.3311%" height="15" fill="rgb(229,94,0)" fg:x="2633153933" fg:w="18585810"/><text x="47.1625%" y="767.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="741" width="0.3056%" height="15" fill="rgb(252,223,21)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="725" width="0.3056%" height="15" fill="rgb(230,210,4)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="709" width="0.3056%" height="15" fill="rgb(240,149,38)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="693" width="0.3056%" height="15" fill="rgb(254,105,20)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="677" width="0.3056%" height="15" fill="rgb(253,87,46)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="687.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event::_{{closure}} (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="661" width="0.3056%" height="15" fill="rgb(253,116,33)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="671.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="645" width="0.3056%" height="15" fill="rgb(229,198,5)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="629" width="0.3056%" height="15" fill="rgb(242,38,37)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="613" width="0.3056%" height="15" fill="rgb(242,69,53)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="597" width="0.3056%" height="15" fill="rgb(249,80,16)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="581" width="0.3056%" height="15" fill="rgb(206,128,11)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="591.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event::_{{closure}} (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="565" width="0.3056%" height="15" fill="rgb(212,35,20)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="575.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="549" width="0.3056%" height="15" fill="rgb(236,79,13)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="533" width="0.3056%" height="15" fill="rgb(233,123,3)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="517" width="0.3056%" height="15" fill="rgb(214,93,52)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (17,155,394 samples, 0.31%)</title><rect x="46.9380%" y="501" width="0.3056%" height="15" fill="rgb(251,37,40)" fg:x="2634584349" fg:w="17155394"/><text x="47.1880%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (14,359,131 samples, 0.26%)</title><rect x="46.9878%" y="485" width="0.2558%" height="15" fill="rgb(227,80,54)" fg:x="2637380612" fg:w="14359131"/><text x="47.2378%" y="495.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event::_{{closure}} (14,359,131 samples, 0.26%)</title><rect x="46.9878%" y="469" width="0.2558%" height="15" fill="rgb(254,48,11)" fg:x="2637380612" fg:w="14359131"/><text x="47.2378%" y="479.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (14,359,131 samples, 0.26%)</title><rect x="46.9878%" y="453" width="0.2558%" height="15" fill="rgb(235,193,26)" fg:x="2637380612" fg:w="14359131"/><text x="47.2378%" y="463.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event (11,701,665 samples, 0.21%)</title><rect x="47.0351%" y="437" width="0.2085%" height="15" fill="rgb(229,99,21)" fg:x="2640038078" fg:w="11701665"/><text x="47.2851%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,701,665 samples, 0.21%)</title><rect x="47.0351%" y="421" width="0.2085%" height="15" fill="rgb(211,140,41)" fg:x="2640038078" fg:w="11701665"/><text x="47.2851%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,701,665 samples, 0.21%)</title><rect x="47.0351%" y="405" width="0.2085%" height="15" fill="rgb(240,227,30)" fg:x="2640038078" fg:w="11701665"/><text x="47.2851%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (11,701,665 samples, 0.21%)</title><rect x="47.0351%" y="389" width="0.2085%" height="15" fill="rgb(215,224,45)" fg:x="2640038078" fg:w="11701665"/><text x="47.2851%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (11,701,665 samples, 0.21%)</title><rect x="47.0351%" y="373" width="0.2085%" height="15" fill="rgb(206,123,31)" fg:x="2640038078" fg:w="11701665"/><text x="47.2851%" y="383.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::on_event::_{{closure}} (11,701,665 samples, 0.21%)</title><rect x="47.0351%" y="357" width="0.2085%" height="15" fill="rgb(210,138,16)" fg:x="2640038078" fg:w="11701665"/><text x="47.2851%" y="367.50"></text></g><g><title>&lt;iced_core::event::Event as core::clone::Clone&gt;::clone (8,758,276 samples, 0.16%)</title><rect x="47.0876%" y="341" width="0.1560%" height="15" fill="rgb(228,57,28)" fg:x="2642981467" fg:w="8758276"/><text x="47.3376%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28,554,149 samples, 0.51%)</title><rect x="46.7438%" y="1157" width="0.5087%" height="15" fill="rgb(242,170,10)" fg:x="2623687098" fg:w="28554149"/><text x="46.9938%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28,554,149 samples, 0.51%)</title><rect x="46.7438%" y="1141" width="0.5087%" height="15" fill="rgb(228,214,39)" fg:x="2623687098" fg:w="28554149"/><text x="46.9938%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28,554,149 samples, 0.51%)</title><rect x="46.7438%" y="1125" width="0.5087%" height="15" fill="rgb(218,179,33)" fg:x="2623687098" fg:w="28554149"/><text x="46.9938%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28,554,149 samples, 0.51%)</title><rect x="46.7438%" y="1109" width="0.5087%" height="15" fill="rgb(235,193,39)" fg:x="2623687098" fg:w="28554149"/><text x="46.9938%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24,493,096 samples, 0.44%)</title><rect x="46.8162%" y="1093" width="0.4364%" height="15" fill="rgb(219,221,36)" fg:x="2627748151" fg:w="24493096"/><text x="47.0662%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (24,493,096 samples, 0.44%)</title><rect x="46.8162%" y="1077" width="0.4364%" height="15" fill="rgb(248,218,19)" fg:x="2627748151" fg:w="24493096"/><text x="47.0662%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24,493,096 samples, 0.44%)</title><rect x="46.8162%" y="1061" width="0.4364%" height="15" fill="rgb(205,50,9)" fg:x="2627748151" fg:w="24493096"/><text x="47.0662%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24,493,096 samples, 0.44%)</title><rect x="46.8162%" y="1045" width="0.4364%" height="15" fill="rgb(238,81,28)" fg:x="2627748151" fg:w="24493096"/><text x="47.0662%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24,493,096 samples, 0.44%)</title><rect x="46.8162%" y="1029" width="0.4364%" height="15" fill="rgb(235,110,19)" fg:x="2627748151" fg:w="24493096"/><text x="47.0662%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (24,493,096 samples, 0.44%)</title><rect x="46.8162%" y="1013" width="0.4364%" height="15" fill="rgb(214,7,14)" fg:x="2627748151" fg:w="24493096"/><text x="47.0662%" y="1023.50"></text></g><g><title>iced_core::element::Element&lt;Message,Theme,Renderer&gt;::as_widget_mut (1,994,825 samples, 0.04%)</title><rect x="47.2526%" y="1157" width="0.0355%" height="15" fill="rgb(211,77,3)" fg:x="2652241247" fg:w="1994825"/><text x="47.5026%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsMut&lt;T&gt;&gt;::as_mut (1,994,825 samples, 0.04%)</title><rect x="47.2526%" y="1141" width="0.0355%" height="15" fill="rgb(229,5,9)" fg:x="2652241247" fg:w="1994825"/><text x="47.5026%" y="1151.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (1,834,246 samples, 0.03%)</title><rect x="47.3236%" y="981" width="0.0327%" height="15" fill="rgb(225,90,11)" fg:x="2656230897" fg:w="1834246"/><text x="47.5736%" y="991.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (1,834,246 samples, 0.03%)</title><rect x="47.3236%" y="965" width="0.0327%" height="15" fill="rgb(242,56,8)" fg:x="2656230897" fg:w="1834246"/><text x="47.5736%" y="975.50"></text></g><g><title>iced_core::element::Element&lt;Message,Theme,Renderer&gt;::as_widget_mut (2,470,935 samples, 0.04%)</title><rect x="47.3563%" y="981" width="0.0440%" height="15" fill="rgb(249,212,39)" fg:x="2658065143" fg:w="2470935"/><text x="47.6063%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsMut&lt;T&gt;&gt;::as_mut (2,470,935 samples, 0.04%)</title><rect x="47.3563%" y="965" width="0.0440%" height="15" fill="rgb(236,90,9)" fg:x="2658065143" fg:w="2470935"/><text x="47.6063%" y="975.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (1,966,146 samples, 0.04%)</title><rect x="47.4615%" y="421" width="0.0350%" height="15" fill="rgb(206,88,35)" fg:x="2663969518" fg:w="1966146"/><text x="47.7115%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,966,146 samples, 0.04%)</title><rect x="47.4615%" y="405" width="0.0350%" height="15" fill="rgb(205,126,30)" fg:x="2663969518" fg:w="1966146"/><text x="47.7115%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,966,146 samples, 0.04%)</title><rect x="47.4615%" y="389" width="0.0350%" height="15" fill="rgb(230,176,12)" fg:x="2663969518" fg:w="1966146"/><text x="47.7115%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,966,146 samples, 0.04%)</title><rect x="47.4615%" y="373" width="0.0350%" height="15" fill="rgb(243,19,9)" fg:x="2663969518" fg:w="1966146"/><text x="47.7115%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,966,146 samples, 0.04%)</title><rect x="47.4615%" y="357" width="0.0350%" height="15" fill="rgb(245,171,17)" fg:x="2663969518" fg:w="1966146"/><text x="47.7115%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,966,146 samples, 0.04%)</title><rect x="47.4615%" y="341" width="0.0350%" height="15" fill="rgb(227,52,21)" fg:x="2663969518" fg:w="1966146"/><text x="47.7115%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,966,146 samples, 0.04%)</title><rect x="47.4615%" y="325" width="0.0350%" height="15" fill="rgb(238,69,14)" fg:x="2663969518" fg:w="1966146"/><text x="47.7115%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,333,382 samples, 0.02%)</title><rect x="47.4965%" y="293" width="0.0238%" height="15" fill="rgb(241,156,39)" fg:x="2665935664" fg:w="1333382"/><text x="47.7465%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,333,382 samples, 0.02%)</title><rect x="47.4965%" y="277" width="0.0238%" height="15" fill="rgb(212,227,28)" fg:x="2665935664" fg:w="1333382"/><text x="47.7465%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1,333,382 samples, 0.02%)</title><rect x="47.4965%" y="261" width="0.0238%" height="15" fill="rgb(209,118,27)" fg:x="2665935664" fg:w="1333382"/><text x="47.7465%" y="271.50"></text></g><g><title>iced_core::layout::Layout::children::_{{closure}} (1,333,382 samples, 0.02%)</title><rect x="47.4965%" y="245" width="0.0238%" height="15" fill="rgb(226,102,5)" fg:x="2665935664" fg:w="1333382"/><text x="47.7465%" y="255.50"></text></g><g><title>iced_core::layout::Layout::with_offset (1,333,382 samples, 0.02%)</title><rect x="47.4965%" y="229" width="0.0238%" height="15" fill="rgb(223,34,3)" fg:x="2665935664" fg:w="1333382"/><text x="47.7465%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,316,661 samples, 0.09%)</title><rect x="47.5445%" y="229" width="0.0947%" height="15" fill="rgb(221,81,38)" fg:x="2668627322" fg:w="5316661"/><text x="47.7945%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,316,661 samples, 0.09%)</title><rect x="47.5445%" y="213" width="0.0947%" height="15" fill="rgb(236,219,28)" fg:x="2668627322" fg:w="5316661"/><text x="47.7945%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,077,334 samples, 0.04%)</title><rect x="47.6022%" y="197" width="0.0370%" height="15" fill="rgb(213,200,14)" fg:x="2671866649" fg:w="2077334"/><text x="47.8522%" y="207.50"></text></g><g><title>iced_core::layout::Layout::children::_{{closure}} (2,077,334 samples, 0.04%)</title><rect x="47.6022%" y="181" width="0.0370%" height="15" fill="rgb(240,33,19)" fg:x="2671866649" fg:w="2077334"/><text x="47.8522%" y="191.50"></text></g><g><title>iced_core::layout::Layout::with_offset (2,077,334 samples, 0.04%)</title><rect x="47.6022%" y="165" width="0.0370%" height="15" fill="rgb(233,113,27)" fg:x="2671866649" fg:w="2077334"/><text x="47.8522%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,923,157 samples, 0.09%)</title><rect x="47.7769%" y="101" width="0.0877%" height="15" fill="rgb(220,221,18)" fg:x="2681672885" fg:w="4923157"/><text x="48.0269%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,923,157 samples, 0.09%)</title><rect x="47.7769%" y="85" width="0.0877%" height="15" fill="rgb(238,92,8)" fg:x="2681672885" fg:w="4923157"/><text x="48.0269%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4,923,157 samples, 0.09%)</title><rect x="47.7769%" y="69" width="0.0877%" height="15" fill="rgb(222,164,16)" fg:x="2681672885" fg:w="4923157"/><text x="48.0269%" y="79.50"></text></g><g><title>iced_core::layout::Layout::children::_{{closure}} (4,923,157 samples, 0.09%)</title><rect x="47.7769%" y="53" width="0.0877%" height="15" fill="rgb(241,119,3)" fg:x="2681672885" fg:w="4923157"/><text x="48.0269%" y="63.50"></text></g><g><title>iced_core::layout::Layout::with_offset (4,923,157 samples, 0.09%)</title><rect x="47.7769%" y="37" width="0.0877%" height="15" fill="rgb(241,44,8)" fg:x="2681672885" fg:w="4923157"/><text x="48.0269%" y="47.50"></text></g><g><title>iced_runtime::user_interface::UserInterface&lt;Message,Theme,Renderer&gt;::update (75,188,765 samples, 1.34%)</title><rect x="46.6810%" y="1173" width="1.3396%" height="15" fill="rgb(230,36,40)" fg:x="2620158762" fg:w="75188765"/><text x="46.9310%" y="1183.50"></text></g><g><title>iced_core::overlay::from_children (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1157" width="0.7324%" height="15" fill="rgb(243,16,36)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1141" width="0.7324%" height="15" fill="rgb(231,4,26)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1125" width="0.7324%" height="15" fill="rgb(240,9,31)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1109" width="0.7324%" height="15" fill="rgb(207,173,15)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1093" width="0.7324%" height="15" fill="rgb(224,192,53)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1077" width="0.7324%" height="15" fill="rgb(223,67,28)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1061" width="0.7324%" height="15" fill="rgb(211,20,47)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1045" width="0.7324%" height="15" fill="rgb(240,228,2)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1029" width="0.7324%" height="15" fill="rgb(248,151,12)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="1013" width="0.7324%" height="15" fill="rgb(244,8,39)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1023.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (41,111,455 samples, 0.73%)</title><rect x="47.2881%" y="997" width="0.7324%" height="15" fill="rgb(222,26,8)" fg:x="2654236072" fg:w="41111455"/><text x="47.5381%" y="1007.50"></text></g><g><title>iced_core::overlay::from_children (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="981" width="0.6202%" height="15" fill="rgb(213,106,44)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="965" width="0.6202%" height="15" fill="rgb(214,129,20)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="949" width="0.6202%" height="15" fill="rgb(212,32,13)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="933" width="0.6202%" height="15" fill="rgb(208,168,33)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="917" width="0.6202%" height="15" fill="rgb(231,207,8)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="901" width="0.6202%" height="15" fill="rgb(235,219,23)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="885" width="0.6202%" height="15" fill="rgb(226,216,26)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="869" width="0.6202%" height="15" fill="rgb(239,137,16)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="853" width="0.6202%" height="15" fill="rgb(207,12,36)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="837" width="0.6202%" height="15" fill="rgb(210,214,24)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="847.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="821" width="0.6202%" height="15" fill="rgb(206,56,30)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="831.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="805" width="0.6202%" height="15" fill="rgb(228,143,26)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="815.50"></text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="789" width="0.6202%" height="15" fill="rgb(216,218,46)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="799.50"></text></g><g><title>iced_core::overlay::from_children (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="773" width="0.6202%" height="15" fill="rgb(206,6,19)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="757" width="0.6202%" height="15" fill="rgb(239,177,51)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="741" width="0.6202%" height="15" fill="rgb(216,55,25)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="725" width="0.6202%" height="15" fill="rgb(231,163,29)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="709" width="0.6202%" height="15" fill="rgb(232,149,50)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="693" width="0.6202%" height="15" fill="rgb(223,142,48)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="677" width="0.6202%" height="15" fill="rgb(245,83,23)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="661" width="0.6202%" height="15" fill="rgb(224,63,2)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="645" width="0.6202%" height="15" fill="rgb(218,65,53)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="629" width="0.6202%" height="15" fill="rgb(221,84,29)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="639.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="613" width="0.6202%" height="15" fill="rgb(234,0,32)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="623.50"></text></g><g><title>iced_core::overlay::from_children (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="597" width="0.6202%" height="15" fill="rgb(206,20,16)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="581" width="0.6202%" height="15" fill="rgb(244,172,18)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="565" width="0.6202%" height="15" fill="rgb(254,133,1)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="549" width="0.6202%" height="15" fill="rgb(222,206,41)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="533" width="0.6202%" height="15" fill="rgb(212,3,42)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="517" width="0.6202%" height="15" fill="rgb(241,11,4)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="501" width="0.6202%" height="15" fill="rgb(205,19,26)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34,811,449 samples, 0.62%)</title><rect x="47.4003%" y="485" width="0.6202%" height="15" fill="rgb(210,179,32)" fg:x="2660536078" fg:w="34811449"/><text x="47.6503%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (31,378,009 samples, 0.56%)</title><rect x="47.4615%" y="469" width="0.5590%" height="15" fill="rgb(227,116,49)" fg:x="2663969518" fg:w="31378009"/><text x="47.7115%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31,378,009 samples, 0.56%)</title><rect x="47.4615%" y="453" width="0.5590%" height="15" fill="rgb(211,146,6)" fg:x="2663969518" fg:w="31378009"/><text x="47.7115%" y="463.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (31,378,009 samples, 0.56%)</title><rect x="47.4615%" y="437" width="0.5590%" height="15" fill="rgb(219,44,39)" fg:x="2663969518" fg:w="31378009"/><text x="47.7115%" y="447.50"></text></g><g><title>iced_core::overlay::from_children (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="421" width="0.5240%" height="15" fill="rgb(234,128,11)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="405" width="0.5240%" height="15" fill="rgb(220,183,53)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="389" width="0.5240%" height="15" fill="rgb(213,219,32)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="373" width="0.5240%" height="15" fill="rgb(232,156,16)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="357" width="0.5240%" height="15" fill="rgb(246,135,34)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="341" width="0.5240%" height="15" fill="rgb(241,99,0)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="325" width="0.5240%" height="15" fill="rgb(222,103,45)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29,411,863 samples, 0.52%)</title><rect x="47.4965%" y="309" width="0.5240%" height="15" fill="rgb(212,57,4)" fg:x="2665935664" fg:w="29411863"/><text x="47.7465%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (28,078,481 samples, 0.50%)</title><rect x="47.5203%" y="293" width="0.5002%" height="15" fill="rgb(215,68,47)" fg:x="2667269046" fg:w="28078481"/><text x="47.7703%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (28,078,481 samples, 0.50%)</title><rect x="47.5203%" y="277" width="0.5002%" height="15" fill="rgb(230,84,2)" fg:x="2667269046" fg:w="28078481"/><text x="47.7703%" y="287.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (28,078,481 samples, 0.50%)</title><rect x="47.5203%" y="261" width="0.5002%" height="15" fill="rgb(220,102,14)" fg:x="2667269046" fg:w="28078481"/><text x="47.7703%" y="271.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::overlay (28,078,481 samples, 0.50%)</title><rect x="47.5203%" y="245" width="0.5002%" height="15" fill="rgb(240,10,32)" fg:x="2667269046" fg:w="28078481"/><text x="47.7703%" y="255.50"></text></g><g><title>iced_core::overlay::from_children (21,403,544 samples, 0.38%)</title><rect x="47.6392%" y="229" width="0.3813%" height="15" fill="rgb(215,47,27)" fg:x="2673943983" fg:w="21403544"/><text x="47.8892%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17,687,114 samples, 0.32%)</title><rect x="47.7054%" y="213" width="0.3151%" height="15" fill="rgb(233,188,43)" fg:x="2677660413" fg:w="17687114"/><text x="47.9554%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17,687,114 samples, 0.32%)</title><rect x="47.7054%" y="197" width="0.3151%" height="15" fill="rgb(253,190,1)" fg:x="2677660413" fg:w="17687114"/><text x="47.9554%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,687,114 samples, 0.32%)</title><rect x="47.7054%" y="181" width="0.3151%" height="15" fill="rgb(206,114,52)" fg:x="2677660413" fg:w="17687114"/><text x="47.9554%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17,687,114 samples, 0.32%)</title><rect x="47.7054%" y="165" width="0.3151%" height="15" fill="rgb(233,120,37)" fg:x="2677660413" fg:w="17687114"/><text x="47.9554%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,687,114 samples, 0.32%)</title><rect x="47.7054%" y="149" width="0.3151%" height="15" fill="rgb(214,52,39)" fg:x="2677660413" fg:w="17687114"/><text x="47.9554%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (17,687,114 samples, 0.32%)</title><rect x="47.7054%" y="133" width="0.3151%" height="15" fill="rgb(223,80,29)" fg:x="2677660413" fg:w="17687114"/><text x="47.9554%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17,687,114 samples, 0.32%)</title><rect x="47.7054%" y="117" width="0.3151%" height="15" fill="rgb(230,101,40)" fg:x="2677660413" fg:w="17687114"/><text x="47.9554%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (8,751,485 samples, 0.16%)</title><rect x="47.8646%" y="101" width="0.1559%" height="15" fill="rgb(219,211,8)" fg:x="2686596042" fg:w="8751485"/><text x="48.1146%" y="111.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,751,485 samples, 0.16%)</title><rect x="47.8646%" y="85" width="0.1559%" height="15" fill="rgb(252,126,28)" fg:x="2686596042" fg:w="8751485"/><text x="48.1146%" y="95.50"></text></g><g><title>iced_core::overlay::from_children::_{{closure}} (8,751,485 samples, 0.16%)</title><rect x="47.8646%" y="69" width="0.1559%" height="15" fill="rgb(215,56,38)" fg:x="2686596042" fg:w="8751485"/><text x="48.1146%" y="79.50"></text></g><g><title>iced_core::element::Element&lt;Message,Theme,Renderer&gt;::as_widget_mut (8,751,485 samples, 0.16%)</title><rect x="47.8646%" y="53" width="0.1559%" height="15" fill="rgb(249,55,44)" fg:x="2686596042" fg:w="8751485"/><text x="48.1146%" y="63.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsMut&lt;T&gt;&gt;::as_mut (8,751,485 samples, 0.16%)</title><rect x="47.8646%" y="37" width="0.1559%" height="15" fill="rgb(220,221,32)" fg:x="2686596042" fg:w="8751485"/><text x="48.1146%" y="47.50"></text></g><g><title>iced_widget::column::Column&lt;Message,Theme,Renderer&gt;::push (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="837" width="0.0260%" height="15" fill="rgb(212,216,41)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="821" width="0.0260%" height="15" fill="rgb(228,213,43)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="831.50"></text></g><g><title>iced_widget::column::&lt;impl core::convert::From&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt;&gt; for iced_core::element::Element&lt;Message,Theme,Renderer&gt;&gt;::from (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="805" width="0.0260%" height="15" fill="rgb(211,31,26)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="815.50"></text></g><g><title>iced_core::element::Element&lt;Message,Theme,Renderer&gt;::new (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="789" width="0.0260%" height="15" fill="rgb(229,202,19)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="773" width="0.0260%" height="15" fill="rgb(229,105,46)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="757" width="0.0260%" height="15" fill="rgb(235,108,1)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="741" width="0.0260%" height="15" fill="rgb(245,111,35)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="725" width="0.0260%" height="15" fill="rgb(219,185,31)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="709" width="0.0260%" height="15" fill="rgb(214,4,43)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="719.50"></text></g><g><title>malloc (1,459,043 samples, 0.03%)</title><rect x="48.0205%" y="693" width="0.0260%" height="15" fill="rgb(235,227,40)" fg:x="2695347527" fg:w="1459043"/><text x="48.2705%" y="703.50"></text></g><g><title>iced_widget::row::Row&lt;Message,Theme,Renderer&gt;::extend (3,685,961 samples, 0.07%)</title><rect x="48.0989%" y="789" width="0.0657%" height="15" fill="rgb(230,88,30)" fg:x="2699745899" fg:w="3685961"/><text x="48.3489%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,685,961 samples, 0.07%)</title><rect x="48.0989%" y="773" width="0.0657%" height="15" fill="rgb(216,217,1)" fg:x="2699745899" fg:w="3685961"/><text x="48.3489%" y="783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,685,961 samples, 0.07%)</title><rect x="48.0989%" y="757" width="0.0657%" height="15" fill="rgb(248,139,50)" fg:x="2699745899" fg:w="3685961"/><text x="48.3489%" y="767.50"></text></g><g><title>iced_widget::row::Row&lt;Message,Theme,Renderer&gt;::push (3,685,961 samples, 0.07%)</title><rect x="48.0989%" y="741" width="0.0657%" height="15" fill="rgb(233,1,21)" fg:x="2699745899" fg:w="3685961"/><text x="48.3489%" y="751.50"></text></g><g><title>iced_core::length::Length::enclose (3,685,961 samples, 0.07%)</title><rect x="48.0989%" y="725" width="0.0657%" height="15" fill="rgb(215,183,12)" fg:x="2699745899" fg:w="3685961"/><text x="48.3489%" y="735.50"></text></g><g><title>iced_widget::row::Row&lt;Message,Theme,Renderer&gt;::with_children (9,509,507 samples, 0.17%)</title><rect x="48.0465%" y="805" width="0.1694%" height="15" fill="rgb(229,104,42)" fg:x="2696806570" fg:w="9509507"/><text x="48.2965%" y="815.50"></text></g><g><title>iced_widget::row::Row&lt;Message,Theme,Renderer&gt;::with_capacity (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="789" width="0.0514%" height="15" fill="rgb(243,34,48)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="773" width="0.0514%" height="15" fill="rgb(239,11,44)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="757" width="0.0514%" height="15" fill="rgb(231,98,35)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="741" width="0.0514%" height="15" fill="rgb(233,28,25)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="725" width="0.0514%" height="15" fill="rgb(234,123,11)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="709" width="0.0514%" height="15" fill="rgb(220,69,3)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="693" width="0.0514%" height="15" fill="rgb(214,64,36)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="677" width="0.0514%" height="15" fill="rgb(211,138,32)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="661" width="0.0514%" height="15" fill="rgb(213,118,47)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="671.50"></text></g><g><title>malloc (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="645" width="0.0514%" height="15" fill="rgb(243,124,49)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="655.50"></text></g><g><title>[libc.so.6] (2,884,217 samples, 0.05%)</title><rect x="48.1646%" y="629" width="0.0514%" height="15" fill="rgb(221,30,28)" fg:x="2703431860" fg:w="2884217"/><text x="48.4146%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="789" width="0.0554%" height="15" fill="rgb(246,37,13)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="799.50"></text></g><g><title>iced_widget::container::&lt;impl core::convert::From&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt;&gt; for iced_core::element::Element&lt;Message,Theme,Renderer&gt;&gt;::from (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="773" width="0.0554%" height="15" fill="rgb(249,66,14)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="783.50"></text></g><g><title>iced_core::element::Element&lt;Message,Theme,Renderer&gt;::new (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="757" width="0.0554%" height="15" fill="rgb(213,166,5)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="741" width="0.0554%" height="15" fill="rgb(221,66,24)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="725" width="0.0554%" height="15" fill="rgb(210,132,17)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="709" width="0.0554%" height="15" fill="rgb(243,202,5)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="693" width="0.0554%" height="15" fill="rgb(233,70,48)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="703.50"></text></g><g><title>alloc::alloc::alloc (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="677" width="0.0554%" height="15" fill="rgb(238,41,26)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="687.50"></text></g><g><title>malloc (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="661" width="0.0554%" height="15" fill="rgb(241,19,31)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="671.50"></text></g><g><title>[libc.so.6] (3,110,766 samples, 0.06%)</title><rect x="48.2160%" y="645" width="0.0554%" height="15" fill="rgb(214,76,10)" fg:x="2706316077" fg:w="3110766"/><text x="48.4660%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,576,080 samples, 0.06%)</title><rect x="48.2714%" y="709" width="0.0637%" height="15" fill="rgb(254,202,22)" fg:x="2709426843" fg:w="3576080"/><text x="48.5214%" y="719.50"></text></g><g><title>malloc (3,576,080 samples, 0.06%)</title><rect x="48.2714%" y="693" width="0.0637%" height="15" fill="rgb(214,72,24)" fg:x="2709426843" fg:w="3576080"/><text x="48.5214%" y="703.50"></text></g><g><title>iced_widget::column::Column&lt;Message,Theme,Renderer&gt;::push (6,483,779 samples, 0.12%)</title><rect x="48.2714%" y="789" width="0.1155%" height="15" fill="rgb(221,92,46)" fg:x="2709426843" fg:w="6483779"/><text x="48.5214%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6,483,779 samples, 0.12%)</title><rect x="48.2714%" y="773" width="0.1155%" height="15" fill="rgb(246,13,50)" fg:x="2709426843" fg:w="6483779"/><text x="48.5214%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6,483,779 samples, 0.12%)</title><rect x="48.2714%" y="757" width="0.1155%" height="15" fill="rgb(240,165,38)" fg:x="2709426843" fg:w="6483779"/><text x="48.5214%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (6,483,779 samples, 0.12%)</title><rect x="48.2714%" y="741" width="0.1155%" height="15" fill="rgb(241,24,51)" fg:x="2709426843" fg:w="6483779"/><text x="48.5214%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6,483,779 samples, 0.12%)</title><rect x="48.2714%" y="725" width="0.1155%" height="15" fill="rgb(227,51,44)" fg:x="2709426843" fg:w="6483779"/><text x="48.5214%" y="735.50"></text></g><g><title>alloc::raw_vec::layout_array (2,907,699 samples, 0.05%)</title><rect x="48.3351%" y="709" width="0.0518%" height="15" fill="rgb(231,121,3)" fg:x="2713002923" fg:w="2907699"/><text x="48.5851%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2,907,699 samples, 0.05%)</title><rect x="48.3351%" y="693" width="0.0518%" height="15" fill="rgb(245,3,41)" fg:x="2713002923" fg:w="2907699"/><text x="48.5851%" y="703.50"></text></g><g><title>&lt;iced::program::Program::run_with::Instance&lt;P,I&gt; as iced_winit::program::Program&gt;::view (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="965" width="0.4287%" height="15" fill="rgb(214,13,26)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="975.50"></text></g><g><title>&lt;iced::program::with_theme::WithTheme&lt;P,F&gt; as iced::program::Program&gt;::view (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="949" width="0.4287%" height="15" fill="rgb(252,75,11)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="959.50"></text></g><g><title>&lt;iced::program::with_title::WithTitle&lt;P,Title&gt; as iced::program::Program&gt;::view (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="933" width="0.4287%" height="15" fill="rgb(218,226,17)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="943.50"></text></g><g><title>&lt;iced::application::application::Instance&lt;State,Message,Theme,Renderer,Update,View&gt; as iced::program::Program&gt;::view (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="917" width="0.4287%" height="15" fill="rgb(248,89,38)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="927.50"></text></g><g><title>&lt;T as iced::application::View&lt;State,Message,Theme,Renderer&gt;&gt;::view (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="901" width="0.4287%" height="15" fill="rgb(237,73,46)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="885" width="0.4287%" height="15" fill="rgb(242,78,33)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="895.50"></text></g><g><title>papyrust::Papyrust::view (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="869" width="0.4287%" height="15" fill="rgb(235,60,3)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="879.50"></text></g><g><title>papyrust::ui::view::build (24,060,289 samples, 0.43%)</title><rect x="48.0205%" y="853" width="0.4287%" height="15" fill="rgb(216,172,19)" fg:x="2695347527" fg:w="24060289"/><text x="48.2705%" y="863.50"></text></g><g><title>papyrust::ui::library::build (22,601,246 samples, 0.40%)</title><rect x="48.0465%" y="837" width="0.4027%" height="15" fill="rgb(227,6,42)" fg:x="2696806570" fg:w="22601246"/><text x="48.2965%" y="847.50"></text></g><g><title>papyrust::ui::view::create_grid (22,601,246 samples, 0.40%)</title><rect x="48.0465%" y="821" width="0.4027%" height="15" fill="rgb(223,207,42)" fg:x="2696806570" fg:w="22601246"/><text x="48.2965%" y="831.50"></text></g><g><title>papyrust::ui::view::render_item (13,091,739 samples, 0.23%)</title><rect x="48.2160%" y="805" width="0.2332%" height="15" fill="rgb(246,138,30)" fg:x="2706316077" fg:w="13091739"/><text x="48.4660%" y="815.50"></text></g><g><title>papyrust::ui::view::create_preview (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="789" width="0.0623%" height="15" fill="rgb(251,199,47)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="773" width="0.0623%" height="15" fill="rgb(228,218,44)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="783.50"></text></g><g><title>iced_widget::image::&lt;impl core::convert::From&lt;iced_widget::image::Image&lt;Handle&gt;&gt; for iced_core::element::Element&lt;Message,Theme,Renderer&gt;&gt;::from (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="757" width="0.0623%" height="15" fill="rgb(220,68,6)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="767.50"></text></g><g><title>iced_core::element::Element&lt;Message,Theme,Renderer&gt;::new (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="741" width="0.0623%" height="15" fill="rgb(240,60,26)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="725" width="0.0623%" height="15" fill="rgb(211,200,19)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="709" width="0.0623%" height="15" fill="rgb(242,145,30)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="693" width="0.0623%" height="15" fill="rgb(225,64,13)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="677" width="0.0623%" height="15" fill="rgb(218,103,35)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="687.50"></text></g><g><title>alloc::alloc::alloc (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="661" width="0.0623%" height="15" fill="rgb(216,93,46)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="671.50"></text></g><g><title>malloc (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="645" width="0.0623%" height="15" fill="rgb(225,159,27)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="655.50"></text></g><g><title>[libc.so.6] (3,497,194 samples, 0.06%)</title><rect x="48.3869%" y="629" width="0.0623%" height="15" fill="rgb(225,204,11)" fg:x="2715910622" fg:w="3497194"/><text x="48.6369%" y="639.50"></text></g><g><title>iced_core::padding::Padding::fit (4,134,986 samples, 0.07%)</title><rect x="48.4492%" y="597" width="0.0737%" height="15" fill="rgb(205,56,4)" fg:x="2719407816" fg:w="4134986"/><text x="48.6992%" y="607.50"></text></g><g><title>&lt;cosmic_text::font::fallback::FontFallbackIter as core::iter::traits::iterator::Iterator&gt;::next (3,056,541 samples, 0.05%)</title><rect x="48.5229%" y="309" width="0.0545%" height="15" fill="rgb(206,6,35)" fg:x="2723542802" fg:w="3056541"/><text x="48.7729%" y="319.50"></text></g><g><title>fontdb::Database::face (3,056,541 samples, 0.05%)</title><rect x="48.5229%" y="293" width="0.0545%" height="15" fill="rgb(247,73,52)" fg:x="2723542802" fg:w="3056541"/><text x="48.7729%" y="303.50"></text></g><g><title>&lt;iced_core::widget::text::Text&lt;Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="533" width="0.1029%" height="15" fill="rgb(246,97,4)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="543.50"></text></g><g><title>iced_core::widget::text::layout (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="517" width="0.1029%" height="15" fill="rgb(212,37,15)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="527.50"></text></g><g><title>iced_core::layout::sized (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="501" width="0.1029%" height="15" fill="rgb(208,130,40)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="511.50"></text></g><g><title>iced_core::widget::text::layout::_{{closure}} (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="485" width="0.1029%" height="15" fill="rgb(236,55,29)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="495.50"></text></g><g><title>iced_core::text::paragraph::Plain&lt;P&gt;::update (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="469" width="0.1029%" height="15" fill="rgb(209,156,45)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="479.50"></text></g><g><title>&lt;iced_graphics::text::paragraph::Paragraph as iced_core::text::paragraph::Paragraph&gt;::with_text (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="453" width="0.1029%" height="15" fill="rgb(249,107,4)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="463.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_text (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="437" width="0.1029%" height="15" fill="rgb(227,7,13)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="447.50"></text></g><g><title>cosmic_text::buffer::Buffer::shape_until_scroll (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="421" width="0.1029%" height="15" fill="rgb(250,129,14)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="431.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout_in_buffer (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="405" width="0.1029%" height="15" fill="rgb(229,92,13)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="415.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::shape_in_buffer (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="389" width="0.1029%" height="15" fill="rgb(245,98,39)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="399.50"></text></g><g><title>cosmic_text::shape::ShapeLine::new_in_buffer (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="373" width="0.1029%" height="15" fill="rgb(234,135,48)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="383.50"></text></g><g><title>cosmic_text::shape::ShapeSpan::new_in_buffer (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="357" width="0.1029%" height="15" fill="rgb(230,98,28)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="367.50"></text></g><g><title>cosmic_text::shape::ShapeWord::new_in_buffer (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="341" width="0.1029%" height="15" fill="rgb(223,121,0)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="351.50"></text></g><g><title>cosmic_text::shape::Shaping::run (5,778,261 samples, 0.10%)</title><rect x="48.5229%" y="325" width="0.1029%" height="15" fill="rgb(234,173,33)" fg:x="2723542802" fg:w="5778261"/><text x="48.7729%" y="335.50"></text></g><g><title>swash::&lt;impl swash::font::FontRef&gt;::metrics (2,721,720 samples, 0.05%)</title><rect x="48.5773%" y="309" width="0.0485%" height="15" fill="rgb(245,47,8)" fg:x="2726599343" fg:w="2721720"/><text x="48.8273%" y="319.50"></text></g><g><title>swash::metrics::MetricsProxy::from_font (2,721,720 samples, 0.05%)</title><rect x="48.5773%" y="293" width="0.0485%" height="15" fill="rgb(205,17,20)" fg:x="2726599343" fg:w="2721720"/><text x="48.8273%" y="303.50"></text></g><g><title>swash::internal::RawFont::table_range (2,721,720 samples, 0.05%)</title><rect x="48.5773%" y="277" width="0.0485%" height="15" fill="rgb(232,151,16)" fg:x="2726599343" fg:w="2721720"/><text x="48.8273%" y="287.50"></text></g><g><title>cosmic_text::buffer::Buffer::new (1,597,225 samples, 0.03%)</title><rect x="48.6258%" y="357" width="0.0285%" height="15" fill="rgb(208,30,32)" fg:x="2729321063" fg:w="1597225"/><text x="48.8758%" y="367.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_text (1,597,225 samples, 0.03%)</title><rect x="48.6258%" y="341" width="0.0285%" height="15" fill="rgb(254,26,3)" fg:x="2729321063" fg:w="1597225"/><text x="48.8758%" y="351.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_metrics_and_size (1,836,440 samples, 0.03%)</title><rect x="48.6543%" y="357" width="0.0327%" height="15" fill="rgb(240,177,30)" fg:x="2730918288" fg:w="1836440"/><text x="48.9043%" y="367.50"></text></g><g><title>cosmic_text::buffer::Buffer::relayout (1,836,440 samples, 0.03%)</title><rect x="48.6543%" y="341" width="0.0327%" height="15" fill="rgb(248,76,44)" fg:x="2730918288" fg:w="1836440"/><text x="48.9043%" y="351.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout_in_buffer (1,836,440 samples, 0.03%)</title><rect x="48.6543%" y="325" width="0.0327%" height="15" fill="rgb(241,186,54)" fg:x="2730918288" fg:w="1836440"/><text x="48.9043%" y="335.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer (1,836,440 samples, 0.03%)</title><rect x="48.6543%" y="309" width="0.0327%" height="15" fill="rgb(249,171,29)" fg:x="2730918288" fg:w="1836440"/><text x="48.9043%" y="319.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="533" width="0.2258%" height="15" fill="rgb(237,151,44)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="543.50"></text></g><g><title>iced_widget::container::layout (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="517" width="0.2258%" height="15" fill="rgb(228,174,30)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="527.50"></text></g><g><title>iced_core::layout::positioned (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="501" width="0.2258%" height="15" fill="rgb(252,14,37)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="511.50"></text></g><g><title>iced_widget::container::layout::_{{closure}} (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="485" width="0.2258%" height="15" fill="rgb(207,111,40)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="495.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="469" width="0.2258%" height="15" fill="rgb(248,171,54)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="479.50"></text></g><g><title>&lt;iced_core::widget::text::Text&lt;Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="453" width="0.2258%" height="15" fill="rgb(211,127,2)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="463.50"></text></g><g><title>iced_core::widget::text::layout (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="437" width="0.2258%" height="15" fill="rgb(236,87,47)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="447.50"></text></g><g><title>iced_core::layout::sized (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="421" width="0.2258%" height="15" fill="rgb(223,190,45)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="431.50"></text></g><g><title>iced_core::widget::text::layout::_{{closure}} (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="405" width="0.2258%" height="15" fill="rgb(215,5,16)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="415.50"></text></g><g><title>iced_core::text::paragraph::Plain&lt;P&gt;::update (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="389" width="0.2258%" height="15" fill="rgb(252,82,33)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="399.50"></text></g><g><title>&lt;iced_graphics::text::paragraph::Paragraph as iced_core::text::paragraph::Paragraph&gt;::with_text (12,676,725 samples, 0.23%)</title><rect x="48.6258%" y="373" width="0.2258%" height="15" fill="rgb(247,213,44)" fg:x="2729321063" fg:w="12676725"/><text x="48.8758%" y="383.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_text (9,243,060 samples, 0.16%)</title><rect x="48.6870%" y="357" width="0.1647%" height="15" fill="rgb(205,196,44)" fg:x="2732754728" fg:w="9243060"/><text x="48.9370%" y="367.50"></text></g><g><title>cosmic_text::buffer::Buffer::shape_until_scroll (9,243,060 samples, 0.16%)</title><rect x="48.6870%" y="341" width="0.1647%" height="15" fill="rgb(237,96,54)" fg:x="2732754728" fg:w="9243060"/><text x="48.9370%" y="351.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout_in_buffer (9,243,060 samples, 0.16%)</title><rect x="48.6870%" y="325" width="0.1647%" height="15" fill="rgb(230,113,34)" fg:x="2732754728" fg:w="9243060"/><text x="48.9370%" y="335.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::shape_in_buffer (9,243,060 samples, 0.16%)</title><rect x="48.6870%" y="309" width="0.1647%" height="15" fill="rgb(221,224,12)" fg:x="2732754728" fg:w="9243060"/><text x="48.9370%" y="319.50"></text></g><g><title>cosmic_text::shape::ShapeLine::new_in_buffer (9,243,060 samples, 0.16%)</title><rect x="48.6870%" y="293" width="0.1647%" height="15" fill="rgb(219,112,44)" fg:x="2732754728" fg:w="9243060"/><text x="48.9370%" y="303.50"></text></g><g><title>cosmic_text::shape::ShapeSpan::new_in_buffer (9,243,060 samples, 0.16%)</title><rect x="48.6870%" y="277" width="0.1647%" height="15" fill="rgb(210,31,13)" fg:x="2732754728" fg:w="9243060"/><text x="48.9370%" y="287.50"></text></g><g><title>cosmic_text::shape::ShapeWord::new_in_buffer (6,534,483 samples, 0.12%)</title><rect x="48.7352%" y="261" width="0.1164%" height="15" fill="rgb(230,25,16)" fg:x="2735463305" fg:w="6534483"/><text x="48.9852%" y="271.50"></text></g><g><title>cosmic_text::shape::Shaping::run (6,534,483 samples, 0.12%)</title><rect x="48.7352%" y="245" width="0.1164%" height="15" fill="rgb(246,108,53)" fg:x="2735463305" fg:w="6534483"/><text x="48.9852%" y="255.50"></text></g><g><title>&lt;cosmic_text::font::fallback::FontFallbackIter as core::iter::traits::iterator::Iterator&gt;::next (3,697,605 samples, 0.07%)</title><rect x="48.7858%" y="229" width="0.0659%" height="15" fill="rgb(241,172,50)" fg:x="2738300183" fg:w="3697605"/><text x="49.0358%" y="239.50"></text></g><g><title>cosmic_text::font::system::FontSystem::get_font (3,697,605 samples, 0.07%)</title><rect x="48.7858%" y="213" width="0.0659%" height="15" fill="rgb(235,141,10)" fg:x="2738300183" fg:w="3697605"/><text x="49.0358%" y="223.50"></text></g><g><title>__libc_calloc (1,682,135 samples, 0.03%)</title><rect x="48.8517%" y="421" width="0.0300%" height="15" fill="rgb(220,174,43)" fg:x="2741997788" fg:w="1682135"/><text x="49.1017%" y="431.50"></text></g><g><title>cfree (4,235,915 samples, 0.08%)</title><rect x="48.8816%" y="421" width="0.0755%" height="15" fill="rgb(215,181,40)" fg:x="2743679923" fg:w="4235915"/><text x="49.1316%" y="431.50"></text></g><g><title>std::io::Read::read_exact (10,597,635 samples, 0.19%)</title><rect x="48.9571%" y="421" width="0.1888%" height="15" fill="rgb(230,97,2)" fg:x="2747915838" fg:w="10597635"/><text x="49.2071%" y="431.50"></text></g><g><title>[libc.so.6] (4,297,749 samples, 0.08%)</title><rect x="49.2044%" y="405" width="0.0766%" height="15" fill="rgb(211,25,27)" fg:x="2761794986" fg:w="4297749"/><text x="49.4544%" y="415.50"></text></g><g><title>__rustc::__rdl_alloc (1,060,082 samples, 0.02%)</title><rect x="49.4200%" y="373" width="0.0189%" height="15" fill="rgb(230,87,26)" fg:x="2773899130" fg:w="1060082"/><text x="49.6700%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (11,828,736 samples, 0.21%)</title><rect x="49.2809%" y="405" width="0.2107%" height="15" fill="rgb(227,160,17)" fg:x="2766092735" fg:w="11828736"/><text x="49.5309%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (6,288,017 samples, 0.11%)</title><rect x="49.3797%" y="389" width="0.1120%" height="15" fill="rgb(244,85,34)" fg:x="2771633454" fg:w="6288017"/><text x="49.6297%" y="399.50"></text></g><g><title>malloc (2,962,259 samples, 0.05%)</title><rect x="49.4389%" y="373" width="0.0528%" height="15" fill="rgb(207,70,0)" fg:x="2774959212" fg:w="2962259"/><text x="49.6889%" y="383.50"></text></g><g><title>exif::reader::Reader::read_from_container (70,586,406 samples, 1.26%)</title><rect x="48.8517%" y="437" width="1.2576%" height="15" fill="rgb(223,129,7)" fg:x="2741997788" fg:w="70586406"/><text x="49.1017%" y="447.50"></text></g><g><title>std::io::read_until (54,070,721 samples, 0.96%)</title><rect x="49.1459%" y="421" width="0.9633%" height="15" fill="rgb(246,105,7)" fg:x="2758513473" fg:w="54070721"/><text x="49.3959%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_aligned (34,662,723 samples, 0.62%)</title><rect x="49.4917%" y="405" width="0.6176%" height="15" fill="rgb(215,154,42)" fg:x="2777921471" fg:w="34662723"/><text x="49.7417%" y="415.50"></text></g><g><title>cfree (1,786,089 samples, 0.03%)</title><rect x="50.1092%" y="421" width="0.0318%" height="15" fill="rgb(220,215,30)" fg:x="2812584194" fg:w="1786089"/><text x="50.3592%" y="431.50"></text></g><g><title>image::dynimage::DynamicImage::into_rgba8 (285,071,710 samples, 5.08%)</title><rect x="50.1092%" y="437" width="5.0789%" height="15" fill="rgb(228,81,51)" fg:x="2812584194" fg:w="285071710"/><text x="50.3592%" y="447.50">image:..</text></g><g><title>image::dynimage::DynamicImage::to_rgba8 (283,285,621 samples, 5.05%)</title><rect x="50.1411%" y="421" width="5.0470%" height="15" fill="rgb(247,71,54)" fg:x="2814370283" fg:w="283285621"/><text x="50.3911%" y="431.50">image:..</text></g><g><title>&lt;image::buffer_::ImageBuffer&lt;FromType,Container&gt; as image::buffer_::ConvertBuffer&lt;image::buffer_::ImageBuffer&lt;ToType,alloc::vec::Vec&lt;&lt;ToType as image::traits::Pixel&gt;::Subpixel&gt;&gt;&gt;&gt;::convert (283,285,621 samples, 5.05%)</title><rect x="50.1411%" y="405" width="5.0470%" height="15" fill="rgb(234,176,34)" fg:x="2814370283" fg:w="283285621"/><text x="50.3911%" y="415.50">&lt;image..</text></g><g><title>[libc.so.6] (14,489,098 samples, 0.26%)</title><rect x="54.9300%" y="389" width="0.2581%" height="15" fill="rgb(241,103,54)" fg:x="3083166806" fg:w="14489098"/><text x="55.1800%" y="399.50"></text></g><g><title>&lt;image::codecs::gif::GifDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (85,698,629 samples, 1.53%)</title><rect x="55.1881%" y="373" width="1.5268%" height="15" fill="rgb(228,22,34)" fg:x="3097655904" fg:w="85698629"/><text x="55.4381%" y="383.50"></text></g><g><title>gif::reader::converter::PixelConverter::read_into_buffer (85,698,629 samples, 1.53%)</title><rect x="55.1881%" y="357" width="1.5268%" height="15" fill="rgb(241,179,48)" fg:x="3097655904" fg:w="85698629"/><text x="55.4381%" y="367.50"></text></g><g><title>gif::reader::converter::PixelConverter::fill_buffer (85,698,629 samples, 1.53%)</title><rect x="55.1881%" y="341" width="1.5268%" height="15" fill="rgb(235,167,37)" fg:x="3097655904" fg:w="85698629"/><text x="55.4381%" y="351.50"></text></g><g><title>gif::reader::Decoder&lt;R&gt;::read_into_buffer::_{{closure}} (66,600,415 samples, 1.19%)</title><rect x="55.5284%" y="325" width="1.1866%" height="15" fill="rgb(213,109,30)" fg:x="3116754118" fg:w="66600415"/><text x="55.7784%" y="335.50"></text></g><g><title>gif::reader::ReadDecoder&lt;R&gt;::decode_next_bytes (66,600,415 samples, 1.19%)</title><rect x="55.5284%" y="309" width="1.1866%" height="15" fill="rgb(222,172,16)" fg:x="3116754118" fg:w="66600415"/><text x="55.7784%" y="319.50"></text></g><g><title>gif::reader::ReadDecoder&lt;R&gt;::decode_next (66,600,415 samples, 1.19%)</title><rect x="55.5284%" y="293" width="1.1866%" height="15" fill="rgb(233,192,5)" fg:x="3116754118" fg:w="66600415"/><text x="55.7784%" y="303.50"></text></g><g><title>gif::reader::decoder::StreamingDecoder::update (66,600,415 samples, 1.19%)</title><rect x="55.5284%" y="277" width="1.1866%" height="15" fill="rgb(247,189,41)" fg:x="3116754118" fg:w="66600415"/><text x="55.7784%" y="287.50"></text></g><g><title>weezl::decode::Decoder::decode_bytes (66,600,415 samples, 1.19%)</title><rect x="55.5284%" y="261" width="1.1866%" height="15" fill="rgb(218,134,47)" fg:x="3116754118" fg:w="66600415"/><text x="55.7784%" y="271.50"></text></g><g><title>&lt;weezl::decode::DecodeState&lt;C,CgC&gt; as weezl::decode::Stateful&gt;::advance (66,600,415 samples, 1.19%)</title><rect x="55.5284%" y="245" width="1.1866%" height="15" fill="rgb(216,29,3)" fg:x="3116754118" fg:w="66600415"/><text x="55.7784%" y="255.50"></text></g><g><title>[libc.so.6] (7,254,227 samples, 0.13%)</title><rect x="56.5857%" y="229" width="0.1292%" height="15" fill="rgb(246,140,12)" fg:x="3176100306" fg:w="7254227"/><text x="56.8357%" y="239.50"></text></g><g><title>[libc.so.6] (84,830,427 samples, 1.51%)</title><rect x="56.7149%" y="357" width="1.5113%" height="15" fill="rgb(230,136,11)" fg:x="3183354533" fg:w="84830427"/><text x="56.9649%" y="367.50"></text></g><g><title>[libc.so.6] (2,736,699 samples, 0.05%)</title><rect x="58.2342%" y="309" width="0.0488%" height="15" fill="rgb(247,22,47)" fg:x="3268629976" fg:w="2736699"/><text x="58.4842%" y="319.50"></text></g><g><title>jpeg_decoder::huffman::HuffmanTable::new (3,654,102 samples, 0.07%)</title><rect x="58.2830%" y="309" width="0.0651%" height="15" fill="rgb(218,84,22)" fg:x="3271366675" fg:w="3654102"/><text x="58.5330%" y="319.50"></text></g><g><title>jpeg_decoder::parser::parse_dht (9,695,412 samples, 0.17%)</title><rect x="58.2342%" y="325" width="0.1727%" height="15" fill="rgb(216,87,39)" fg:x="3268629976" fg:w="9695412"/><text x="58.4842%" y="335.50"></text></g><g><title>malloc (3,304,611 samples, 0.06%)</title><rect x="58.3481%" y="309" width="0.0589%" height="15" fill="rgb(221,178,8)" fg:x="3275020777" fg:w="3304611"/><text x="58.5981%" y="319.50"></text></g><g><title>jpeg_decoder::decoder::Decoder&lt;R&gt;::decode_planes (13,694,695 samples, 0.24%)</title><rect x="58.4069%" y="309" width="0.2440%" height="15" fill="rgb(230,42,11)" fg:x="3278325388" fg:w="13694695"/><text x="58.6569%" y="319.50"></text></g><g><title>jpeg_decoder::decoder::compute_image (13,694,695 samples, 0.24%)</title><rect x="58.4069%" y="293" width="0.2440%" height="15" fill="rgb(237,229,4)" fg:x="3278325388" fg:w="13694695"/><text x="58.6569%" y="303.50"></text></g><g><title>jpeg_decoder::worker::rayon::compute_image_parallel (13,193,191 samples, 0.24%)</title><rect x="58.4159%" y="277" width="0.2351%" height="15" fill="rgb(222,31,33)" fg:x="3278826892" fg:w="13193191"/><text x="58.6659%" y="287.50"></text></g><g><title>[libc.so.6] (13,193,191 samples, 0.24%)</title><rect x="58.4159%" y="261" width="0.2351%" height="15" fill="rgb(210,17,39)" fg:x="3278826892" fg:w="13193191"/><text x="58.6659%" y="271.50"></text></g><g><title>[unknown] (2,232,400 samples, 0.04%)</title><rect x="75.0422%" y="277" width="0.0398%" height="15" fill="rgb(244,93,20)" fg:x="4212046286" fg:w="2232400"/><text x="75.2922%" y="287.50"></text></g><g><title>[libc.so.6] (2,232,400 samples, 0.04%)</title><rect x="75.0422%" y="261" width="0.0398%" height="15" fill="rgb(210,40,47)" fg:x="4212046286" fg:w="2232400"/><text x="75.2922%" y="271.50"></text></g><g><title>[libc.so.6] (41,800,334 samples, 0.74%)</title><rect x="79.0936%" y="261" width="0.7447%" height="15" fill="rgb(239,211,47)" fg:x="4439449531" fg:w="41800334"/><text x="79.3436%" y="271.50"></text></g><g><title>jpeg_decoder::arch::ssse3::dequantize_and_idct_block_8x8 (260,764,378 samples, 4.65%)</title><rect x="79.8383%" y="261" width="4.6458%" height="15" fill="rgb(251,223,49)" fg:x="4481249865" fg:w="260764378"/><text x="80.0883%" y="271.50">jpeg_..</text></g><g><title>&lt;jpeg_decoder::worker::rayon::Scoped as jpeg_decoder::worker::Worker&gt;::append_row (541,570,858 samples, 9.65%)</title><rect x="74.9119%" y="293" width="9.6487%" height="15" fill="rgb(221,149,5)" fg:x="4204734862" fg:w="541570858"/><text x="75.1619%" y="303.50">&lt;jpeg_decoder:..</text></g><g><title>jpeg_decoder::worker::rayon::ImmediateWorker::append_row_locked (532,027,034 samples, 9.48%)</title><rect x="75.0820%" y="277" width="9.4786%" height="15" fill="rgb(219,224,51)" fg:x="4214278686" fg:w="532027034"/><text x="75.3320%" y="287.50">jpeg_decoder::..</text></g><g><title>jpeg_decoder::idct::dequantize_and_idct_block (4,291,477 samples, 0.08%)</title><rect x="84.4841%" y="261" width="0.0765%" height="15" fill="rgb(223,7,8)" fg:x="4742014243" fg:w="4291477"/><text x="84.7341%" y="271.50"></text></g><g><title>&lt;jpeg_decoder::worker::rayon::Scoped as jpeg_decoder::worker::Worker&gt;::start (11,759,582 samples, 0.21%)</title><rect x="84.5606%" y="293" width="0.2095%" height="15" fill="rgb(241,217,22)" fg:x="4746305720" fg:w="11759582"/><text x="84.8106%" y="303.50"></text></g><g><title>[libc.so.6] (11,759,582 samples, 0.21%)</title><rect x="84.5606%" y="277" width="0.2095%" height="15" fill="rgb(248,209,0)" fg:x="4746305720" fg:w="11759582"/><text x="84.8106%" y="287.50"></text></g><g><title>[libc.so.6] (37,146,776 samples, 0.66%)</title><rect x="84.7701%" y="293" width="0.6618%" height="15" fill="rgb(217,205,4)" fg:x="4758065302" fg:w="37146776"/><text x="85.0201%" y="303.50"></text></g><g><title>jpeg_decoder::huffman::HuffmanDecoder::decode (283,492,002 samples, 5.05%)</title><rect x="85.4319%" y="293" width="5.0507%" height="15" fill="rgb(228,124,39)" fg:x="4795212078" fg:w="283492002"/><text x="85.6819%" y="303.50">jpeg_d..</text></g><g><title>jpeg_decoder::huffman::HuffmanDecoder::read_bits (83,122,713 samples, 1.48%)</title><rect x="89.0017%" y="277" width="1.4809%" height="15" fill="rgb(250,116,42)" fg:x="4995581367" fg:w="83122713"/><text x="89.2517%" y="287.50"></text></g><g><title>jpeg_decoder::decoder::Decoder&lt;R&gt;::decode_scan (1,961,520,967 samples, 34.95%)</title><rect x="58.6509%" y="309" width="34.9466%" height="15" fill="rgb(223,202,9)" fg:x="3292020083" fg:w="1961520967"/><text x="58.9009%" y="319.50">jpeg_decoder::decoder::Decoder&lt;R&gt;::decode_scan</text></g><g><title>jpeg_decoder::huffman::HuffmanDecoder::read_bits (174,836,970 samples, 3.11%)</title><rect x="90.4826%" y="293" width="3.1149%" height="15" fill="rgb(242,222,40)" fg:x="5078704080" fg:w="174836970"/><text x="90.7326%" y="303.50">jpe..</text></g><g><title>&lt;image::codecs::jpeg::decoder::JpegDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (2,077,487,125 samples, 37.01%)</title><rect x="56.7149%" y="373" width="37.0127%" height="15" fill="rgb(229,99,46)" fg:x="3183354533" fg:w="2077487125"/><text x="56.9649%" y="383.50">&lt;image::codecs::jpeg::decoder::JpegDecoder&lt;R&gt; as image::imag..</text></g><g><title>jpeg_decoder::worker::WorkerScope::with (1,992,211,682 samples, 35.49%)</title><rect x="58.2342%" y="357" width="35.4934%" height="15" fill="rgb(225,56,46)" fg:x="3268629976" fg:w="1992211682"/><text x="58.4842%" y="367.50">jpeg_decoder::worker::WorkerScope::with</text></g><g><title>jpeg_decoder::decoder::Decoder&lt;R&gt;::decode_internal (1,992,211,682 samples, 35.49%)</title><rect x="58.2342%" y="341" width="35.4934%" height="15" fill="rgb(227,94,5)" fg:x="3268629976" fg:w="1992211682"/><text x="58.4842%" y="351.50">jpeg_decoder::decoder::Decoder&lt;R&gt;::decode_internal</text></g><g><title>jpeg_decoder::worker::WorkerScope::get_or_init_worker (1,982,516,270 samples, 35.32%)</title><rect x="58.4069%" y="325" width="35.3207%" height="15" fill="rgb(205,112,38)" fg:x="3278325388" fg:w="1982516270"/><text x="58.6569%" y="335.50">jpeg_decoder::worker::WorkerScope::get_or_init_worker</text></g><g><title>jpeg_decoder::huffman::HuffmanDecoder::decode (7,300,608 samples, 0.13%)</title><rect x="93.5975%" y="309" width="0.1301%" height="15" fill="rgb(231,133,46)" fg:x="5253541050" fg:w="7300608"/><text x="93.8475%" y="319.50"></text></g><g><title>&lt;iced_widget::image::Image&lt;Handle&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,542,789,076 samples, 45.30%)</title><rect x="48.8517%" y="533" width="45.3025%" height="15" fill="rgb(217,16,9)" fg:x="2741997788" fg:w="2542789076"/><text x="49.1017%" y="543.50">&lt;iced_widget::image::Image&lt;Handle&gt; as iced_core::widget::Widget&lt;Message,Th..</text></g><g><title>iced_widget::image::layout (2,542,789,076 samples, 45.30%)</title><rect x="48.8517%" y="517" width="45.3025%" height="15" fill="rgb(249,173,9)" fg:x="2741997788" fg:w="2542789076"/><text x="49.1017%" y="527.50">iced_widget::image::layout</text></g><g><title>&lt;iced_renderer::fallback::Renderer&lt;A,B&gt; as iced_core::image::Renderer&gt;::measure_image (2,542,789,076 samples, 45.30%)</title><rect x="48.8517%" y="501" width="45.3025%" height="15" fill="rgb(205,163,53)" fg:x="2741997788" fg:w="2542789076"/><text x="49.1017%" y="511.50">&lt;iced_renderer::fallback::Renderer&lt;A,B&gt; as iced_core::image::Renderer&gt;::me..</text></g><g><title>&lt;iced_wgpu::Renderer as iced_core::image::Renderer&gt;::measure_image (2,542,789,076 samples, 45.30%)</title><rect x="48.8517%" y="485" width="45.3025%" height="15" fill="rgb(217,54,41)" fg:x="2741997788" fg:w="2542789076"/><text x="49.1017%" y="495.50">&lt;iced_wgpu::Renderer as iced_core::image::Renderer&gt;::measure_image</text></g><g><title>iced_wgpu::image::raster::Cache::load (2,542,789,076 samples, 45.30%)</title><rect x="48.8517%" y="469" width="45.3025%" height="15" fill="rgb(228,216,12)" fg:x="2741997788" fg:w="2542789076"/><text x="49.1017%" y="479.50">iced_wgpu::image::raster::Cache::load</text></g><g><title>iced_graphics::image::load (2,542,789,076 samples, 45.30%)</title><rect x="48.8517%" y="453" width="45.3025%" height="15" fill="rgb(244,228,15)" fg:x="2741997788" fg:w="2542789076"/><text x="49.1017%" y="463.50">iced_graphics::image::load</text></g><g><title>image::dynimage::load_from_memory (2,187,130,960 samples, 38.97%)</title><rect x="55.1881%" y="437" width="38.9661%" height="15" fill="rgb(221,176,53)" fg:x="3097655904" fg:w="2187130960"/><text x="55.4381%" y="447.50">image::dynimage::load_from_memory</text></g><g><title>image::io::free_functions::load (2,187,130,960 samples, 38.97%)</title><rect x="55.1881%" y="421" width="38.9661%" height="15" fill="rgb(205,94,34)" fg:x="3097655904" fg:w="2187130960"/><text x="55.4381%" y="431.50">image::io::free_functions::load</text></g><g><title>image::dynimage::decoder_to_image (2,187,130,960 samples, 38.97%)</title><rect x="55.1881%" y="405" width="38.9661%" height="15" fill="rgb(213,110,48)" fg:x="3097655904" fg:w="2187130960"/><text x="55.4381%" y="415.50">image::dynimage::decoder_to_image</text></g><g><title>image::image::decoder_to_vec (2,187,130,960 samples, 38.97%)</title><rect x="55.1881%" y="389" width="38.9661%" height="15" fill="rgb(236,142,28)" fg:x="3097655904" fg:w="2187130960"/><text x="55.4381%" y="399.50">image::image::decoder_to_vec</text></g><g><title>[libc.so.6] (23,945,206 samples, 0.43%)</title><rect x="93.7276%" y="373" width="0.4266%" height="15" fill="rgb(225,135,29)" fg:x="5260841658" fg:w="23945206"/><text x="93.9776%" y="383.50"></text></g><g><title>&lt;iced_widget::image::Image&lt;Handle&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::size (1,997,811 samples, 0.04%)</title><rect x="94.1542%" y="533" width="0.0356%" height="15" fill="rgb(252,45,31)" fg:x="5284786864" fg:w="1997811"/><text x="94.4042%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (860,634 samples, 0.02%)</title><rect x="94.1898%" y="533" width="0.0153%" height="15" fill="rgb(211,187,50)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (860,634 samples, 0.02%)</title><rect x="94.1898%" y="517" width="0.0153%" height="15" fill="rgb(229,109,7)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (860,634 samples, 0.02%)</title><rect x="94.1898%" y="501" width="0.0153%" height="15" fill="rgb(251,131,51)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (860,634 samples, 0.02%)</title><rect x="94.1898%" y="485" width="0.0153%" height="15" fill="rgb(251,180,35)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (860,634 samples, 0.02%)</title><rect x="94.1898%" y="469" width="0.0153%" height="15" fill="rgb(211,46,32)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (860,634 samples, 0.02%)</title><rect x="94.1898%" y="453" width="0.0153%" height="15" fill="rgb(248,123,17)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (860,634 samples, 0.02%)</title><rect x="94.1898%" y="437" width="0.0153%" height="15" fill="rgb(227,141,18)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="447.50"></text></g><g><title>alloc::alloc::alloc (860,634 samples, 0.02%)</title><rect x="94.1898%" y="421" width="0.0153%" height="15" fill="rgb(216,102,9)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="431.50"></text></g><g><title>malloc (860,634 samples, 0.02%)</title><rect x="94.1898%" y="405" width="0.0153%" height="15" fill="rgb(253,47,13)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="415.50"></text></g><g><title>[libc.so.6] (860,634 samples, 0.02%)</title><rect x="94.1898%" y="389" width="0.0153%" height="15" fill="rgb(226,93,23)" fg:x="5286784675" fg:w="860634"/><text x="94.4398%" y="399.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,570,684,223 samples, 45.80%)</title><rect x="48.4492%" y="677" width="45.7995%" height="15" fill="rgb(247,104,17)" fg:x="2719407816" fg:w="2570684223"/><text x="48.6992%" y="687.50">&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget..</text></g><g><title>iced_core::layout::flex::resolve (2,570,684,223 samples, 45.80%)</title><rect x="48.4492%" y="661" width="45.7995%" height="15" fill="rgb(233,203,26)" fg:x="2719407816" fg:w="2570684223"/><text x="48.6992%" y="671.50">iced_core::layout::flex::resolve</text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,570,684,223 samples, 45.80%)</title><rect x="48.4492%" y="645" width="45.7995%" height="15" fill="rgb(244,98,49)" fg:x="2719407816" fg:w="2570684223"/><text x="48.6992%" y="655.50">&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::wi..</text></g><g><title>iced_widget::container::layout (2,570,684,223 samples, 45.80%)</title><rect x="48.4492%" y="629" width="45.7995%" height="15" fill="rgb(235,134,22)" fg:x="2719407816" fg:w="2570684223"/><text x="48.6992%" y="639.50">iced_widget::container::layout</text></g><g><title>iced_core::layout::positioned (2,570,684,223 samples, 45.80%)</title><rect x="48.4492%" y="613" width="45.7995%" height="15" fill="rgb(221,70,32)" fg:x="2719407816" fg:w="2570684223"/><text x="48.6992%" y="623.50">iced_core::layout::positioned</text></g><g><title>iced_widget::container::layout::_{{closure}} (2,566,549,237 samples, 45.73%)</title><rect x="48.5229%" y="597" width="45.7259%" height="15" fill="rgb(238,15,50)" fg:x="2723542802" fg:w="2566549237"/><text x="48.7729%" y="607.50">iced_widget::container::layout::_{{closure}}</text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (2,566,549,237 samples, 45.73%)</title><rect x="48.5229%" y="581" width="45.7259%" height="15" fill="rgb(215,221,48)" fg:x="2723542802" fg:w="2566549237"/><text x="48.7729%" y="591.50">&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::wi..</text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,566,549,237 samples, 45.73%)</title><rect x="48.5229%" y="565" width="45.7259%" height="15" fill="rgb(236,73,3)" fg:x="2723542802" fg:w="2566549237"/><text x="48.7729%" y="575.50">&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::..</text></g><g><title>iced_core::layout::flex::resolve (2,566,549,237 samples, 45.73%)</title><rect x="48.5229%" y="549" width="45.7259%" height="15" fill="rgb(250,107,11)" fg:x="2723542802" fg:w="2566549237"/><text x="48.7729%" y="559.50">iced_core::layout::flex::resolve</text></g><g><title>iced_core::layout::flex::Axis::main (2,446,730 samples, 0.04%)</title><rect x="94.2051%" y="533" width="0.0436%" height="15" fill="rgb(242,39,14)" fg:x="5287645309" fg:w="2446730"/><text x="94.4551%" y="543.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="917" width="45.9649%" height="15" fill="rgb(248,164,37)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="927.50">&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::..</text></g><g><title>iced_core::layout::flex::resolve (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="901" width="45.9649%" height="15" fill="rgb(217,60,12)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="911.50">iced_core::layout::flex::resolve</text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="885" width="45.9649%" height="15" fill="rgb(240,125,29)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="895.50">&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::wi..</text></g><g><title>iced_widget::container::layout (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="869" width="45.9649%" height="15" fill="rgb(208,207,28)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="879.50">iced_widget::container::layout</text></g><g><title>iced_core::layout::positioned (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="853" width="45.9649%" height="15" fill="rgb(209,159,27)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="863.50">iced_core::layout::positioned</text></g><g><title>iced_widget::container::layout::_{{closure}} (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="837" width="45.9649%" height="15" fill="rgb(251,176,53)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="847.50">iced_widget::container::layout::_{{closure}}</text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="821" width="45.9649%" height="15" fill="rgb(211,85,7)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="831.50">&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::wi..</text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="805" width="45.9649%" height="15" fill="rgb(216,64,54)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="815.50">&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::..</text></g><g><title>iced_core::layout::padded (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="789" width="45.9649%" height="15" fill="rgb(217,54,24)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="799.50">iced_core::layout::padded</text></g><g><title>iced_core::layout::positioned (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="773" width="45.9649%" height="15" fill="rgb(208,206,53)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="783.50">iced_core::layout::positioned</text></g><g><title>&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="757" width="45.9649%" height="15" fill="rgb(251,74,39)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="767.50">&lt;iced_widget::scrollable::Scrollable&lt;Message,Theme,Renderer&gt; as iced_core::..</text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="741" width="45.9649%" height="15" fill="rgb(226,47,5)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="751.50">&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::..</text></g><g><title>iced_core::layout::flex::resolve (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="725" width="45.9649%" height="15" fill="rgb(234,111,33)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="735.50">iced_core::layout::flex::resolve</text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="709" width="45.9649%" height="15" fill="rgb(251,14,10)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="719.50">&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::..</text></g><g><title>iced_core::layout::flex::resolve (2,579,963,836 samples, 45.96%)</title><rect x="48.4492%" y="693" width="45.9649%" height="15" fill="rgb(232,43,0)" fg:x="2719407816" fg:w="2579963836"/><text x="48.6992%" y="703.50">iced_core::layout::flex::resolve</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="677" width="0.1653%" height="15" fill="rgb(222,68,43)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="661" width="0.1653%" height="15" fill="rgb(217,24,23)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="645" width="0.1653%" height="15" fill="rgb(229,209,14)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="629" width="0.1653%" height="15" fill="rgb(250,149,48)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="613" width="0.1653%" height="15" fill="rgb(210,120,37)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="597" width="0.1653%" height="15" fill="rgb(210,21,8)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="581" width="0.1653%" height="15" fill="rgb(243,145,7)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="591.50"></text></g><g><title>alloc::alloc::alloc (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="565" width="0.1653%" height="15" fill="rgb(238,178,32)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="575.50"></text></g><g><title>malloc (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="549" width="0.1653%" height="15" fill="rgb(222,4,10)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="559.50"></text></g><g><title>[libc.so.6] (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="533" width="0.1653%" height="15" fill="rgb(239,7,37)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="543.50"></text></g><g><title>[libc.so.6] (9,279,613 samples, 0.17%)</title><rect x="94.2487%" y="517" width="0.1653%" height="15" fill="rgb(215,31,37)" fg:x="5290092039" fg:w="9279613"/><text x="94.4987%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,748,660 samples, 0.03%)</title><rect x="94.4141%" y="709" width="0.0312%" height="15" fill="rgb(224,83,33)" fg:x="5299371652" fg:w="1748660"/><text x="94.6641%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,748,660 samples, 0.03%)</title><rect x="94.4141%" y="693" width="0.0312%" height="15" fill="rgb(239,55,3)" fg:x="5299371652" fg:w="1748660"/><text x="94.6641%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,748,660 samples, 0.03%)</title><rect x="94.4141%" y="677" width="0.0312%" height="15" fill="rgb(247,92,11)" fg:x="5299371652" fg:w="1748660"/><text x="94.6641%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1,748,660 samples, 0.03%)</title><rect x="94.4141%" y="661" width="0.0312%" height="15" fill="rgb(239,200,7)" fg:x="5299371652" fg:w="1748660"/><text x="94.6641%" y="671.50"></text></g><g><title>malloc (1,748,660 samples, 0.03%)</title><rect x="94.4141%" y="645" width="0.0312%" height="15" fill="rgb(227,115,8)" fg:x="5299371652" fg:w="1748660"/><text x="94.6641%" y="655.50"></text></g><g><title>[libc.so.6] (1,748,660 samples, 0.03%)</title><rect x="94.4141%" y="629" width="0.0312%" height="15" fill="rgb(215,189,27)" fg:x="5299371652" fg:w="1748660"/><text x="94.6641%" y="639.50"></text></g><g><title>&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (2,583,279,343 samples, 46.02%)</title><rect x="48.4492%" y="949" width="46.0239%" height="15" fill="rgb(251,216,39)" fg:x="2719407816" fg:w="2583279343"/><text x="48.6992%" y="959.50">&lt;iced_widget::column::Column&lt;Message,Theme,Renderer&gt; as iced_core::widget::W..</text></g><g><title>iced_core::layout::flex::resolve (2,583,279,343 samples, 46.02%)</title><rect x="48.4492%" y="933" width="46.0239%" height="15" fill="rgb(207,29,47)" fg:x="2719407816" fg:w="2583279343"/><text x="48.6992%" y="943.50">iced_core::layout::flex::resolve</text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="917" width="0.0591%" height="15" fill="rgb(210,71,34)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="927.50"></text></g><g><title>iced_widget::container::layout (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="901" width="0.0591%" height="15" fill="rgb(253,217,51)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="911.50"></text></g><g><title>iced_core::layout::positioned (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="885" width="0.0591%" height="15" fill="rgb(222,117,46)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="895.50"></text></g><g><title>iced_widget::container::layout::_{{closure}} (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="869" width="0.0591%" height="15" fill="rgb(226,132,6)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="879.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="853" width="0.0591%" height="15" fill="rgb(254,145,51)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="863.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="837" width="0.0591%" height="15" fill="rgb(231,199,27)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="847.50"></text></g><g><title>iced_widget::container::layout (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="821" width="0.0591%" height="15" fill="rgb(245,158,14)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="831.50"></text></g><g><title>iced_core::layout::positioned (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="805" width="0.0591%" height="15" fill="rgb(240,113,14)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="815.50"></text></g><g><title>iced_widget::container::layout::_{{closure}} (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="789" width="0.0591%" height="15" fill="rgb(210,20,13)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="799.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="773" width="0.0591%" height="15" fill="rgb(241,144,13)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="783.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="757" width="0.0591%" height="15" fill="rgb(235,43,34)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="767.50"></text></g><g><title>iced_widget::container::layout (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="741" width="0.0591%" height="15" fill="rgb(208,36,20)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="751.50"></text></g><g><title>iced_core::layout::positioned (3,315,507 samples, 0.06%)</title><rect x="94.4141%" y="725" width="0.0591%" height="15" fill="rgb(239,204,10)" fg:x="5299371652" fg:w="3315507"/><text x="94.6641%" y="735.50"></text></g><g><title>iced_widget::container::layout::_{{closure}} (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="709" width="0.0279%" height="15" fill="rgb(217,84,43)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="719.50"></text></g><g><title>&lt;iced_widget::container::Container&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout::_{{closure}} (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="693" width="0.0279%" height="15" fill="rgb(241,170,50)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="703.50"></text></g><g><title>&lt;iced_widget::row::Row&lt;Message,Theme,Renderer&gt; as iced_core::widget::Widget&lt;Message,Theme,Renderer&gt;&gt;::layout (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="677" width="0.0279%" height="15" fill="rgb(226,205,29)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="687.50"></text></g><g><title>iced_core::layout::flex::resolve (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="661" width="0.0279%" height="15" fill="rgb(233,113,1)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="645" width="0.0279%" height="15" fill="rgb(253,98,13)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="629" width="0.0279%" height="15" fill="rgb(211,115,12)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="639.50"></text></g><g><title>&lt;iced_core::layout::node::Node as core::clone::Clone&gt;::clone (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="613" width="0.0279%" height="15" fill="rgb(208,12,16)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="597" width="0.0279%" height="15" fill="rgb(237,193,54)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="581" width="0.0279%" height="15" fill="rgb(243,22,42)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,566,847 samples, 0.03%)</title><rect x="94.4452%" y="565" width="0.0279%" height="15" fill="rgb(233,151,36)" fg:x="5301120312" fg:w="1566847"/><text x="94.6952%" y="575.50"></text></g><g><title>iced_winit::program::build_user_interfaces (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1173" width="46.4706%" height="15" fill="rgb(237,57,45)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1183.50">iced_winit::program::build_user_interfaces</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1157" width="46.4706%" height="15" fill="rgb(221,88,17)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1167.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1141" width="46.4706%" height="15" fill="rgb(230,79,15)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1151.50">&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1125" width="46.4706%" height="15" fill="rgb(213,57,13)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1135.50">&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect:..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1109" width="46.4706%" height="15" fill="rgb(222,116,39)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1119.50">&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1093" width="46.4706%" height="15" fill="rgb(245,107,2)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1103.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1077" width="46.4706%" height="15" fill="rgb(238,1,10)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1087.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::ite..</text></g><g><title>&lt;std::collections::hash::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1061" width="46.4706%" height="15" fill="rgb(249,4,48)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1071.50">&lt;std::collections::hash::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::It..</text></g><g><title>&lt;hashbrown::map::Drain&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1045" width="46.4706%" height="15" fill="rgb(223,151,18)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1055.50">&lt;hashbrown::map::Drain&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fo..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1029" width="46.4706%" height="15" fill="rgb(227,65,43)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1039.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="1013" width="46.4706%" height="15" fill="rgb(218,40,45)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1023.50">core::iter::adapters::filter_map::filter_map_fold::_{{closure}}</text></g><g><title>iced_winit::program::build_user_interfaces::_{{closure}} (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="997" width="46.4706%" height="15" fill="rgb(252,121,31)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="1007.50">iced_winit::program::build_user_interfaces::_{{closure}}</text></g><g><title>iced_winit::program::build_user_interface (2,608,349,640 samples, 46.47%)</title><rect x="48.0205%" y="981" width="46.4706%" height="15" fill="rgb(219,158,43)" fg:x="2695347527" fg:w="2608349640"/><text x="48.2705%" y="991.50">iced_winit::program::build_user_interface</text></g><g><title>iced_runtime::user_interface::UserInterface&lt;Message,Theme,Renderer&gt;::build (2,584,289,351 samples, 46.04%)</title><rect x="48.4492%" y="965" width="46.0419%" height="15" fill="rgb(231,162,42)" fg:x="2719407816" fg:w="2584289351"/><text x="48.6992%" y="975.50">iced_runtime::user_interface::UserInterface&lt;Message,Theme,Renderer&gt;::build</text></g><g><title>iced_core::widget::tree::Tree::diff_children_custom (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="949" width="0.0180%" height="15" fill="rgb(217,179,25)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="959.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children::_{{closure}} (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="933" width="0.0180%" height="15" fill="rgb(206,212,31)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="943.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children_custom (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="917" width="0.0180%" height="15" fill="rgb(235,144,12)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="927.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children::_{{closure}} (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="901" width="0.0180%" height="15" fill="rgb(213,51,10)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="911.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children_custom (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="885" width="0.0180%" height="15" fill="rgb(231,145,14)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="895.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children::_{{closure}} (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="869" width="0.0180%" height="15" fill="rgb(235,15,28)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="879.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children_custom (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="853" width="0.0180%" height="15" fill="rgb(237,206,10)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="863.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children::_{{closure}} (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="837" width="0.0180%" height="15" fill="rgb(236,227,27)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="847.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children_custom (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="821" width="0.0180%" height="15" fill="rgb(246,83,35)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="831.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children::_{{closure}} (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="805" width="0.0180%" height="15" fill="rgb(220,136,24)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="815.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children_custom (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="789" width="0.0180%" height="15" fill="rgb(217,3,25)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="799.50"></text></g><g><title>iced_core::widget::tree::Tree::diff_children::_{{closure}} (1,010,008 samples, 0.02%)</title><rect x="94.4731%" y="773" width="0.0180%" height="15" fill="rgb(239,24,14)" fg:x="5302687159" fg:w="1010008"/><text x="94.7231%" y="783.50"></text></g><g><title>iced_winit::program::state::State&lt;P&gt;::cursor (2,484,420 samples, 0.04%)</title><rect x="94.4911%" y="1173" width="0.0443%" height="15" fill="rgb(244,16,53)" fg:x="5303697167" fg:w="2484420"/><text x="94.7411%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,484,420 samples, 0.04%)</title><rect x="94.4911%" y="1157" width="0.0443%" height="15" fill="rgb(208,175,44)" fg:x="5303697167" fg:w="2484420"/><text x="94.7411%" y="1167.50"></text></g><g><title>iced_winit::program::state::State&lt;P&gt;::synchronize (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1173" width="0.0347%" height="15" fill="rgb(252,18,48)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1183.50"></text></g><g><title>winit::window::Window::inner_size (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1157" width="0.0347%" height="15" fill="rgb(234,199,32)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1167.50"></text></g><g><title>winit::platform_impl::linux::Window::maybe_wait_on_main (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1141" width="0.0347%" height="15" fill="rgb(225,77,54)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1151.50"></text></g><g><title>winit::window::Window::inner_size::_{{closure}} (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1125" width="0.0347%" height="15" fill="rgb(225,42,25)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1135.50"></text></g><g><title>winit::platform_impl::linux::Window::inner_size (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1109" width="0.0347%" height="15" fill="rgb(242,227,46)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1119.50"></text></g><g><title>winit::platform_impl::linux::wayland::window::Window::inner_size (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1093" width="0.0347%" height="15" fill="rgb(246,197,35)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1103.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1077" width="0.0347%" height="15" fill="rgb(215,159,26)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1061" width="0.0347%" height="15" fill="rgb(212,194,50)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1045" width="0.0347%" height="15" fill="rgb(246,132,1)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,945,966 samples, 0.03%)</title><rect x="94.5354%" y="1029" width="0.0347%" height="15" fill="rgb(217,71,7)" fg:x="5306181587" fg:w="1945966"/><text x="94.7854%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,974,046 samples, 0.05%)</title><rect x="94.5701%" y="853" width="0.0530%" height="15" fill="rgb(252,59,32)" fg:x="5308127553" fg:w="2974046"/><text x="94.8201%" y="863.50"></text></g><g><title>serde_json::de::from_str (6,213,373 samples, 0.11%)</title><rect x="94.5701%" y="933" width="0.1107%" height="15" fill="rgb(253,204,25)" fg:x="5308127553" fg:w="6213373"/><text x="94.8201%" y="943.50"></text></g><g><title>serde_json::de::from_trait (6,213,373 samples, 0.11%)</title><rect x="94.5701%" y="917" width="0.1107%" height="15" fill="rgb(232,21,16)" fg:x="5308127553" fg:w="6213373"/><text x="94.8201%" y="927.50"></text></g><g><title>papyrust::library::project::_::&lt;impl serde::de::Deserialize for papyrust::library::project::ProjectMeta&gt;::deserialize (6,213,373 samples, 0.11%)</title><rect x="94.5701%" y="901" width="0.1107%" height="15" fill="rgb(248,90,29)" fg:x="5308127553" fg:w="6213373"/><text x="94.8201%" y="911.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (6,213,373 samples, 0.11%)</title><rect x="94.5701%" y="885" width="0.1107%" height="15" fill="rgb(249,223,7)" fg:x="5308127553" fg:w="6213373"/><text x="94.8201%" y="895.50"></text></g><g><title>&lt;papyrust::library::project::_::&lt;impl serde::de::Deserialize for papyrust::library::project::ProjectMeta&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (6,213,373 samples, 0.11%)</title><rect x="94.5701%" y="869" width="0.1107%" height="15" fill="rgb(231,119,42)" fg:x="5308127553" fg:w="6213373"/><text x="94.8201%" y="879.50"></text></g><g><title>serde::de::MapAccess::next_value (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="853" width="0.0577%" height="15" fill="rgb(215,41,35)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="837" width="0.0577%" height="15" fill="rgb(220,44,45)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="821" width="0.0577%" height="15" fill="rgb(253,197,36)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="831.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="805" width="0.0577%" height="15" fill="rgb(245,225,54)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="789" width="0.0577%" height="15" fill="rgb(239,94,37)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="799.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="773" width="0.0577%" height="15" fill="rgb(242,217,10)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="757" width="0.0577%" height="15" fill="rgb(250,193,7)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="741" width="0.0577%" height="15" fill="rgb(230,104,19)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="725" width="0.0577%" height="15" fill="rgb(230,181,4)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="735.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="709" width="0.0577%" height="15" fill="rgb(216,219,49)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="719.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="693" width="0.0577%" height="15" fill="rgb(254,144,0)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="703.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="677" width="0.0577%" height="15" fill="rgb(205,209,38)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="687.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,239,327 samples, 0.06%)</title><rect x="94.6230%" y="661" width="0.0577%" height="15" fill="rgb(240,21,42)" fg:x="5311101599" fg:w="3239327"/><text x="94.8730%" y="671.50"></text></g><g><title>papyrust::library::loader::parse (9,569,433 samples, 0.17%)</title><rect x="94.5701%" y="949" width="0.1705%" height="15" fill="rgb(241,132,3)" fg:x="5308127553" fg:w="9569433"/><text x="94.8201%" y="959.50"></text></g><g><title>std::fs::read_to_string (3,356,060 samples, 0.06%)</title><rect x="94.6808%" y="933" width="0.0598%" height="15" fill="rgb(225,14,2)" fg:x="5314340926" fg:w="3356060"/><text x="94.9308%" y="943.50"></text></g><g><title>std::fs::read_to_string::inner (3,356,060 samples, 0.06%)</title><rect x="94.6808%" y="917" width="0.0598%" height="15" fill="rgb(210,141,35)" fg:x="5314340926" fg:w="3356060"/><text x="94.9308%" y="927.50"></text></g><g><title>alloc::string::String::try_reserve_exact (3,356,060 samples, 0.06%)</title><rect x="94.6808%" y="901" width="0.0598%" height="15" fill="rgb(251,14,44)" fg:x="5314340926" fg:w="3356060"/><text x="94.9308%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,356,060 samples, 0.06%)</title><rect x="94.6808%" y="885" width="0.0598%" height="15" fill="rgb(247,48,18)" fg:x="5314340926" fg:w="3356060"/><text x="94.9308%" y="895.50"></text></g><g><title>malloc (3,356,060 samples, 0.06%)</title><rect x="94.6808%" y="869" width="0.0598%" height="15" fill="rgb(225,0,40)" fg:x="5314340926" fg:w="3356060"/><text x="94.9308%" y="879.50"></text></g><g><title>[libc.so.6] (3,356,060 samples, 0.06%)</title><rect x="94.6808%" y="853" width="0.0598%" height="15" fill="rgb(221,31,33)" fg:x="5314340926" fg:w="3356060"/><text x="94.9308%" y="863.50"></text></g><g><title>[libc.so.6] (3,356,060 samples, 0.06%)</title><rect x="94.6808%" y="837" width="0.0598%" height="15" fill="rgb(237,42,40)" fg:x="5314340926" fg:w="3356060"/><text x="94.9308%" y="847.50"></text></g><g><title>iced_futures::runtime::Runtime&lt;Executor,Sender,Message&gt;::enter (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1157" width="0.1877%" height="15" fill="rgb(233,51,29)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1167.50"></text></g><g><title>iced_futures::backend::native::tokio::&lt;impl iced_futures::executor::Executor for tokio::runtime::runtime::Runtime&gt;::enter (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1141" width="0.1877%" height="15" fill="rgb(226,58,20)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1151.50"></text></g><g><title>iced_winit::program::update::_{{closure}} (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1125" width="0.1877%" height="15" fill="rgb(208,98,7)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1135.50"></text></g><g><title>&lt;iced::program::Program::run_with::Instance&lt;P,I&gt; as iced_winit::program::Program&gt;::update (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1109" width="0.1877%" height="15" fill="rgb(228,143,44)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1119.50"></text></g><g><title>&lt;iced::program::with_theme::WithTheme&lt;P,F&gt; as iced::program::Program&gt;::update (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1093" width="0.1877%" height="15" fill="rgb(246,55,38)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1103.50"></text></g><g><title>&lt;iced::program::with_title::WithTitle&lt;P,Title&gt; as iced::program::Program&gt;::update (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1077" width="0.1877%" height="15" fill="rgb(247,87,16)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1087.50"></text></g><g><title>&lt;iced::application::application::Instance&lt;State,Message,Theme,Renderer,Update,View&gt; as iced::program::Program&gt;::update (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1061" width="0.1877%" height="15" fill="rgb(234,129,42)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1071.50"></text></g><g><title>&lt;T as iced::application::Update&lt;State,Message&gt;&gt;::update (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1045" width="0.1877%" height="15" fill="rgb(220,82,16)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1029" width="0.1877%" height="15" fill="rgb(211,88,4)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1039.50"></text></g><g><title>papyrust::Papyrust::update (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="1013" width="0.1877%" height="15" fill="rgb(248,151,21)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1023.50"></text></g><g><title>papyrust::ui::state::update (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="997" width="0.1877%" height="15" fill="rgb(238,163,6)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="1007.50"></text></g><g><title>papyrust::ui::library::Library::load_project (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="981" width="0.1877%" height="15" fill="rgb(209,183,11)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="991.50"></text></g><g><title>papyrust::library::loader::Loader::next (10,536,735 samples, 0.19%)</title><rect x="94.5701%" y="965" width="0.1877%" height="15" fill="rgb(219,37,20)" fg:x="5308127553" fg:w="10536735"/><text x="94.8201%" y="975.50"></text></g><g><title>std::path::Path::join (967,302 samples, 0.02%)</title><rect x="94.7405%" y="949" width="0.0172%" height="15" fill="rgb(210,158,4)" fg:x="5317696986" fg:w="967302"/><text x="94.9905%" y="959.50"></text></g><g><title>std::path::Path::_join (967,302 samples, 0.02%)</title><rect x="94.7405%" y="933" width="0.0172%" height="15" fill="rgb(221,167,53)" fg:x="5317696986" fg:w="967302"/><text x="94.9905%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (967,302 samples, 0.02%)</title><rect x="94.7405%" y="917" width="0.0172%" height="15" fill="rgb(237,151,45)" fg:x="5317696986" fg:w="967302"/><text x="94.9905%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (967,302 samples, 0.02%)</title><rect x="94.7405%" y="901" width="0.0172%" height="15" fill="rgb(231,39,3)" fg:x="5317696986" fg:w="967302"/><text x="94.9905%" y="911.50"></text></g><g><title>realloc (967,302 samples, 0.02%)</title><rect x="94.7405%" y="885" width="0.0172%" height="15" fill="rgb(212,167,28)" fg:x="5317696986" fg:w="967302"/><text x="94.9905%" y="895.50"></text></g><g><title>&lt;iced_winit::proxy::Proxy&lt;T&gt; as core::clone::Clone&gt;::clone (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1141" width="0.0454%" height="15" fill="rgb(232,178,8)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1151.50"></text></g><g><title>&lt;winit::event_loop::EventLoopProxy&lt;T&gt; as core::clone::Clone&gt;::clone (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1125" width="0.0454%" height="15" fill="rgb(225,151,20)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1135.50"></text></g><g><title>&lt;winit::platform_impl::linux::EventLoopProxy&lt;T&gt; as core::clone::Clone&gt;::clone (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1109" width="0.0454%" height="15" fill="rgb(238,3,37)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1119.50"></text></g><g><title>&lt;winit::platform_impl::linux::wayland::event_loop::proxy::EventLoopProxy&lt;T&gt; as core::clone::Clone&gt;::clone (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1093" width="0.0454%" height="15" fill="rgb(251,147,42)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1103.50"></text></g><g><title>&lt;calloop::sources::channel::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1077" width="0.0454%" height="15" fill="rgb(208,173,10)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1087.50"></text></g><g><title>&lt;calloop::sources::ping::eventfd::Ping as core::clone::Clone&gt;::clone (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1061" width="0.0454%" height="15" fill="rgb(246,225,4)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1045" width="0.0454%" height="15" fill="rgb(248,102,6)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1029" width="0.0454%" height="15" fill="rgb(232,6,21)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (2,548,312 samples, 0.05%)</title><rect x="94.7578%" y="1013" width="0.0454%" height="15" fill="rgb(221,179,22)" fg:x="5318664288" fg:w="2548312"/><text x="95.0078%" y="1023.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::poll_events_with_timeout (3,589,872,517 samples, 63.96%)</title><rect x="30.8840%" y="1301" width="63.9575%" height="15" fill="rgb(252,50,20)" fg:x="1733490345" fg:w="3589872517"/><text x="31.1340%" y="1311.50">winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::poll_events_with_timeout</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration (3,561,875,607 samples, 63.46%)</title><rect x="31.3828%" y="1285" width="63.4587%" height="15" fill="rgb(222,56,38)" fg:x="1761487255" fg:w="3561875607"/><text x="31.6328%" y="1295.50">winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,561,875,607 samples, 63.46%)</title><rect x="31.3828%" y="1269" width="63.4587%" height="15" fill="rgb(206,193,29)" fg:x="1761487255" fg:w="3561875607"/><text x="31.6328%" y="1279.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,561,875,607 samples, 63.46%)</title><rect x="31.3828%" y="1253" width="63.4587%" height="15" fill="rgb(239,192,45)" fg:x="1761487255" fg:w="3561875607"/><text x="31.6328%" y="1263.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (3,561,875,607 samples, 63.46%)</title><rect x="31.3828%" y="1237" width="63.4587%" height="15" fill="rgb(254,18,36)" fg:x="1761487255" fg:w="3561875607"/><text x="31.6328%" y="1247.50">winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}}</text></g><g><title>winit::event_loop::dispatch_event_for_app (3,561,875,607 samples, 63.46%)</title><rect x="31.3828%" y="1221" width="63.4587%" height="15" fill="rgb(221,127,11)" fg:x="1761487255" fg:w="3561875607"/><text x="31.6328%" y="1231.50">winit::event_loop::dispatch_event_for_app</text></g><g><title>iced_winit::program::run::Runner&lt;Message,F,C&gt;::process_event (3,561,875,607 samples, 63.46%)</title><rect x="31.3828%" y="1205" width="63.4587%" height="15" fill="rgb(234,146,35)" fg:x="1761487255" fg:w="3561875607"/><text x="31.6328%" y="1215.50">iced_winit::program::run::Runner&lt;Message,F,C&gt;::process_event</text></g><g><title>iced_winit::program::run_instance::_{{closure}} (3,530,524,385 samples, 62.90%)</title><rect x="31.9414%" y="1189" width="62.9001%" height="15" fill="rgb(254,201,37)" fg:x="1792838477" fg:w="3530524385"/><text x="32.1914%" y="1199.50">iced_winit::program::run_instance::_{{closure}}</text></g><g><title>iced_winit::program::update (15,235,309 samples, 0.27%)</title><rect x="94.5701%" y="1173" width="0.2714%" height="15" fill="rgb(211,202,23)" fg:x="5308127553" fg:w="15235309"/><text x="94.8201%" y="1183.50"></text></g><g><title>iced_futures::runtime::Runtime&lt;Executor,Sender,Message&gt;::run (4,698,574 samples, 0.08%)</title><rect x="94.7578%" y="1157" width="0.0837%" height="15" fill="rgb(237,91,2)" fg:x="5318664288" fg:w="4698574"/><text x="95.0078%" y="1167.50"></text></g><g><title>iced_futures::backend::native::tokio::&lt;impl iced_futures::executor::Executor for tokio::runtime::runtime::Runtime&gt;::spawn (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1141" width="0.0383%" height="15" fill="rgb(226,228,36)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1151.50"></text></g><g><title>tokio::runtime::runtime::Runtime::spawn (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1125" width="0.0383%" height="15" fill="rgb(213,63,50)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1135.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_named (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1109" width="0.0383%" height="15" fill="rgb(235,194,19)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1093" width="0.0383%" height="15" fill="rgb(207,204,18)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1077" width="0.0383%" height="15" fill="rgb(248,8,7)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1061" width="0.0383%" height="15" fill="rgb(223,145,47)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1071.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1045" width="0.0383%" height="15" fill="rgb(228,84,11)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1055.50"></text></g><g><title>tokio::runtime::task::new_task (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1029" width="0.0383%" height="15" fill="rgb(218,76,45)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="1013" width="0.0383%" height="15" fill="rgb(223,80,15)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="997" width="0.0383%" height="15" fill="rgb(219,218,33)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="981" width="0.0383%" height="15" fill="rgb(208,51,11)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="965" width="0.0383%" height="15" fill="rgb(229,165,39)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="949" width="0.0383%" height="15" fill="rgb(241,100,24)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="933" width="0.0383%" height="15" fill="rgb(228,14,23)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="917" width="0.0383%" height="15" fill="rgb(247,116,52)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="927.50"></text></g><g><title>__rustc::__rdl_alloc (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="901" width="0.0383%" height="15" fill="rgb(216,149,33)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="911.50"></text></g><g><title>posix_memalign (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="885" width="0.0383%" height="15" fill="rgb(238,142,29)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="895.50"></text></g><g><title>[libc.so.6] (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="869" width="0.0383%" height="15" fill="rgb(224,83,40)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="879.50"></text></g><g><title>[libc.so.6] (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="853" width="0.0383%" height="15" fill="rgb(234,165,11)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="863.50"></text></g><g><title>[libc.so.6] (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="837" width="0.0383%" height="15" fill="rgb(215,96,23)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="847.50"></text></g><g><title>[libc.so.6] (2,150,262 samples, 0.04%)</title><rect x="94.8032%" y="821" width="0.0383%" height="15" fill="rgb(233,179,26)" fg:x="5321212600" fg:w="2150262"/><text x="95.0532%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="1093" width="0.0213%" height="15" fill="rgb(225,129,33)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="1103.50"></text></g><g><title>iced_wgpu::window::compositor::Compositor::request::_{{closure}}::_{{closure}} (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="1077" width="0.0213%" height="15" fill="rgb(237,49,13)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="1087.50"></text></g><g><title>wgpu::Surface::get_capabilities (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="1061" width="0.0213%" height="15" fill="rgb(211,3,31)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="1071.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_capabilities (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="1045" width="0.0213%" height="15" fill="rgb(216,152,19)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="1055.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::surface_get_capabilities (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="1029" width="0.0213%" height="15" fill="rgb(251,121,35)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="1039.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::fetch_adapter_and_surface (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="1013" width="0.0213%" height="15" fill="rgb(210,217,47)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="997" width="0.0213%" height="15" fill="rgb(244,116,22)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="981" width="0.0213%" height="15" fill="rgb(228,17,21)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="965" width="0.0213%" height="15" fill="rgb(240,149,34)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="949" width="0.0213%" height="15" fill="rgb(208,125,47)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="933" width="0.0213%" height="15" fill="rgb(249,186,39)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="943.50"></text></g><g><title>wl_display_roundtrip_queue (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="917" width="0.0213%" height="15" fill="rgb(240,220,33)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="927.50"></text></g><g><title>wl_display_dispatch_queue_pending (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="901" width="0.0213%" height="15" fill="rgb(243,110,23)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="911.50"></text></g><g><title>[libwayland-client.so.0.23.1] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="885" width="0.0213%" height="15" fill="rgb(219,163,46)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="895.50"></text></g><g><title>[libwayland-client.so.0.23.1] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="869" width="0.0213%" height="15" fill="rgb(216,126,30)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="879.50"></text></g><g><title>ffi_call (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="853" width="0.0213%" height="15" fill="rgb(208,139,11)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="863.50"></text></g><g><title>[libffi.so.8.2.0] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="837" width="0.0213%" height="15" fill="rgb(213,118,36)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="847.50"></text></g><g><title>[libffi.so.8.2.0] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="821" width="0.0213%" height="15" fill="rgb(226,43,17)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,196,036 samples, 0.02%)</title><rect x="94.8415%" y="805" width="0.0213%" height="15" fill="rgb(254,217,4)" fg:x="5323362862" fg:w="1196036"/><text x="95.0915%" y="815.50"></text></g><g><title>iced_wgpu::quad::gradient::Pipeline::new (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="1061" width="0.0412%" height="15" fill="rgb(210,134,47)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="1071.50"></text></g><g><title>wgpu::Device::create_render_pipeline (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="1045" width="0.0412%" height="15" fill="rgb(237,24,49)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_render_pipeline (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="1029" width="0.0412%" height="15" fill="rgb(251,39,46)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_render_pipeline (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="1013" width="0.0412%" height="15" fill="rgb(251,220,3)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_render_pipeline (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="997" width="0.0412%" height="15" fill="rgb(228,105,12)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="1007.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_render_pipeline (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="981" width="0.0412%" height="15" fill="rgb(215,196,1)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_render_pipeline (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="965" width="0.0412%" height="15" fill="rgb(214,33,39)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="949" width="0.0412%" height="15" fill="rgb(220,19,52)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="933" width="0.0412%" height="15" fill="rgb(221,78,38)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="917" width="0.0412%" height="15" fill="rgb(253,30,16)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="901" width="0.0412%" height="15" fill="rgb(242,65,0)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="885" width="0.0412%" height="15" fill="rgb(235,201,12)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="869" width="0.0412%" height="15" fill="rgb(233,161,9)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="853" width="0.0412%" height="15" fill="rgb(241,207,41)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="837" width="0.0412%" height="15" fill="rgb(212,69,46)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="821" width="0.0412%" height="15" fill="rgb(239,69,45)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,313,031 samples, 0.04%)</title><rect x="94.8628%" y="805" width="0.0412%" height="15" fill="rgb(242,117,48)" fg:x="5324558898" fg:w="2313031"/><text x="95.1128%" y="815.50"></text></g><g><title>wgpu::Device::create_render_pipeline (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="1045" width="0.0313%" height="15" fill="rgb(228,41,36)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_render_pipeline (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="1029" width="0.0313%" height="15" fill="rgb(212,3,32)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_render_pipeline (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="1013" width="0.0313%" height="15" fill="rgb(233,41,49)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_render_pipeline (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="997" width="0.0313%" height="15" fill="rgb(252,170,49)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="1007.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_render_pipeline (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="981" width="0.0313%" height="15" fill="rgb(229,53,26)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_render_pipeline (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="965" width="0.0313%" height="15" fill="rgb(217,157,12)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="949" width="0.0313%" height="15" fill="rgb(227,17,9)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="933" width="0.0313%" height="15" fill="rgb(218,84,12)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="917" width="0.0313%" height="15" fill="rgb(212,79,24)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="901" width="0.0313%" height="15" fill="rgb(217,222,37)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="885" width="0.0313%" height="15" fill="rgb(246,208,8)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="869" width="0.0313%" height="15" fill="rgb(244,133,10)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="853" width="0.0313%" height="15" fill="rgb(209,219,41)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="837" width="0.0313%" height="15" fill="rgb(253,175,45)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="821" width="0.0313%" height="15" fill="rgb(235,100,37)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,758,203 samples, 0.03%)</title><rect x="94.9040%" y="805" width="0.0313%" height="15" fill="rgb(225,87,19)" fg:x="5326871929" fg:w="1758203"/><text x="95.1540%" y="815.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::lower (1,386,946 samples, 0.02%)</title><rect x="94.9353%" y="933" width="0.0247%" height="15" fill="rgb(217,152,17)" fg:x="5328630132" fg:w="1386946"/><text x="95.1853%" y="943.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::block (1,386,946 samples, 0.02%)</title><rect x="94.9353%" y="917" width="0.0247%" height="15" fill="rgb(235,72,13)" fg:x="5328630132" fg:w="1386946"/><text x="95.1853%" y="927.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::expression (1,386,946 samples, 0.02%)</title><rect x="94.9353%" y="901" width="0.0247%" height="15" fill="rgb(233,140,18)" fg:x="5328630132" fg:w="1386946"/><text x="95.1853%" y="911.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::expression_for_reference (1,386,946 samples, 0.02%)</title><rect x="94.9353%" y="885" width="0.0247%" height="15" fill="rgb(207,212,28)" fg:x="5328630132" fg:w="1386946"/><text x="95.1853%" y="895.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::binary (1,386,946 samples, 0.02%)</title><rect x="94.9353%" y="869" width="0.0247%" height="15" fill="rgb(220,130,25)" fg:x="5328630132" fg:w="1386946"/><text x="95.1853%" y="879.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::expression_for_reference (1,386,946 samples, 0.02%)</title><rect x="94.9353%" y="853" width="0.0247%" height="15" fill="rgb(205,55,34)" fg:x="5328630132" fg:w="1386946"/><text x="95.1853%" y="863.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::binary (1,386,946 samples, 0.02%)</title><rect x="94.9353%" y="837" width="0.0247%" height="15" fill="rgb(237,54,35)" fg:x="5328630132" fg:w="1386946"/><text x="95.1853%" y="847.50"></text></g><g><title>iced_wgpu::quad::Pipeline::new (6,843,591 samples, 0.12%)</title><rect x="94.8628%" y="1077" width="0.1219%" height="15" fill="rgb(208,67,23)" fg:x="5324558898" fg:w="6843591"/><text x="95.1128%" y="1087.50"></text></g><g><title>iced_wgpu::quad::solid::Pipeline::new (4,530,560 samples, 0.08%)</title><rect x="94.9040%" y="1061" width="0.0807%" height="15" fill="rgb(206,207,50)" fg:x="5326871929" fg:w="4530560"/><text x="95.1540%" y="1071.50"></text></g><g><title>wgpu::Device::create_shader_module (2,772,357 samples, 0.05%)</title><rect x="94.9353%" y="1045" width="0.0494%" height="15" fill="rgb(213,211,42)" fg:x="5328630132" fg:w="2772357"/><text x="95.1853%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (2,772,357 samples, 0.05%)</title><rect x="94.9353%" y="1029" width="0.0494%" height="15" fill="rgb(252,197,50)" fg:x="5328630132" fg:w="2772357"/><text x="95.1853%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_shader_module (2,772,357 samples, 0.05%)</title><rect x="94.9353%" y="1013" width="0.0494%" height="15" fill="rgb(251,211,41)" fg:x="5328630132" fg:w="2772357"/><text x="95.1853%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (2,772,357 samples, 0.05%)</title><rect x="94.9353%" y="997" width="0.0494%" height="15" fill="rgb(229,211,5)" fg:x="5328630132" fg:w="2772357"/><text x="95.1853%" y="1007.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (2,772,357 samples, 0.05%)</title><rect x="94.9353%" y="981" width="0.0494%" height="15" fill="rgb(239,36,31)" fg:x="5328630132" fg:w="2772357"/><text x="95.1853%" y="991.50"></text></g><g><title>naga::front::wgsl::parse_str (2,772,357 samples, 0.05%)</title><rect x="94.9353%" y="965" width="0.0494%" height="15" fill="rgb(248,67,31)" fg:x="5328630132" fg:w="2772357"/><text x="95.1853%" y="975.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (2,772,357 samples, 0.05%)</title><rect x="94.9353%" y="949" width="0.0494%" height="15" fill="rgb(249,55,44)" fg:x="5328630132" fg:w="2772357"/><text x="95.1853%" y="959.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1,385,411 samples, 0.02%)</title><rect x="94.9600%" y="933" width="0.0247%" height="15" fill="rgb(216,82,12)" fg:x="5330017078" fg:w="1385411"/><text x="95.2100%" y="943.50"></text></g><g><title>naga::front::wgsl::parse::Parser::statement (1,385,411 samples, 0.02%)</title><rect x="94.9600%" y="917" width="0.0247%" height="15" fill="rgb(242,174,1)" fg:x="5330017078" fg:w="1385411"/><text x="95.2100%" y="927.50"></text></g><g><title>wgpu::Device::create_pipeline_layout (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="1045" width="0.0216%" height="15" fill="rgb(208,120,29)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_pipeline_layout (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="1029" width="0.0216%" height="15" fill="rgb(221,105,43)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_pipeline_layout (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="1013" width="0.0216%" height="15" fill="rgb(234,124,22)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_pipeline_layout (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="997" width="0.0216%" height="15" fill="rgb(212,23,30)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="1007.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_pipeline_layout (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="981" width="0.0216%" height="15" fill="rgb(219,122,53)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_pipeline_layout (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="965" width="0.0216%" height="15" fill="rgb(248,84,24)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="949" width="0.0216%" height="15" fill="rgb(245,115,18)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="933" width="0.0216%" height="15" fill="rgb(227,176,51)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="917" width="0.0216%" height="15" fill="rgb(229,63,42)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="927.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="901" width="0.0216%" height="15" fill="rgb(247,202,24)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="911.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="885" width="0.0216%" height="15" fill="rgb(244,173,20)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="895.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="869" width="0.0216%" height="15" fill="rgb(242,81,47)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="879.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="853" width="0.0216%" height="15" fill="rgb(231,185,54)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="863.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (1,211,856 samples, 0.02%)</title><rect x="94.9847%" y="837" width="0.0216%" height="15" fill="rgb(243,55,32)" fg:x="5331402489" fg:w="1211856"/><text x="95.2347%" y="847.50"></text></g><g><title>iced_wgpu::engine::Engine::new (9,349,659 samples, 0.17%)</title><rect x="94.8628%" y="1093" width="0.1666%" height="15" fill="rgb(208,167,19)" fg:x="5324558898" fg:w="9349659"/><text x="95.1128%" y="1103.50"></text></g><g><title>iced_wgpu::text::Pipeline::new (2,506,068 samples, 0.04%)</title><rect x="94.9847%" y="1077" width="0.0446%" height="15" fill="rgb(231,72,35)" fg:x="5331402489" fg:w="2506068"/><text x="95.2347%" y="1087.50"></text></g><g><title>iced_glyphon::cache::Cache::new (2,506,068 samples, 0.04%)</title><rect x="94.9847%" y="1061" width="0.0446%" height="15" fill="rgb(250,173,51)" fg:x="5331402489" fg:w="2506068"/><text x="95.2347%" y="1071.50"></text></g><g><title>wgpu::Device::create_shader_module (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="1045" width="0.0231%" height="15" fill="rgb(209,5,22)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="1055.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="1029" width="0.0231%" height="15" fill="rgb(250,174,19)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_shader_module (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="1013" width="0.0231%" height="15" fill="rgb(217,3,49)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="1023.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="997" width="0.0231%" height="15" fill="rgb(218,225,5)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="1007.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="981" width="0.0231%" height="15" fill="rgb(236,89,11)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="991.50"></text></g><g><title>naga::front::wgsl::parse_str (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="965" width="0.0231%" height="15" fill="rgb(206,33,28)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="975.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="949" width="0.0231%" height="15" fill="rgb(241,56,42)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="959.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="933" width="0.0231%" height="15" fill="rgb(222,44,11)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="943.50"></text></g><g><title>naga::front::wgsl::parse::Parser::type_decl (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="917" width="0.0231%" height="15" fill="rgb(234,111,20)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="927.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="901" width="0.0231%" height="15" fill="rgb(237,77,6)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="885" width="0.0231%" height="15" fill="rgb(235,111,23)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="895.50"></text></g><g><title>malloc (1,294,212 samples, 0.02%)</title><rect x="95.0063%" y="869" width="0.0231%" height="15" fill="rgb(251,135,29)" fg:x="5332614345" fg:w="1294212"/><text x="95.2563%" y="879.50"></text></g><g><title>[libEGL.so.1.1.0] (3,887,107 samples, 0.07%)</title><rect x="95.0294%" y="1029" width="0.0693%" height="15" fill="rgb(217,57,1)" fg:x="5333908557" fg:w="3887107"/><text x="95.2794%" y="1039.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,887,107 samples, 0.07%)</title><rect x="95.0294%" y="1013" width="0.0693%" height="15" fill="rgb(249,119,31)" fg:x="5333908557" fg:w="3887107"/><text x="95.2794%" y="1023.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,887,107 samples, 0.07%)</title><rect x="95.0294%" y="997" width="0.0693%" height="15" fill="rgb(233,164,33)" fg:x="5333908557" fg:w="3887107"/><text x="95.2794%" y="1007.50"></text></g><g><title>[libnvidia-egl-wayland.so.1.1.19] (3,887,107 samples, 0.07%)</title><rect x="95.0294%" y="981" width="0.0693%" height="15" fill="rgb(250,217,43)" fg:x="5333908557" fg:w="3887107"/><text x="95.2794%" y="991.50"></text></g><g><title>wl_display_roundtrip_queue (3,887,107 samples, 0.07%)</title><rect x="95.0294%" y="965" width="0.0693%" height="15" fill="rgb(232,154,50)" fg:x="5333908557" fg:w="3887107"/><text x="95.2794%" y="975.50"></text></g><g><title>wl_display_dispatch_queue_pending (3,887,107 samples, 0.07%)</title><rect x="95.0294%" y="949" width="0.0693%" height="15" fill="rgb(227,190,8)" fg:x="5333908557" fg:w="3887107"/><text x="95.2794%" y="959.50"></text></g><g><title>cfree (3,887,107 samples, 0.07%)</title><rect x="95.0294%" y="933" width="0.0693%" height="15" fill="rgb(209,217,32)" fg:x="5333908557" fg:w="3887107"/><text x="95.2794%" y="943.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (687,643 samples, 0.01%)</title><rect x="95.0986%" y="805" width="0.0123%" height="15" fill="rgb(243,203,50)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="815.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (687,643 samples, 0.01%)</title><rect x="95.0986%" y="789" width="0.0123%" height="15" fill="rgb(232,152,27)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="799.50"></text></g><g><title>dlclose (687,643 samples, 0.01%)</title><rect x="95.0986%" y="773" width="0.0123%" height="15" fill="rgb(240,34,29)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="783.50"></text></g><g><title>[libc.so.6] (687,643 samples, 0.01%)</title><rect x="95.0986%" y="757" width="0.0123%" height="15" fill="rgb(215,185,52)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (687,643 samples, 0.01%)</title><rect x="95.0986%" y="741" width="0.0123%" height="15" fill="rgb(240,89,49)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="751.50"></text></g><g><title>_dl_catch_exception (687,643 samples, 0.01%)</title><rect x="95.0986%" y="725" width="0.0123%" height="15" fill="rgb(225,12,52)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (687,643 samples, 0.01%)</title><rect x="95.0986%" y="709" width="0.0123%" height="15" fill="rgb(239,128,45)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (687,643 samples, 0.01%)</title><rect x="95.0986%" y="693" width="0.0123%" height="15" fill="rgb(211,78,47)" fg:x="5337795664" fg:w="687643"/><text x="95.3486%" y="703.50"></text></g><g><title>dlopen (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="805" width="0.0554%" height="15" fill="rgb(232,31,21)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="815.50"></text></g><g><title>[libc.so.6] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="789" width="0.0554%" height="15" fill="rgb(222,168,14)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="773" width="0.0554%" height="15" fill="rgb(209,128,24)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="783.50"></text></g><g><title>_dl_catch_exception (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="757" width="0.0554%" height="15" fill="rgb(249,35,13)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="767.50"></text></g><g><title>[libc.so.6] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="741" width="0.0554%" height="15" fill="rgb(218,7,2)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="725" width="0.0554%" height="15" fill="rgb(238,107,27)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="735.50"></text></g><g><title>_dl_catch_exception (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="709" width="0.0554%" height="15" fill="rgb(217,88,38)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="693" width="0.0554%" height="15" fill="rgb(230,207,0)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="703.50"></text></g><g><title>_dl_catch_exception (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="677" width="0.0554%" height="15" fill="rgb(249,64,54)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="661" width="0.0554%" height="15" fill="rgb(231,7,11)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="645" width="0.0554%" height="15" fill="rgb(205,149,21)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="629" width="0.0554%" height="15" fill="rgb(215,126,34)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="613" width="0.0554%" height="15" fill="rgb(241,132,45)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="597" width="0.0554%" height="15" fill="rgb(252,69,32)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="581" width="0.0554%" height="15" fill="rgb(232,204,19)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,111,656 samples, 0.06%)</title><rect x="95.1109%" y="565" width="0.0554%" height="15" fill="rgb(249,15,47)" fg:x="5338483307" fg:w="3111656"/><text x="95.3609%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (7,504,665 samples, 0.13%)</title><rect x="95.1663%" y="645" width="0.1337%" height="15" fill="rgb(209,227,23)" fg:x="5341594963" fg:w="7504665"/><text x="95.4163%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (7,504,665 samples, 0.13%)</title><rect x="95.1663%" y="629" width="0.1337%" height="15" fill="rgb(248,92,24)" fg:x="5341594963" fg:w="7504665"/><text x="95.4163%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (7,504,665 samples, 0.13%)</title><rect x="95.1663%" y="613" width="0.1337%" height="15" fill="rgb(247,59,2)" fg:x="5341594963" fg:w="7504665"/><text x="95.4163%" y="623.50"></text></g><g><title>NvGlEglApiInit (10,440,603 samples, 0.19%)</title><rect x="95.1663%" y="709" width="0.1860%" height="15" fill="rgb(221,30,5)" fg:x="5341594963" fg:w="10440603"/><text x="95.4163%" y="719.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (10,440,603 samples, 0.19%)</title><rect x="95.1663%" y="693" width="0.1860%" height="15" fill="rgb(208,108,53)" fg:x="5341594963" fg:w="10440603"/><text x="95.4163%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (10,440,603 samples, 0.19%)</title><rect x="95.1663%" y="677" width="0.1860%" height="15" fill="rgb(211,183,26)" fg:x="5341594963" fg:w="10440603"/><text x="95.4163%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (10,440,603 samples, 0.19%)</title><rect x="95.1663%" y="661" width="0.1860%" height="15" fill="rgb(232,132,4)" fg:x="5341594963" fg:w="10440603"/><text x="95.4163%" y="671.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="645" width="0.0523%" height="15" fill="rgb(253,128,37)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="655.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="629" width="0.0523%" height="15" fill="rgb(221,58,24)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="639.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="613" width="0.0523%" height="15" fill="rgb(230,54,45)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="623.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="597" width="0.0523%" height="15" fill="rgb(254,21,18)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="607.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="581" width="0.0523%" height="15" fill="rgb(221,108,0)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="591.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="565" width="0.0523%" height="15" fill="rgb(206,95,1)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="575.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="549" width="0.0523%" height="15" fill="rgb(237,52,5)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="559.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="533" width="0.0523%" height="15" fill="rgb(218,150,34)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="543.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="517" width="0.0523%" height="15" fill="rgb(235,194,28)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="527.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="501" width="0.0523%" height="15" fill="rgb(245,92,18)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="511.50"></text></g><g><title>[libnvidia-gpucomp.so.575.64] (2,935,938 samples, 0.05%)</title><rect x="95.3000%" y="485" width="0.0523%" height="15" fill="rgb(253,203,53)" fg:x="5349099628" fg:w="2935938"/><text x="95.5500%" y="495.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="949" width="0.3113%" height="15" fill="rgb(249,185,47)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="959.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="933" width="0.3113%" height="15" fill="rgb(252,194,52)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="943.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="917" width="0.3113%" height="15" fill="rgb(210,53,36)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="927.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="901" width="0.3113%" height="15" fill="rgb(237,37,25)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="911.50"></text></g><g><title>pthread_once (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="885" width="0.3113%" height="15" fill="rgb(242,116,27)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="895.50"></text></g><g><title>[libc.so.6] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="869" width="0.3113%" height="15" fill="rgb(213,185,26)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="879.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="853" width="0.3113%" height="15" fill="rgb(225,204,8)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="863.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="837" width="0.3113%" height="15" fill="rgb(254,111,37)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="847.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (17,472,106 samples, 0.31%)</title><rect x="95.0986%" y="821" width="0.3113%" height="15" fill="rgb(242,35,9)" fg:x="5337795664" fg:w="17472106"/><text x="95.3486%" y="831.50"></text></g><g><title>loadEGLExternalPlatform (13,672,807 samples, 0.24%)</title><rect x="95.1663%" y="805" width="0.2436%" height="15" fill="rgb(232,138,49)" fg:x="5341594963" fg:w="13672807"/><text x="95.4163%" y="815.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (13,672,807 samples, 0.24%)</title><rect x="95.1663%" y="789" width="0.2436%" height="15" fill="rgb(247,56,4)" fg:x="5341594963" fg:w="13672807"/><text x="95.4163%" y="799.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (13,672,807 samples, 0.24%)</title><rect x="95.1663%" y="773" width="0.2436%" height="15" fill="rgb(226,179,17)" fg:x="5341594963" fg:w="13672807"/><text x="95.4163%" y="783.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (13,672,807 samples, 0.24%)</title><rect x="95.1663%" y="757" width="0.2436%" height="15" fill="rgb(216,163,45)" fg:x="5341594963" fg:w="13672807"/><text x="95.4163%" y="767.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (13,672,807 samples, 0.24%)</title><rect x="95.1663%" y="741" width="0.2436%" height="15" fill="rgb(211,157,3)" fg:x="5341594963" fg:w="13672807"/><text x="95.4163%" y="751.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (13,672,807 samples, 0.24%)</title><rect x="95.1663%" y="725" width="0.2436%" height="15" fill="rgb(234,44,20)" fg:x="5341594963" fg:w="13672807"/><text x="95.4163%" y="735.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="709" width="0.0576%" height="15" fill="rgb(254,138,23)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="719.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="693" width="0.0576%" height="15" fill="rgb(206,119,39)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="703.50"></text></g><g><title>dlopen (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="677" width="0.0576%" height="15" fill="rgb(231,105,52)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="687.50"></text></g><g><title>[libc.so.6] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="661" width="0.0576%" height="15" fill="rgb(250,20,5)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="645" width="0.0576%" height="15" fill="rgb(215,198,30)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="655.50"></text></g><g><title>_dl_catch_exception (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="629" width="0.0576%" height="15" fill="rgb(246,142,8)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="639.50"></text></g><g><title>[libc.so.6] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="613" width="0.0576%" height="15" fill="rgb(243,26,38)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="597" width="0.0576%" height="15" fill="rgb(205,133,28)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="607.50"></text></g><g><title>_dl_catch_exception (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="581" width="0.0576%" height="15" fill="rgb(212,34,0)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="565" width="0.0576%" height="15" fill="rgb(251,226,22)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="575.50"></text></g><g><title>_dl_catch_exception (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="549" width="0.0576%" height="15" fill="rgb(252,119,9)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="533" width="0.0576%" height="15" fill="rgb(213,150,50)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="517" width="0.0576%" height="15" fill="rgb(212,24,39)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,232,204 samples, 0.06%)</title><rect x="95.3523%" y="501" width="0.0576%" height="15" fill="rgb(213,46,39)" fg:x="5352035566" fg:w="3232204"/><text x="95.6023%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (26,151,479 samples, 0.47%)</title><rect x="95.4099%" y="773" width="0.4659%" height="15" fill="rgb(239,106,12)" fg:x="5355267770" fg:w="26151479"/><text x="95.6599%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (22,838,596 samples, 0.41%)</title><rect x="95.4689%" y="757" width="0.4069%" height="15" fill="rgb(249,229,21)" fg:x="5358580653" fg:w="22838596"/><text x="95.7189%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (22,838,596 samples, 0.41%)</title><rect x="95.4689%" y="741" width="0.4069%" height="15" fill="rgb(212,158,3)" fg:x="5358580653" fg:w="22838596"/><text x="95.7189%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6,426,863 samples, 0.11%)</title><rect x="95.7613%" y="725" width="0.1145%" height="15" fill="rgb(253,26,48)" fg:x="5374992386" fg:w="6426863"/><text x="96.0113%" y="735.50"></text></g><g><title>eglQueryString (47,612,282 samples, 0.85%)</title><rect x="95.0986%" y="1029" width="0.8483%" height="15" fill="rgb(238,178,20)" fg:x="5337795664" fg:w="47612282"/><text x="95.3486%" y="1039.50"></text></g><g><title>pthread_once (47,612,282 samples, 0.85%)</title><rect x="95.0986%" y="1013" width="0.8483%" height="15" fill="rgb(208,86,15)" fg:x="5337795664" fg:w="47612282"/><text x="95.3486%" y="1023.50"></text></g><g><title>[libc.so.6] (47,612,282 samples, 0.85%)</title><rect x="95.0986%" y="997" width="0.8483%" height="15" fill="rgb(239,42,53)" fg:x="5337795664" fg:w="47612282"/><text x="95.3486%" y="1007.50"></text></g><g><title>[libEGL.so.1.1.0] (47,612,282 samples, 0.85%)</title><rect x="95.0986%" y="981" width="0.8483%" height="15" fill="rgb(245,226,8)" fg:x="5337795664" fg:w="47612282"/><text x="95.3486%" y="991.50"></text></g><g><title>[libEGL.so.1.1.0] (47,612,282 samples, 0.85%)</title><rect x="95.0986%" y="965" width="0.8483%" height="15" fill="rgb(216,176,32)" fg:x="5337795664" fg:w="47612282"/><text x="95.3486%" y="975.50"></text></g><g><title>dlopen (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="949" width="0.5370%" height="15" fill="rgb(231,186,21)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="959.50"></text></g><g><title>[libc.so.6] (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="933" width="0.5370%" height="15" fill="rgb(205,95,49)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="943.50"></text></g><g><title>[ld-linux-x86-64.so.2] (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="917" width="0.5370%" height="15" fill="rgb(217,145,8)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="927.50"></text></g><g><title>_dl_catch_exception (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="901" width="0.5370%" height="15" fill="rgb(239,144,48)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="911.50"></text></g><g><title>[libc.so.6] (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="885" width="0.5370%" height="15" fill="rgb(214,189,23)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="869" width="0.5370%" height="15" fill="rgb(229,157,17)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="879.50"></text></g><g><title>_dl_catch_exception (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="853" width="0.5370%" height="15" fill="rgb(230,5,48)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="837" width="0.5370%" height="15" fill="rgb(224,156,48)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="847.50"></text></g><g><title>_dl_catch_exception (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="821" width="0.5370%" height="15" fill="rgb(223,14,29)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="805" width="0.5370%" height="15" fill="rgb(229,96,36)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (30,140,176 samples, 0.54%)</title><rect x="95.4099%" y="789" width="0.5370%" height="15" fill="rgb(231,102,53)" fg:x="5355267770" fg:w="30140176"/><text x="95.6599%" y="799.50"></text></g><g><title>_GLOBAL__sub_I_eh_alloc.cc (3,988,697 samples, 0.07%)</title><rect x="95.8758%" y="773" width="0.0711%" height="15" fill="rgb(210,77,38)" fg:x="5381419249" fg:w="3988697"/><text x="96.1258%" y="783.50"></text></g><g><title>__static_initialization_and_destruction_0 (3,988,697 samples, 0.07%)</title><rect x="95.8758%" y="757" width="0.0711%" height="15" fill="rgb(235,131,6)" fg:x="5381419249" fg:w="3988697"/><text x="96.1258%" y="767.50"></text></g><g><title>_GLOBAL__sub_I_eh_alloc.cc (3,988,697 samples, 0.07%)</title><rect x="95.8758%" y="741" width="0.0711%" height="15" fill="rgb(252,55,38)" fg:x="5381419249" fg:w="3988697"/><text x="96.1258%" y="751.50"></text></g><g><title>malloc (3,988,697 samples, 0.07%)</title><rect x="95.8758%" y="725" width="0.0711%" height="15" fill="rgb(246,38,14)" fg:x="5381419249" fg:w="3988697"/><text x="96.1258%" y="735.50"></text></g><g><title>libloading::os::unix::Library::open (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="1029" width="0.0271%" height="15" fill="rgb(242,27,5)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="1039.50"></text></g><g><title>dlopen (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="1013" width="0.0271%" height="15" fill="rgb(228,65,35)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="1023.50"></text></g><g><title>[libc.so.6] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="997" width="0.0271%" height="15" fill="rgb(245,93,11)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="1007.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="981" width="0.0271%" height="15" fill="rgb(213,1,31)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="991.50"></text></g><g><title>_dl_catch_exception (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="965" width="0.0271%" height="15" fill="rgb(237,205,14)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="975.50"></text></g><g><title>[libc.so.6] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="949" width="0.0271%" height="15" fill="rgb(232,118,45)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="959.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="933" width="0.0271%" height="15" fill="rgb(218,5,6)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="943.50"></text></g><g><title>_dl_catch_exception (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="917" width="0.0271%" height="15" fill="rgb(251,87,51)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="927.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="901" width="0.0271%" height="15" fill="rgb(207,225,20)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="911.50"></text></g><g><title>_dl_catch_exception (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="885" width="0.0271%" height="15" fill="rgb(222,78,54)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="869" width="0.0271%" height="15" fill="rgb(232,85,16)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="853" width="0.0271%" height="15" fill="rgb(244,25,33)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,518,858 samples, 0.03%)</title><rect x="95.9469%" y="837" width="0.0271%" height="15" fill="rgb(233,24,36)" fg:x="5385407946" fg:w="1518858"/><text x="96.1969%" y="847.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (66,899,616 samples, 1.19%)</title><rect x="95.0294%" y="1045" width="1.1919%" height="15" fill="rgb(253,49,54)" fg:x="5333908557" fg:w="66899616"/><text x="95.2794%" y="1055.50"></text></g><g><title>wgpu_hal::gles::egl::Inner::create (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="1029" width="0.2473%" height="15" fill="rgb(245,12,22)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="1039.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="1013" width="0.2473%" height="15" fill="rgb(253,141,28)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="1023.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="997" width="0.2473%" height="15" fill="rgb(225,207,27)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="1007.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="981" width="0.2473%" height="15" fill="rgb(220,84,2)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="991.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="965" width="0.2473%" height="15" fill="rgb(224,37,37)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="975.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="949" width="0.2473%" height="15" fill="rgb(220,143,18)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="959.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="933" width="0.2473%" height="15" fill="rgb(210,88,33)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="943.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="917" width="0.2473%" height="15" fill="rgb(219,87,51)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="927.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="901" width="0.2473%" height="15" fill="rgb(211,7,35)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="911.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="885" width="0.2473%" height="15" fill="rgb(232,77,2)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="895.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="869" width="0.2473%" height="15" fill="rgb(249,94,25)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="879.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,881,369 samples, 0.25%)</title><rect x="95.9740%" y="853" width="0.2473%" height="15" fill="rgb(215,112,2)" fg:x="5386926804" fg:w="13881369"/><text x="96.2240%" y="863.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (10,276,593 samples, 0.18%)</title><rect x="96.0382%" y="837" width="0.1831%" height="15" fill="rgb(226,115,48)" fg:x="5390531580" fg:w="10276593"/><text x="96.2882%" y="847.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="821" width="0.0669%" height="15" fill="rgb(249,196,10)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="831.50"></text></g><g><title>dlsym (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="805" width="0.0669%" height="15" fill="rgb(237,109,14)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="815.50"></text></g><g><title>[libc.so.6] (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="789" width="0.0669%" height="15" fill="rgb(217,103,53)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="773" width="0.0669%" height="15" fill="rgb(244,137,9)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="783.50"></text></g><g><title>_dl_catch_exception (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="757" width="0.0669%" height="15" fill="rgb(227,201,3)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="767.50"></text></g><g><title>[libc.so.6] (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="741" width="0.0669%" height="15" fill="rgb(243,94,6)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="751.50"></text></g><g><title>[libc.so.6] (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="725" width="0.0669%" height="15" fill="rgb(235,118,5)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="709" width="0.0669%" height="15" fill="rgb(247,10,30)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,754,385 samples, 0.07%)</title><rect x="96.1544%" y="693" width="0.0669%" height="15" fill="rgb(205,26,28)" fg:x="5397053788" fg:w="3754385"/><text x="96.4044%" y="703.50"></text></g><g><title>ash::entry::Entry::load (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="1029" width="0.0453%" height="15" fill="rgb(206,99,35)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="1039.50"></text></g><g><title>libloading::os::unix::Library::open (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="1013" width="0.0453%" height="15" fill="rgb(238,130,40)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="1023.50"></text></g><g><title>dlopen (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="997" width="0.0453%" height="15" fill="rgb(224,126,31)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="1007.50"></text></g><g><title>[libc.so.6] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="981" width="0.0453%" height="15" fill="rgb(254,105,17)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="991.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="965" width="0.0453%" height="15" fill="rgb(216,87,36)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="975.50"></text></g><g><title>_dl_catch_exception (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="949" width="0.0453%" height="15" fill="rgb(240,21,12)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="959.50"></text></g><g><title>[libc.so.6] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="933" width="0.0453%" height="15" fill="rgb(245,192,34)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="943.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="917" width="0.0453%" height="15" fill="rgb(226,100,49)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="927.50"></text></g><g><title>_dl_catch_exception (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="901" width="0.0453%" height="15" fill="rgb(245,188,27)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="911.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="885" width="0.0453%" height="15" fill="rgb(212,170,8)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="895.50"></text></g><g><title>_dl_catch_exception (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="869" width="0.0453%" height="15" fill="rgb(217,113,29)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="853" width="0.0453%" height="15" fill="rgb(237,30,3)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="837" width="0.0453%" height="15" fill="rgb(227,19,28)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="821" width="0.0453%" height="15" fill="rgb(239,172,45)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="805" width="0.0453%" height="15" fill="rgb(254,55,39)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,541,852 samples, 0.05%)</title><rect x="96.2213%" y="789" width="0.0453%" height="15" fill="rgb(249,208,12)" fg:x="5400808173" fg:w="2541852"/><text x="96.4713%" y="799.50"></text></g><g><title>wgpu::Instance::new (70,381,844 samples, 1.25%)</title><rect x="95.0294%" y="1093" width="1.2539%" height="15" fill="rgb(240,52,13)" fg:x="5333908557" fg:w="70381844"/><text x="95.2794%" y="1103.50"></text></g><g><title>wgpu_core::global::Global&lt;G&gt;::new (70,381,844 samples, 1.25%)</title><rect x="95.0294%" y="1077" width="1.2539%" height="15" fill="rgb(252,149,13)" fg:x="5333908557" fg:w="70381844"/><text x="95.2794%" y="1087.50"></text></g><g><title>wgpu_core::instance::Instance::new (70,381,844 samples, 1.25%)</title><rect x="95.0294%" y="1061" width="1.2539%" height="15" fill="rgb(232,81,48)" fg:x="5333908557" fg:w="70381844"/><text x="95.2794%" y="1071.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (3,482,228 samples, 0.06%)</title><rect x="96.2213%" y="1045" width="0.0620%" height="15" fill="rgb(222,144,2)" fg:x="5400808173" fg:w="3482228"/><text x="96.4713%" y="1055.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::desired_extensions (940,376 samples, 0.02%)</title><rect x="96.2665%" y="1029" width="0.0168%" height="15" fill="rgb(216,81,32)" fg:x="5403350025" fg:w="940376"/><text x="96.5165%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (940,376 samples, 0.02%)</title><rect x="96.2665%" y="1013" width="0.0168%" height="15" fill="rgb(244,78,51)" fg:x="5403350025" fg:w="940376"/><text x="96.5165%" y="1023.50"></text></g><g><title>futures_executor::local_pool::block_on (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1269" width="1.4919%" height="15" fill="rgb(217,66,21)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1279.50"></text></g><g><title>futures_executor::local_pool::run_executor (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1253" width="1.4919%" height="15" fill="rgb(247,101,42)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1237" width="1.4919%" height="15" fill="rgb(227,81,39)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1221" width="1.4919%" height="15" fill="rgb(220,223,44)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1231.50"></text></g><g><title>futures_executor::local_pool::run_executor::_{{closure}} (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1205" width="1.4919%" height="15" fill="rgb(205,218,2)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1215.50"></text></g><g><title>futures_executor::local_pool::block_on::_{{closure}} (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1189" width="1.4919%" height="15" fill="rgb(212,207,28)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1199.50"></text></g><g><title>&lt;iced_winit::program::run::Runner&lt;Message,F,C&gt; as winit::application::ApplicationHandler&lt;iced_runtime::Action&lt;Message&gt;&gt;&gt;::resumed::_{{closure}} (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1173" width="1.4919%" height="15" fill="rgb(224,12,41)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1183.50"></text></g><g><title>&lt;iced_renderer::fallback::Compositor&lt;A,B&gt; as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1157" width="1.4919%" height="15" fill="rgb(216,118,12)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1167.50"></text></g><g><title>&lt;iced_wgpu::window::compositor::Compositor as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1141" width="1.4919%" height="15" fill="rgb(252,97,46)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1151.50"></text></g><g><title>iced_wgpu::window::compositor::new::_{{closure}} (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1125" width="1.4919%" height="15" fill="rgb(244,206,19)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1135.50"></text></g><g><title>iced_wgpu::window::compositor::Compositor::request::_{{closure}} (83,740,757 samples, 1.49%)</title><rect x="94.8415%" y="1109" width="1.4919%" height="15" fill="rgb(231,84,31)" fg:x="5323362862" fg:w="83740757"/><text x="95.0915%" y="1119.50"></text></g><g><title>wgpu::Instance::request_adapter (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="1093" width="0.0501%" height="15" fill="rgb(244,133,0)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="1103.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="1077" width="0.0501%" height="15" fill="rgb(223,15,50)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="1087.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="1061" width="0.0501%" height="15" fill="rgb(250,118,49)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="1071.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter::gather (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="1045" width="0.0501%" height="15" fill="rgb(248,25,38)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="1029" width="0.0501%" height="15" fill="rgb(215,70,14)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="1039.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="1013" width="0.0501%" height="15" fill="rgb(215,28,15)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="1023.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="997" width="0.0501%" height="15" fill="rgb(243,6,28)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="981" width="0.0501%" height="15" fill="rgb(222,130,1)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="965" width="0.0501%" height="15" fill="rgb(236,166,44)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="949" width="0.0501%" height="15" fill="rgb(221,108,14)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="959.50"></text></g><g><title>wl_display_roundtrip_queue (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="933" width="0.0501%" height="15" fill="rgb(252,3,45)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="943.50"></text></g><g><title>wl_display_dispatch_queue_pending (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="917" width="0.0501%" height="15" fill="rgb(237,68,30)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="927.50"></text></g><g><title>[libwayland-client.so.0.23.1] (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="901" width="0.0501%" height="15" fill="rgb(211,79,22)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="911.50"></text></g><g><title>[libwayland-client.so.0.23.1] (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="885" width="0.0501%" height="15" fill="rgb(252,185,21)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="895.50"></text></g><g><title>[libffi.so.8.2.0] (2,813,218 samples, 0.05%)</title><rect x="96.2833%" y="869" width="0.0501%" height="15" fill="rgb(225,189,26)" fg:x="5404290401" fg:w="2813218"/><text x="96.5333%" y="879.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run_app (3,678,347,394 samples, 65.53%)</title><rect x="30.8840%" y="1381" width="65.5338%" height="15" fill="rgb(241,30,40)" fg:x="1733490345" fg:w="3678347394"/><text x="31.1340%" y="1391.50">winit::event_loop::EventLoop&lt;T&gt;::run_app</text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::run (3,678,347,394 samples, 65.53%)</title><rect x="30.8840%" y="1365" width="65.5338%" height="15" fill="rgb(235,215,44)" fg:x="1733490345" fg:w="3678347394"/><text x="31.1340%" y="1375.50">winit::platform_impl::linux::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::run_on_demand (3,678,347,394 samples, 65.53%)</title><rect x="30.8840%" y="1349" width="65.5338%" height="15" fill="rgb(205,8,29)" fg:x="1733490345" fg:w="3678347394"/><text x="31.1340%" y="1359.50">winit::platform_impl::linux::EventLoop&lt;T&gt;::run_on_demand</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::run_on_demand (3,678,347,394 samples, 65.53%)</title><rect x="30.8840%" y="1333" width="65.5338%" height="15" fill="rgb(241,137,42)" fg:x="1733490345" fg:w="3678347394"/><text x="31.1340%" y="1343.50">winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::run_on_demand</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::pump_events (3,678,347,394 samples, 65.53%)</title><rect x="30.8840%" y="1317" width="65.5338%" height="15" fill="rgb(237,155,2)" fg:x="1733490345" fg:w="3678347394"/><text x="31.1340%" y="1327.50">winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::pump_events</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration (88,474,877 samples, 1.58%)</title><rect x="94.8415%" y="1301" width="1.5763%" height="15" fill="rgb(245,29,42)" fg:x="5323362862" fg:w="88474877"/><text x="95.0915%" y="1311.50"></text></g><g><title>&lt;iced_winit::program::run::Runner&lt;Message,F,C&gt; as winit::application::ApplicationHandler&lt;iced_runtime::Action&lt;Message&gt;&gt;&gt;::resumed (88,474,877 samples, 1.58%)</title><rect x="94.8415%" y="1285" width="1.5763%" height="15" fill="rgb(234,101,35)" fg:x="5323362862" fg:w="88474877"/><text x="95.0915%" y="1295.50"></text></g><g><title>winit::event_loop::ActiveEventLoop::create_window (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1269" width="0.0843%" height="15" fill="rgb(228,64,37)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1279.50"></text></g><g><title>winit::platform_impl::linux::Window::new (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1253" width="0.0843%" height="15" fill="rgb(217,214,36)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1263.50"></text></g><g><title>winit::platform_impl::linux::wayland::window::Window::new (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1237" width="0.0843%" height="15" fill="rgb(243,70,3)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1247.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::roundtrip (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1221" width="0.0843%" height="15" fill="rgb(253,158,52)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1231.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::blocking_dispatch (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1205" width="0.0843%" height="15" fill="rgb(234,111,54)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1215.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatch_pending (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1189" width="0.0843%" height="15" fill="rgb(217,70,32)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1199.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatching_impl (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1173" width="0.0843%" height="15" fill="rgb(234,18,33)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1183.50"></text></g><g><title>wayland_client::event_queue::queue_callback (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1157" width="0.0843%" height="15" fill="rgb(234,12,49)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1167.50"></text></g><g><title>winit::platform_impl::linux::wayland::seat::keyboard::&lt;impl wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_keyboard::WlKeyboard,winit::platform_impl::linux::wayland::seat::keyboard::KeyboardData&gt; for winit::platform_impl::linux::wayland::state::WinitState&gt;::event (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1141" width="0.0843%" height="15" fill="rgb(236,10,21)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1151.50"></text></g><g><title>winit::platform_impl::linux::common::xkb::Context::set_keymap_from_fd (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1125" width="0.0843%" height="15" fill="rgb(248,182,45)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1135.50"></text></g><g><title>winit::platform_impl::linux::common::xkb::keymap::XkbKeymap::from_fd (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1109" width="0.0843%" height="15" fill="rgb(217,95,36)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1119.50"></text></g><g><title>xkb_keymap_new_from_buffer (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1093" width="0.0843%" height="15" fill="rgb(212,110,31)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1103.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1077" width="0.0843%" height="15" fill="rgb(206,32,53)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1087.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (4,734,120 samples, 0.08%)</title><rect x="96.3334%" y="1061" width="0.0843%" height="15" fill="rgb(246,141,37)" fg:x="5407103619" fg:w="4734120"/><text x="96.5834%" y="1071.50"></text></g><g><title>wayland_client::conn::Connection::connect_to_env (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1317" width="0.0107%" height="15" fill="rgb(219,16,7)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1327.50"></text></g><g><title>wayland_backend::sys::client::Backend::connect (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1301" width="0.0107%" height="15" fill="rgb(230,205,45)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1311.50"></text></g><g><title>wayland_sys::client::is_lib_available (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1285" width="0.0107%" height="15" fill="rgb(231,43,49)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1295.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1269" width="0.0107%" height="15" fill="rgb(212,106,34)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1279.50"></text></g><g><title>once_cell::imp::initialize_or_wait (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1253" width="0.0107%" height="15" fill="rgb(206,83,17)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1263.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1237" width="0.0107%" height="15" fill="rgb(244,154,49)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1221" width="0.0107%" height="15" fill="rgb(244,149,49)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1231.50"></text></g><g><title>wayland_sys::client::WaylandClient::open (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1205" width="0.0107%" height="15" fill="rgb(227,134,18)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1215.50"></text></g><g><title>libloading::os::unix::Library::open (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1189" width="0.0107%" height="15" fill="rgb(237,116,36)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1199.50"></text></g><g><title>dlopen (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1173" width="0.0107%" height="15" fill="rgb(205,129,40)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1183.50"></text></g><g><title>[libc.so.6] (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1157" width="0.0107%" height="15" fill="rgb(236,178,4)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1167.50"></text></g><g><title>[ld-linux-x86-64.so.2] (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1141" width="0.0107%" height="15" fill="rgb(251,76,53)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1151.50"></text></g><g><title>_dl_catch_exception (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1125" width="0.0107%" height="15" fill="rgb(242,92,40)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1135.50"></text></g><g><title>[libc.so.6] (601,388 samples, 0.01%)</title><rect x="96.4178%" y="1109" width="0.0107%" height="15" fill="rgb(209,45,30)" fg:x="5411837739" fg:w="601388"/><text x="96.6678%" y="1119.50"></text></g><g><title>wayland_client::conn::blocking_read (664,979 samples, 0.01%)</title><rect x="96.4285%" y="1285" width="0.0118%" height="15" fill="rgb(218,157,36)" fg:x="5412439127" fg:w="664979"/><text x="96.6785%" y="1295.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::read (664,979 samples, 0.01%)</title><rect x="96.4285%" y="1269" width="0.0118%" height="15" fill="rgb(222,186,16)" fg:x="5412439127" fg:w="664979"/><text x="96.6785%" y="1279.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::read_non_dispatch (664,979 samples, 0.01%)</title><rect x="96.4285%" y="1253" width="0.0118%" height="15" fill="rgb(254,72,35)" fg:x="5412439127" fg:w="664979"/><text x="96.6785%" y="1263.50"></text></g><g><title>wl_display_read_events (664,979 samples, 0.01%)</title><rect x="96.4285%" y="1237" width="0.0118%" height="15" fill="rgb(224,25,35)" fg:x="5412439127" fg:w="664979"/><text x="96.6785%" y="1247.50"></text></g><g><title>[libwayland-client.so.0.23.1] (664,979 samples, 0.01%)</title><rect x="96.4285%" y="1221" width="0.0118%" height="15" fill="rgb(206,135,52)" fg:x="5412439127" fg:w="664979"/><text x="96.6785%" y="1231.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (784,159 samples, 0.01%)</title><rect x="96.4792%" y="1077" width="0.0140%" height="15" fill="rgb(229,174,47)" fg:x="5415284557" fg:w="784159"/><text x="96.7292%" y="1087.50"></text></g><g><title>[libc.so.6] (3,702,113,527 samples, 65.96%)</title><rect x="30.5954%" y="1541" width="65.9572%" height="15" fill="rgb(242,184,21)" fg:x="1717288719" fg:w="3702113527"/><text x="30.8454%" y="1551.50">[libc.so.6]</text></g><g><title>main (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1525" width="65.7175%" height="15" fill="rgb(213,22,45)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1535.50">main</text></g><g><title>std::rt::lang_start_internal (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1509" width="65.7175%" height="15" fill="rgb(237,81,54)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1519.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1493" width="65.7175%" height="15" fill="rgb(248,177,18)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1503.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1477" width="65.7175%" height="15" fill="rgb(254,31,16)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1487.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1461" width="65.7175%" height="15" fill="rgb(235,20,31)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1471.50">core::ops::function::FnOnce::call_once</text></g><g><title>papyrust::main (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1445" width="65.7175%" height="15" fill="rgb(240,56,43)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1455.50">papyrust::main</text></g><g><title>iced::application::Application&lt;P&gt;::run_with (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1429" width="65.7175%" height="15" fill="rgb(237,197,51)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1439.50">iced::application::Application&lt;P&gt;::run_with</text></g><g><title>iced::program::Program::run_with (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1413" width="65.7175%" height="15" fill="rgb(241,162,44)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1423.50">iced::program::Program::run_with</text></g><g><title>iced_winit::program::run (3,688,658,768 samples, 65.72%)</title><rect x="30.8351%" y="1397" width="65.7175%" height="15" fill="rgb(224,23,20)" fg:x="1730743478" fg:w="3688658768"/><text x="31.0851%" y="1407.50">iced_winit::program::run</text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (7,564,507 samples, 0.13%)</title><rect x="96.4178%" y="1381" width="0.1348%" height="15" fill="rgb(250,109,34)" fg:x="5411837739" fg:w="7564507"/><text x="96.6678%" y="1391.50"></text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::new (7,564,507 samples, 0.13%)</title><rect x="96.4178%" y="1365" width="0.1348%" height="15" fill="rgb(214,175,50)" fg:x="5411837739" fg:w="7564507"/><text x="96.6678%" y="1375.50"></text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::new_wayland_any_thread (7,564,507 samples, 0.13%)</title><rect x="96.4178%" y="1349" width="0.1348%" height="15" fill="rgb(213,182,5)" fg:x="5411837739" fg:w="7564507"/><text x="96.6678%" y="1359.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::new (7,564,507 samples, 0.13%)</title><rect x="96.4178%" y="1333" width="0.1348%" height="15" fill="rgb(209,199,19)" fg:x="5411837739" fg:w="7564507"/><text x="96.6678%" y="1343.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::roundtrip (6,963,119 samples, 0.12%)</title><rect x="96.4285%" y="1317" width="0.1241%" height="15" fill="rgb(236,224,42)" fg:x="5412439127" fg:w="6963119"/><text x="96.6785%" y="1327.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::blocking_dispatch (6,963,119 samples, 0.12%)</title><rect x="96.4285%" y="1301" width="0.1241%" height="15" fill="rgb(246,226,29)" fg:x="5412439127" fg:w="6963119"/><text x="96.6785%" y="1311.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatch_pending (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1285" width="0.1122%" height="15" fill="rgb(227,223,11)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1295.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatching_impl (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1269" width="0.1122%" height="15" fill="rgb(219,7,51)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1279.50"></text></g><g><title>wayland_client::event_queue::queue_callback (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1253" width="0.1122%" height="15" fill="rgb(245,167,10)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1263.50"></text></g><g><title>winit::platform_impl::linux::wayland::seat::&lt;impl wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_seat::WlSeat,smithay_client_toolkit::seat::SeatData&gt; for winit::platform_impl::linux::wayland::state::WinitState&gt;::event (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1237" width="0.1122%" height="15" fill="rgb(237,224,16)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1247.50"></text></g><g><title>&lt;smithay_client_toolkit::seat::SeatState as wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_seat::WlSeat,smithay_client_toolkit::seat::SeatData,D&gt;&gt;::event (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1221" width="0.1122%" height="15" fill="rgb(226,132,13)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1231.50"></text></g><g><title>winit::platform_impl::linux::wayland::seat::&lt;impl smithay_client_toolkit::seat::SeatHandler for winit::platform_impl::linux::wayland::state::WinitState&gt;::new_capability (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1205" width="0.1122%" height="15" fill="rgb(214,140,3)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1215.50"></text></g><g><title>winit::platform_impl::linux::wayland::seat::keyboard::KeyboardState::new (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1189" width="0.1122%" height="15" fill="rgb(221,177,4)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1199.50"></text></g><g><title>winit::platform_impl::linux::common::xkb::Context::new (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1173" width="0.1122%" height="15" fill="rgb(238,139,3)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1183.50"></text></g><g><title>winit::platform_impl::linux::common::xkb::compose::XkbComposeTable::new (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1157" width="0.1122%" height="15" fill="rgb(216,17,39)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1167.50"></text></g><g><title>xkb_compose_table_new_from_locale (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1141" width="0.1122%" height="15" fill="rgb(238,120,9)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1151.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1125" width="0.1122%" height="15" fill="rgb(244,92,53)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1135.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (6,298,140 samples, 0.11%)</title><rect x="96.4403%" y="1109" width="0.1122%" height="15" fill="rgb(224,148,33)" fg:x="5413104106" fg:w="6298140"/><text x="96.6903%" y="1119.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (5,669,709 samples, 0.10%)</title><rect x="96.4515%" y="1093" width="0.1010%" height="15" fill="rgb(243,6,36)" fg:x="5413732537" fg:w="5669709"/><text x="96.7015%" y="1103.50"></text></g><g><title>xkb_keysym_from_name (3,333,530 samples, 0.06%)</title><rect x="96.4931%" y="1077" width="0.0594%" height="15" fill="rgb(230,102,11)" fg:x="5416068716" fg:w="3333530"/><text x="96.7431%" y="1087.50"></text></g><g><title>_start (3,702,655,425 samples, 65.97%)</title><rect x="30.5954%" y="1573" width="65.9668%" height="15" fill="rgb(234,148,36)" fg:x="1717288719" fg:w="3702655425"/><text x="30.8454%" y="1583.50">_start</text></g><g><title>__libc_start_main (3,702,655,425 samples, 65.97%)</title><rect x="30.5954%" y="1557" width="65.9668%" height="15" fill="rgb(251,153,25)" fg:x="1717288719" fg:w="3702655425"/><text x="30.8454%" y="1567.50">__libc_start_main</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,401,427 samples, 0.06%)</title><rect x="96.5622%" y="1573" width="0.0606%" height="15" fill="rgb(215,129,8)" fg:x="5419944144" fg:w="3401427"/><text x="96.8122%" y="1583.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,430,416 samples, 0.03%)</title><rect x="96.6228%" y="1573" width="0.0255%" height="15" fill="rgb(224,128,35)" fg:x="5423345571" fg:w="1430416"/><text x="96.8728%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_core::event::Event&gt; (2,910,428 samples, 0.05%)</title><rect x="96.6483%" y="1573" width="0.0519%" height="15" fill="rgb(237,56,52)" fg:x="5424775987" fg:w="2910428"/><text x="96.8983%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_widget::row::Row&lt;papyrust::Message&gt;&gt; (2,662,575 samples, 0.05%)</title><rect x="96.7001%" y="1573" width="0.0474%" height="15" fill="rgb(234,213,19)" fg:x="5427686415" fg:w="2662575"/><text x="96.9501%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::wgpu_core::CommandEncoder&gt; (2,703,225 samples, 0.05%)</title><rect x="96.7476%" y="1573" width="0.0482%" height="15" fill="rgb(252,82,23)" fg:x="5430348990" fg:w="2703225"/><text x="96.9976%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::resource::BufferMapState&lt;wgpu_hal::vulkan::Api&gt;&gt; (3,592,420 samples, 0.06%)</title><rect x="96.7957%" y="1573" width="0.0640%" height="15" fill="rgb(254,201,21)" fg:x="5433052215" fg:w="3592420"/><text x="97.0457%" y="1583.50"></text></g><g><title>cosmic_text::layout::LayoutGlyph::physical (3,639,528 samples, 0.06%)</title><rect x="96.8597%" y="1573" width="0.0648%" height="15" fill="rgb(250,186,11)" fg:x="5436644635" fg:w="3639528"/><text x="97.1097%" y="1583.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,928,051 samples, 0.03%)</title><rect x="96.9246%" y="1573" width="0.0344%" height="15" fill="rgb(211,174,5)" fg:x="5440284163" fg:w="1928051"/><text x="97.1746%" y="1583.50"></text></g><g><title>exif::jpeg::is_jpeg (2,182,106 samples, 0.04%)</title><rect x="96.9679%" y="1573" width="0.0389%" height="15" fill="rgb(214,121,10)" fg:x="5442713718" fg:w="2182106"/><text x="97.2179%" y="1583.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (4,118,051 samples, 0.07%)</title><rect x="97.0067%" y="1573" width="0.0734%" height="15" fill="rgb(241,66,2)" fg:x="5444895824" fg:w="4118051"/><text x="97.2567%" y="1583.50"></text></g><g><title>iced_core::widget::Widget::tag (4,168,953 samples, 0.07%)</title><rect x="97.0801%" y="1573" width="0.0743%" height="15" fill="rgb(220,167,19)" fg:x="5449013875" fg:w="4168953"/><text x="97.3301%" y="1583.50"></text></g><g><title>iced_wgpu::Renderer::prepare (2,321,340 samples, 0.04%)</title><rect x="97.1544%" y="1573" width="0.0414%" height="15" fill="rgb(231,54,50)" fg:x="5453182828" fg:w="2321340"/><text x="97.4044%" y="1583.50"></text></g><g><title>iced_wgpu::text::Pipeline::prepare (4,269,321 samples, 0.08%)</title><rect x="97.1957%" y="1573" width="0.0761%" height="15" fill="rgb(239,217,53)" fg:x="5455504168" fg:w="4269321"/><text x="97.4457%" y="1583.50"></text></g><g><title>iced_widget::scrollable::Viewport::relative_offset (3,119,366 samples, 0.06%)</title><rect x="97.2718%" y="1573" width="0.0556%" height="15" fill="rgb(248,8,0)" fg:x="5459773489" fg:w="3119366"/><text x="97.5218%" y="1583.50"></text></g><g><title>iced_wgpu::engine::Engine::new (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1269" width="0.0490%" height="15" fill="rgb(229,118,37)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1279.50"></text></g><g><title>iced_wgpu::triangle::Pipeline::new (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1253" width="0.0490%" height="15" fill="rgb(253,223,43)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1263.50"></text></g><g><title>iced_wgpu::triangle::gradient::Pipeline::new (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1237" width="0.0490%" height="15" fill="rgb(211,77,36)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1247.50"></text></g><g><title>wgpu::Device::create_shader_module (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1221" width="0.0490%" height="15" fill="rgb(219,3,53)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1231.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1205" width="0.0490%" height="15" fill="rgb(244,45,42)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_shader_module (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1189" width="0.0490%" height="15" fill="rgb(225,95,27)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1199.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1173" width="0.0490%" height="15" fill="rgb(207,74,8)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1183.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1157" width="0.0490%" height="15" fill="rgb(243,63,36)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1167.50"></text></g><g><title>naga::front::wgsl::parse_str (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1141" width="0.0490%" height="15" fill="rgb(211,180,12)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1151.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1125" width="0.0490%" height="15" fill="rgb(254,166,49)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1135.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1109" width="0.0490%" height="15" fill="rgb(205,19,0)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1119.50"></text></g><g><title>naga::front::wgsl::parse::Parser::statement (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1093" width="0.0490%" height="15" fill="rgb(224,172,32)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1103.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1077" width="0.0490%" height="15" fill="rgb(254,136,30)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1087.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1061" width="0.0490%" height="15" fill="rgb(246,19,35)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1071.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1045" width="0.0490%" height="15" fill="rgb(219,24,36)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1055.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1029" width="0.0490%" height="15" fill="rgb(251,55,1)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1039.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="1013" width="0.0490%" height="15" fill="rgb(218,117,39)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1023.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="997" width="0.0490%" height="15" fill="rgb(248,169,11)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="1007.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="981" width="0.0490%" height="15" fill="rgb(244,40,44)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="991.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="965" width="0.0490%" height="15" fill="rgb(234,62,37)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="975.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="949" width="0.0490%" height="15" fill="rgb(207,117,42)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="959.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="933" width="0.0490%" height="15" fill="rgb(213,43,2)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="943.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="917" width="0.0490%" height="15" fill="rgb(244,202,51)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="927.50"></text></g><g><title>naga::front::wgsl::parse::Parser::unary_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="901" width="0.0490%" height="15" fill="rgb(253,174,46)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="911.50"></text></g><g><title>naga::front::wgsl::parse::Parser::singular_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="885" width="0.0490%" height="15" fill="rgb(251,23,1)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="895.50"></text></g><g><title>naga::front::wgsl::parse::Parser::arguments (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="869" width="0.0490%" height="15" fill="rgb(253,26,1)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="879.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="853" width="0.0490%" height="15" fill="rgb(216,89,31)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="863.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="837" width="0.0490%" height="15" fill="rgb(209,109,5)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="847.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="821" width="0.0490%" height="15" fill="rgb(229,63,13)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="831.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="805" width="0.0490%" height="15" fill="rgb(238,137,54)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="815.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="789" width="0.0490%" height="15" fill="rgb(228,1,9)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="799.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="773" width="0.0490%" height="15" fill="rgb(249,120,48)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="783.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="757" width="0.0490%" height="15" fill="rgb(209,72,36)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="767.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="741" width="0.0490%" height="15" fill="rgb(247,98,49)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="751.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="725" width="0.0490%" height="15" fill="rgb(233,75,36)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="735.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="709" width="0.0490%" height="15" fill="rgb(225,14,24)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="719.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="693" width="0.0490%" height="15" fill="rgb(237,193,20)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="703.50"></text></g><g><title>naga::front::wgsl::parse::Parser::unary_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="677" width="0.0490%" height="15" fill="rgb(239,122,19)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="687.50"></text></g><g><title>naga::front::wgsl::parse::Parser::singular_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="661" width="0.0490%" height="15" fill="rgb(231,220,10)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="671.50"></text></g><g><title>naga::front::wgsl::parse::Parser::arguments (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="645" width="0.0490%" height="15" fill="rgb(220,66,15)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="655.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="629" width="0.0490%" height="15" fill="rgb(215,171,52)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="639.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="613" width="0.0490%" height="15" fill="rgb(241,169,50)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="623.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="597" width="0.0490%" height="15" fill="rgb(236,189,0)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="607.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="581" width="0.0490%" height="15" fill="rgb(217,147,20)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="591.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="565" width="0.0490%" height="15" fill="rgb(206,188,39)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="575.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="549" width="0.0490%" height="15" fill="rgb(227,118,25)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="559.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="533" width="0.0490%" height="15" fill="rgb(248,171,40)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="543.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="517" width="0.0490%" height="15" fill="rgb(251,90,54)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="527.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="501" width="0.0490%" height="15" fill="rgb(234,11,46)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="511.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="485" width="0.0490%" height="15" fill="rgb(229,134,13)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="495.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="469" width="0.0490%" height="15" fill="rgb(223,129,3)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="479.50"></text></g><g><title>naga::front::wgsl::parse::Parser::unary_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="453" width="0.0490%" height="15" fill="rgb(221,124,13)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="463.50"></text></g><g><title>naga::front::wgsl::parse::Parser::singular_expression (2,748,344 samples, 0.05%)</title><rect x="97.3274%" y="437" width="0.0490%" height="15" fill="rgb(234,3,18)" fg:x="5462892855" fg:w="2748344"/><text x="97.5774%" y="447.50"></text></g><g><title>wgpu::Instance::new (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1269" width="0.0211%" height="15" fill="rgb(249,199,20)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1279.50"></text></g><g><title>wgpu_core::global::Global&lt;G&gt;::new (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1253" width="0.0211%" height="15" fill="rgb(224,134,6)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1263.50"></text></g><g><title>wgpu_core::instance::Instance::new (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1237" width="0.0211%" height="15" fill="rgb(254,83,26)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1247.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1221" width="0.0211%" height="15" fill="rgb(217,88,9)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1231.50"></text></g><g><title>vkCreateInstance (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1205" width="0.0211%" height="15" fill="rgb(225,73,2)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1215.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1189" width="0.0211%" height="15" fill="rgb(226,44,39)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1173" width="0.0211%" height="15" fill="rgb(228,53,17)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1183.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1157" width="0.0211%" height="15" fill="rgb(212,27,27)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1141" width="0.0211%" height="15" fill="rgb(241,50,6)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1125" width="0.0211%" height="15" fill="rgb(225,28,51)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1135.50"></text></g><g><title>dlopen (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1109" width="0.0211%" height="15" fill="rgb(215,33,16)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1119.50"></text></g><g><title>[libc.so.6] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1093" width="0.0211%" height="15" fill="rgb(243,40,39)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1103.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1077" width="0.0211%" height="15" fill="rgb(225,11,42)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1087.50"></text></g><g><title>_dl_catch_exception (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1061" width="0.0211%" height="15" fill="rgb(241,220,38)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1071.50"></text></g><g><title>[libc.so.6] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1045" width="0.0211%" height="15" fill="rgb(244,52,35)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1055.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1029" width="0.0211%" height="15" fill="rgb(246,42,46)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1039.50"></text></g><g><title>_dl_catch_exception (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="1013" width="0.0211%" height="15" fill="rgb(205,184,13)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1023.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="997" width="0.0211%" height="15" fill="rgb(209,48,36)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="1007.50"></text></g><g><title>_dl_catch_exception (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="981" width="0.0211%" height="15" fill="rgb(244,34,51)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="991.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="965" width="0.0211%" height="15" fill="rgb(221,107,33)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="975.50"></text></g><g><title>[libnvidia-glvkspirv.so.575.64] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="949" width="0.0211%" height="15" fill="rgb(224,203,12)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="959.50"></text></g><g><title>[libnvidia-glvkspirv.so.575.64] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="933" width="0.0211%" height="15" fill="rgb(230,215,18)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="943.50"></text></g><g><title>[libnvidia-glvkspirv.so.575.64] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="917" width="0.0211%" height="15" fill="rgb(206,185,35)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="927.50"></text></g><g><title>[libc.so.6] (1,186,572 samples, 0.02%)</title><rect x="97.3763%" y="901" width="0.0211%" height="15" fill="rgb(228,140,34)" fg:x="5465641199" fg:w="1186572"/><text x="97.6263%" y="911.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (2,508,515 samples, 0.04%)</title><rect x="97.5249%" y="917" width="0.0447%" height="15" fill="rgb(208,93,13)" fg:x="5473979898" fg:w="2508515"/><text x="97.7749%" y="927.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (6,794,469 samples, 0.12%)</title><rect x="97.4981%" y="933" width="0.1211%" height="15" fill="rgb(221,193,39)" fg:x="5472473159" fg:w="6794469"/><text x="97.7481%" y="943.50"></text></g><g><title>clock_gettime (2,779,215 samples, 0.05%)</title><rect x="97.5696%" y="917" width="0.0495%" height="15" fill="rgb(241,132,34)" fg:x="5476488413" fg:w="2779215"/><text x="97.8196%" y="927.50"></text></g><g><title>__vdso_clock_gettime (2,779,215 samples, 0.05%)</title><rect x="97.5696%" y="901" width="0.0495%" height="15" fill="rgb(221,141,10)" fg:x="5476488413" fg:w="2779215"/><text x="97.8196%" y="911.50"></text></g><g><title>[libEGL.so.1.1.0] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1173" width="0.2748%" height="15" fill="rgb(226,90,31)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1183.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1157" width="0.2748%" height="15" fill="rgb(243,75,5)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1167.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1141" width="0.2748%" height="15" fill="rgb(227,156,21)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1151.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1125" width="0.2748%" height="15" fill="rgb(250,195,8)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1135.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1109" width="0.2748%" height="15" fill="rgb(220,134,5)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1119.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1093" width="0.2748%" height="15" fill="rgb(246,106,34)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1103.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1077" width="0.2748%" height="15" fill="rgb(205,1,4)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1087.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1061" width="0.2748%" height="15" fill="rgb(224,151,29)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1071.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1045" width="0.2748%" height="15" fill="rgb(251,196,0)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1055.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1029" width="0.2748%" height="15" fill="rgb(212,127,0)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1039.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="1013" width="0.2748%" height="15" fill="rgb(236,71,53)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1023.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="997" width="0.2748%" height="15" fill="rgb(227,99,0)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="1007.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="981" width="0.2748%" height="15" fill="rgb(239,89,21)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="991.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (15,422,935 samples, 0.27%)</title><rect x="97.3975%" y="965" width="0.2748%" height="15" fill="rgb(243,122,19)" fg:x="5466827771" fg:w="15422935"/><text x="97.6475%" y="975.50"></text></g><g><title>[libnvidia-eglcore.so.575.64] (13,554,803 samples, 0.24%)</title><rect x="97.4308%" y="949" width="0.2415%" height="15" fill="rgb(229,192,45)" fg:x="5468695903" fg:w="13554803"/><text x="97.6808%" y="959.50"></text></g><g><title>clock_gettime (2,983,078 samples, 0.05%)</title><rect x="97.6191%" y="933" width="0.0531%" height="15" fill="rgb(235,165,35)" fg:x="5479267628" fg:w="2983078"/><text x="97.8691%" y="943.50"></text></g><g><title>__vdso_clock_gettime (2,983,078 samples, 0.05%)</title><rect x="97.6191%" y="917" width="0.0531%" height="15" fill="rgb(253,202,0)" fg:x="5479267628" fg:w="2983078"/><text x="97.8691%" y="927.50"></text></g><g><title>iced_winit::program::run (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1573" width="0.3821%" height="15" fill="rgb(235,51,20)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1583.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run_app (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1557" width="0.3821%" height="15" fill="rgb(218,95,46)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1567.50"></text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::run (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1541" width="0.3821%" height="15" fill="rgb(212,81,10)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1551.50"></text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::run_on_demand (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1525" width="0.3821%" height="15" fill="rgb(240,59,0)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1535.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::run_on_demand (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1509" width="0.3821%" height="15" fill="rgb(212,191,42)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1519.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::pump_events (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1493" width="0.3821%" height="15" fill="rgb(233,140,3)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1503.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1477" width="0.3821%" height="15" fill="rgb(215,69,23)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1487.50"></text></g><g><title>&lt;iced_winit::program::run::Runner&lt;Message,F,C&gt; as winit::application::ApplicationHandler&lt;iced_runtime::Action&lt;Message&gt;&gt;&gt;::resumed (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1461" width="0.3821%" height="15" fill="rgb(240,202,20)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1471.50"></text></g><g><title>futures_executor::local_pool::block_on (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1445" width="0.3821%" height="15" fill="rgb(209,146,50)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1455.50"></text></g><g><title>futures_executor::local_pool::run_executor (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1429" width="0.3821%" height="15" fill="rgb(253,102,54)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1413" width="0.3821%" height="15" fill="rgb(250,173,47)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1397" width="0.3821%" height="15" fill="rgb(232,142,7)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1407.50"></text></g><g><title>futures_executor::local_pool::run_executor::_{{closure}} (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1381" width="0.3821%" height="15" fill="rgb(230,157,47)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1391.50"></text></g><g><title>futures_executor::local_pool::block_on::_{{closure}} (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1365" width="0.3821%" height="15" fill="rgb(214,177,35)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1375.50"></text></g><g><title>&lt;iced_winit::program::run::Runner&lt;Message,F,C&gt; as winit::application::ApplicationHandler&lt;iced_runtime::Action&lt;Message&gt;&gt;&gt;::resumed::_{{closure}} (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1349" width="0.3821%" height="15" fill="rgb(234,119,46)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1359.50"></text></g><g><title>&lt;iced_renderer::fallback::Compositor&lt;A,B&gt; as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1333" width="0.3821%" height="15" fill="rgb(241,180,50)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1343.50"></text></g><g><title>&lt;iced_wgpu::window::compositor::Compositor as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1317" width="0.3821%" height="15" fill="rgb(221,54,25)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1327.50"></text></g><g><title>iced_wgpu::window::compositor::new::_{{closure}} (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1301" width="0.3821%" height="15" fill="rgb(209,157,44)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1311.50"></text></g><g><title>iced_wgpu::window::compositor::Compositor::request::_{{closure}} (21,444,371 samples, 0.38%)</title><rect x="97.3274%" y="1285" width="0.3821%" height="15" fill="rgb(246,115,41)" fg:x="5462892855" fg:w="21444371"/><text x="97.5774%" y="1295.50"></text></g><g><title>wgpu::Instance::request_adapter (17,509,455 samples, 0.31%)</title><rect x="97.3975%" y="1269" width="0.3119%" height="15" fill="rgb(229,86,1)" fg:x="5466827771" fg:w="17509455"/><text x="97.6475%" y="1279.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (17,509,455 samples, 0.31%)</title><rect x="97.3975%" y="1253" width="0.3119%" height="15" fill="rgb(240,108,53)" fg:x="5466827771" fg:w="17509455"/><text x="97.6475%" y="1263.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter (17,509,455 samples, 0.31%)</title><rect x="97.3975%" y="1237" width="0.3119%" height="15" fill="rgb(227,134,2)" fg:x="5466827771" fg:w="17509455"/><text x="97.6475%" y="1247.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter::gather (17,509,455 samples, 0.31%)</title><rect x="97.3975%" y="1221" width="0.3119%" height="15" fill="rgb(213,129,25)" fg:x="5466827771" fg:w="17509455"/><text x="97.6475%" y="1231.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::enumerate_adapters (17,509,455 samples, 0.31%)</title><rect x="97.3975%" y="1205" width="0.3119%" height="15" fill="rgb(226,35,21)" fg:x="5466827771" fg:w="17509455"/><text x="97.6475%" y="1215.50"></text></g><g><title>[libEGL.so.1.1.0] (17,509,455 samples, 0.31%)</title><rect x="97.3975%" y="1189" width="0.3119%" height="15" fill="rgb(208,129,26)" fg:x="5466827771" fg:w="17509455"/><text x="97.6475%" y="1199.50"></text></g><g><title>__glDispatchMakeCurrent (2,086,520 samples, 0.04%)</title><rect x="97.6723%" y="1173" width="0.0372%" height="15" fill="rgb(224,83,6)" fg:x="5482250706" fg:w="2086520"/><text x="97.9223%" y="1183.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (2,086,520 samples, 0.04%)</title><rect x="97.6723%" y="1157" width="0.0372%" height="15" fill="rgb(227,52,39)" fg:x="5482250706" fg:w="2086520"/><text x="97.9223%" y="1167.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (2,086,520 samples, 0.04%)</title><rect x="97.6723%" y="1141" width="0.0372%" height="15" fill="rgb(241,30,17)" fg:x="5482250706" fg:w="2086520"/><text x="97.9223%" y="1151.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (2,086,520 samples, 0.04%)</title><rect x="97.6723%" y="1125" width="0.0372%" height="15" fill="rgb(246,186,42)" fg:x="5482250706" fg:w="2086520"/><text x="97.9223%" y="1135.50"></text></g><g><title>[libEGL_nvidia.so.575.64] (2,086,520 samples, 0.04%)</title><rect x="97.6723%" y="1109" width="0.0372%" height="15" fill="rgb(221,169,15)" fg:x="5482250706" fg:w="2086520"/><text x="97.9223%" y="1119.50"></text></g><g><title>[libc.so.6] (2,086,520 samples, 0.04%)</title><rect x="97.6723%" y="1093" width="0.0372%" height="15" fill="rgb(235,108,21)" fg:x="5482250706" fg:w="2086520"/><text x="97.9223%" y="1103.50"></text></g><g><title>image::codecs::gif::GifDecoder&lt;R&gt;::new (4,032,879 samples, 0.07%)</title><rect x="97.7094%" y="1573" width="0.0719%" height="15" fill="rgb(219,148,30)" fg:x="5484337226" fg:w="4032879"/><text x="97.9594%" y="1583.50"></text></g><g><title>jpeg_decoder::huffman::HuffmanDecoder::read_bits (3,626,061 samples, 0.06%)</title><rect x="97.7902%" y="1573" width="0.0646%" height="15" fill="rgb(220,109,5)" fg:x="5488871609" fg:w="3626061"/><text x="98.0402%" y="1583.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (2,494,242 samples, 0.04%)</title><rect x="97.8548%" y="1573" width="0.0444%" height="15" fill="rgb(213,203,48)" fg:x="5492497670" fg:w="2494242"/><text x="98.1048%" y="1583.50"></text></g><g><title>__rustc::__rdl_alloc_zeroed (2,494,242 samples, 0.04%)</title><rect x="97.8548%" y="1557" width="0.0444%" height="15" fill="rgb(244,71,33)" fg:x="5492497670" fg:w="2494242"/><text x="98.1048%" y="1567.50"></text></g><g><title>malloc (4,290,724 samples, 0.08%)</title><rect x="97.8992%" y="1573" width="0.0764%" height="15" fill="rgb(209,23,2)" fg:x="5494991912" fg:w="4290724"/><text x="98.1492%" y="1583.50"></text></g><g><title>papyrust::main (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1573" width="0.0362%" height="15" fill="rgb(219,97,7)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1583.50"></text></g><g><title>iced::application::Application&lt;P&gt;::run_with (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1557" width="0.0362%" height="15" fill="rgb(216,161,23)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1567.50"></text></g><g><title>iced::program::Program::run_with (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1541" width="0.0362%" height="15" fill="rgb(207,45,42)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1551.50"></text></g><g><title>iced_winit::program::run (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1525" width="0.0362%" height="15" fill="rgb(241,61,4)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1535.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run_app (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1509" width="0.0362%" height="15" fill="rgb(236,170,1)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1519.50"></text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::run (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1493" width="0.0362%" height="15" fill="rgb(239,72,5)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1503.50"></text></g><g><title>winit::platform_impl::linux::EventLoop&lt;T&gt;::run_on_demand (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1477" width="0.0362%" height="15" fill="rgb(214,13,50)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1487.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::run_on_demand (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1461" width="0.0362%" height="15" fill="rgb(224,88,9)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1471.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::pump_events (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1445" width="0.0362%" height="15" fill="rgb(238,192,34)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1455.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1429" width="0.0362%" height="15" fill="rgb(217,203,50)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1439.50"></text></g><g><title>&lt;iced_winit::program::run::Runner&lt;Message,F,C&gt; as winit::application::ApplicationHandler&lt;iced_runtime::Action&lt;Message&gt;&gt;&gt;::resumed (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1413" width="0.0362%" height="15" fill="rgb(241,123,32)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1423.50"></text></g><g><title>futures_executor::local_pool::block_on (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1397" width="0.0362%" height="15" fill="rgb(248,151,39)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1407.50"></text></g><g><title>futures_executor::local_pool::run_executor (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1381" width="0.0362%" height="15" fill="rgb(208,89,6)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1365" width="0.0362%" height="15" fill="rgb(254,43,26)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1349" width="0.0362%" height="15" fill="rgb(216,158,13)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1359.50"></text></g><g><title>futures_executor::local_pool::run_executor::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1333" width="0.0362%" height="15" fill="rgb(212,47,37)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1343.50"></text></g><g><title>futures_executor::local_pool::block_on::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1317" width="0.0362%" height="15" fill="rgb(254,16,10)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1327.50"></text></g><g><title>&lt;iced_winit::program::run::Runner&lt;Message,F,C&gt; as winit::application::ApplicationHandler&lt;iced_runtime::Action&lt;Message&gt;&gt;&gt;::resumed::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1301" width="0.0362%" height="15" fill="rgb(223,228,16)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1311.50"></text></g><g><title>&lt;iced_renderer::fallback::Compositor&lt;A,B&gt; as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1285" width="0.0362%" height="15" fill="rgb(249,108,50)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1295.50"></text></g><g><title>&lt;iced_wgpu::window::compositor::Compositor as iced_graphics::compositor::Compositor&gt;::with_backend::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1269" width="0.0362%" height="15" fill="rgb(208,220,5)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1279.50"></text></g><g><title>iced_wgpu::window::compositor::new::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1253" width="0.0362%" height="15" fill="rgb(217,89,48)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1263.50"></text></g><g><title>iced_wgpu::window::compositor::Compositor::request::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1237" width="0.0362%" height="15" fill="rgb(212,113,41)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1247.50"></text></g><g><title>iced_wgpu::engine::Engine::new (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1221" width="0.0362%" height="15" fill="rgb(231,127,5)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1231.50"></text></g><g><title>iced_wgpu::quad::Pipeline::new (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1205" width="0.0362%" height="15" fill="rgb(217,141,17)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1215.50"></text></g><g><title>iced_wgpu::quad::gradient::Pipeline::new (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1189" width="0.0362%" height="15" fill="rgb(245,125,54)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1199.50"></text></g><g><title>wgpu::Device::create_shader_module (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1173" width="0.0362%" height="15" fill="rgb(248,125,3)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1183.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1157" width="0.0362%" height="15" fill="rgb(236,119,51)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1167.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_shader_module (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1141" width="0.0362%" height="15" fill="rgb(239,99,8)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1151.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1125" width="0.0362%" height="15" fill="rgb(224,228,4)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1135.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1109" width="0.0362%" height="15" fill="rgb(220,131,45)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1119.50"></text></g><g><title>naga::front::wgsl::parse_str (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1093" width="0.0362%" height="15" fill="rgb(215,62,5)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1103.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1077" width="0.0362%" height="15" fill="rgb(253,12,24)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1087.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1061" width="0.0362%" height="15" fill="rgb(248,120,50)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1071.50"></text></g><g><title>naga::front::wgsl::parse::Parser::statement (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1045" width="0.0362%" height="15" fill="rgb(245,194,10)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1055.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1029" width="0.0362%" height="15" fill="rgb(241,149,38)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1039.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="1013" width="0.0362%" height="15" fill="rgb(219,215,7)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1023.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="997" width="0.0362%" height="15" fill="rgb(208,120,31)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="1007.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="981" width="0.0362%" height="15" fill="rgb(244,30,8)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="991.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="965" width="0.0362%" height="15" fill="rgb(238,35,44)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="975.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="949" width="0.0362%" height="15" fill="rgb(243,218,37)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="959.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="933" width="0.0362%" height="15" fill="rgb(218,169,10)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="943.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="917" width="0.0362%" height="15" fill="rgb(221,144,10)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="927.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="901" width="0.0362%" height="15" fill="rgb(226,41,38)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="911.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="885" width="0.0362%" height="15" fill="rgb(228,3,1)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="895.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="869" width="0.0362%" height="15" fill="rgb(209,129,12)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="879.50"></text></g><g><title>naga::front::wgsl::parse::Parser::unary_expression (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="853" width="0.0362%" height="15" fill="rgb(213,136,33)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="863.50"></text></g><g><title>naga::front::wgsl::parse::Parser::singular_expression (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="837" width="0.0362%" height="15" fill="rgb(209,181,29)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="847.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="821" width="0.0362%" height="15" fill="rgb(234,173,18)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="831.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="805" width="0.0362%" height="15" fill="rgb(227,73,47)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="815.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="789" width="0.0362%" height="15" fill="rgb(234,9,34)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="799.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="773" width="0.0362%" height="15" fill="rgb(235,172,15)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="783.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="757" width="0.0362%" height="15" fill="rgb(245,61,2)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="767.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="741" width="0.0362%" height="15" fill="rgb(238,39,47)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="751.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="725" width="0.0362%" height="15" fill="rgb(234,37,24)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="735.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="709" width="0.0362%" height="15" fill="rgb(248,223,24)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="719.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="693" width="0.0362%" height="15" fill="rgb(223,12,15)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="703.50"></text></g><g><title>naga::front::wgsl::parse::Parser::equality_expression::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="677" width="0.0362%" height="15" fill="rgb(249,6,3)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="687.50"></text></g><g><title>naga::arena::Arena&lt;T&gt;::append (2,030,569 samples, 0.04%)</title><rect x="97.9757%" y="661" width="0.0362%" height="15" fill="rgb(237,105,33)" fg:x="5499282636" fg:w="2030569"/><text x="98.2257%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (894,854 samples, 0.02%)</title><rect x="98.0119%" y="1573" width="0.0159%" height="15" fill="rgb(252,208,35)" fg:x="5501313205" fg:w="894854"/><text x="98.2619%" y="1583.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,806,730 samples, 0.07%)</title><rect x="98.0278%" y="1573" width="0.0678%" height="15" fill="rgb(215,181,35)" fg:x="5502208059" fg:w="3806730"/><text x="98.2778%" y="1583.50"></text></g><g><title>jpeg_decoder::upsampler::Upsampler::upsample_and_interleave_row (3,377,672 samples, 0.06%)</title><rect x="98.0355%" y="1557" width="0.0602%" height="15" fill="rgb(246,212,3)" fg:x="5502637117" fg:w="3377672"/><text x="98.2855%" y="1567.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (634,739 samples, 0.01%)</title><rect x="98.0956%" y="1573" width="0.0113%" height="15" fill="rgb(247,156,24)" fg:x="5506014789" fg:w="634739"/><text x="98.3456%" y="1583.50"></text></g><g><title>std::fs::read_to_string::inner (1,300,870 samples, 0.02%)</title><rect x="98.1069%" y="1573" width="0.0232%" height="15" fill="rgb(248,9,31)" fg:x="5506649528" fg:w="1300870"/><text x="98.3569%" y="1583.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1,653,350 samples, 0.03%)</title><rect x="98.1301%" y="1573" width="0.0295%" height="15" fill="rgb(234,26,45)" fg:x="5507950398" fg:w="1653350"/><text x="98.3801%" y="1583.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicUsize::increment (2,303,877 samples, 0.04%)</title><rect x="98.1596%" y="1573" width="0.0410%" height="15" fill="rgb(249,11,32)" fg:x="5509603748" fg:w="2303877"/><text x="98.4096%" y="1583.50"></text></g><g><title>wgpu::Device::create_command_encoder (2,352,635 samples, 0.04%)</title><rect x="98.2006%" y="1573" width="0.0419%" height="15" fill="rgb(249,162,33)" fg:x="5511907625" fg:w="2352635"/><text x="98.4506%" y="1583.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (1,430,416 samples, 0.03%)</title><rect x="98.2425%" y="1573" width="0.0255%" height="15" fill="rgb(232,4,32)" fg:x="5514260260" fg:w="1430416"/><text x="98.4925%" y="1583.50"></text></g><g><title>wgpu_core::device::life::ResourceMaps&lt;A&gt;::clear (1,494,229 samples, 0.03%)</title><rect x="98.2680%" y="1573" width="0.0266%" height="15" fill="rgb(212,5,45)" fg:x="5515690676" fg:w="1494229"/><text x="98.5180%" y="1583.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (2,116,201 samples, 0.04%)</title><rect x="98.2946%" y="1573" width="0.0377%" height="15" fill="rgb(227,95,13)" fg:x="5517184905" fg:w="2116201"/><text x="98.5446%" y="1583.50"></text></g><g><title>[libc.so.6] (2,182,056 samples, 0.04%)</title><rect x="98.3323%" y="1381" width="0.0389%" height="15" fill="rgb(223,205,10)" fg:x="5519301106" fg:w="2182056"/><text x="98.5823%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,066,307 samples, 0.07%)</title><rect x="98.4482%" y="1317" width="0.0724%" height="15" fill="rgb(222,178,8)" fg:x="5525803895" fg:w="4066307"/><text x="98.6982%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (4,066,307 samples, 0.07%)</title><rect x="98.4482%" y="1301" width="0.0724%" height="15" fill="rgb(216,13,22)" fg:x="5525803895" fg:w="4066307"/><text x="98.6982%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (1,464,354 samples, 0.03%)</title><rect x="98.4946%" y="1285" width="0.0261%" height="15" fill="rgb(240,167,12)" fg:x="5528405848" fg:w="1464354"/><text x="98.7446%" y="1295.50"></text></g><g><title>clock_gettime (1,464,354 samples, 0.03%)</title><rect x="98.4946%" y="1269" width="0.0261%" height="15" fill="rgb(235,68,35)" fg:x="5528405848" fg:w="1464354"/><text x="98.7446%" y="1279.50"></text></g><g><title>__vdso_clock_gettime (1,464,354 samples, 0.03%)</title><rect x="98.4946%" y="1253" width="0.0261%" height="15" fill="rgb(253,40,27)" fg:x="5528405848" fg:w="1464354"/><text x="98.7446%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (8,899,534 samples, 0.16%)</title><rect x="98.3712%" y="1349" width="0.1586%" height="15" fill="rgb(214,19,28)" fg:x="5521483162" fg:w="8899534"/><text x="98.6212%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (7,606,405 samples, 0.14%)</title><rect x="98.3943%" y="1333" width="0.1355%" height="15" fill="rgb(210,167,45)" fg:x="5522776291" fg:w="7606405"/><text x="98.6443%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (10,280,143 samples, 0.18%)</title><rect x="98.3712%" y="1365" width="0.1832%" height="15" fill="rgb(232,97,40)" fg:x="5521483162" fg:w="10280143"/><text x="98.6212%" y="1375.50"></text></g><g><title>dlopen (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1349" width="0.0246%" height="15" fill="rgb(250,35,23)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1359.50"></text></g><g><title>[libc.so.6] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1333" width="0.0246%" height="15" fill="rgb(248,47,53)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1343.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1317" width="0.0246%" height="15" fill="rgb(226,58,50)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1327.50"></text></g><g><title>_dl_catch_exception (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1301" width="0.0246%" height="15" fill="rgb(217,105,26)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1311.50"></text></g><g><title>[libc.so.6] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1285" width="0.0246%" height="15" fill="rgb(208,64,1)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1295.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1269" width="0.0246%" height="15" fill="rgb(214,80,1)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1279.50"></text></g><g><title>_dl_catch_exception (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1253" width="0.0246%" height="15" fill="rgb(206,175,26)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1263.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1237" width="0.0246%" height="15" fill="rgb(235,156,37)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1247.50"></text></g><g><title>_dl_catch_exception (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1221" width="0.0246%" height="15" fill="rgb(213,100,9)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1231.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1205" width="0.0246%" height="15" fill="rgb(241,15,13)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1215.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1189" width="0.0246%" height="15" fill="rgb(205,97,43)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1199.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1173" width="0.0246%" height="15" fill="rgb(216,106,32)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1183.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1157" width="0.0246%" height="15" fill="rgb(226,200,8)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1167.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1141" width="0.0246%" height="15" fill="rgb(244,54,29)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1151.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1125" width="0.0246%" height="15" fill="rgb(252,169,12)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1135.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1109" width="0.0246%" height="15" fill="rgb(231,199,11)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1119.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (1,380,609 samples, 0.02%)</title><rect x="98.5298%" y="1093" width="0.0246%" height="15" fill="rgb(233,191,18)" fg:x="5530382696" fg:w="1380609"/><text x="98.7798%" y="1103.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::adapter_request_device (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1573" width="0.3138%" height="15" fill="rgb(215,83,47)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1583.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device_and_queue (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1557" width="0.3138%" height="15" fill="rgb(251,67,19)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1567.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1541" width="0.3138%" height="15" fill="rgb(240,7,20)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1551.50"></text></g><g><title>vkCreateDevice (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1525" width="0.3138%" height="15" fill="rgb(210,150,26)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1535.50"></text></g><g><title>[libvulkan.so.1.4.313] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1509" width="0.3138%" height="15" fill="rgb(228,75,42)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1519.50"></text></g><g><title>[libvulkan.so.1.4.313] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1493" width="0.3138%" height="15" fill="rgb(237,134,48)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1503.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1477" width="0.3138%" height="15" fill="rgb(205,80,50)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1487.50"></text></g><g><title>[libvulkan.so.1.4.313] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1461" width="0.3138%" height="15" fill="rgb(217,74,48)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1445" width="0.3138%" height="15" fill="rgb(205,82,50)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1429" width="0.3138%" height="15" fill="rgb(228,1,33)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1413" width="0.3138%" height="15" fill="rgb(214,50,23)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (17,611,210 samples, 0.31%)</title><rect x="98.3323%" y="1397" width="0.3138%" height="15" fill="rgb(210,62,9)" fg:x="5519301106" fg:w="17611210"/><text x="98.5823%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.575.64] (15,429,154 samples, 0.27%)</title><rect x="98.3712%" y="1381" width="0.2749%" height="15" fill="rgb(210,104,37)" fg:x="5521483162" fg:w="15429154"/><text x="98.6212%" y="1391.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (5,149,011 samples, 0.09%)</title><rect x="98.5544%" y="1365" width="0.0917%" height="15" fill="rgb(232,104,43)" fg:x="5531763305" fg:w="5149011"/><text x="98.8044%" y="1375.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (5,149,011 samples, 0.09%)</title><rect x="98.5544%" y="1349" width="0.0917%" height="15" fill="rgb(244,52,6)" fg:x="5531763305" fg:w="5149011"/><text x="98.8044%" y="1359.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (5,149,011 samples, 0.09%)</title><rect x="98.5544%" y="1333" width="0.0917%" height="15" fill="rgb(211,174,52)" fg:x="5531763305" fg:w="5149011"/><text x="98.8044%" y="1343.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (5,149,011 samples, 0.09%)</title><rect x="98.5544%" y="1317" width="0.0917%" height="15" fill="rgb(229,48,4)" fg:x="5531763305" fg:w="5149011"/><text x="98.8044%" y="1327.50"></text></g><g><title>[libnvidia-rtcore.so.575.64] (5,149,011 samples, 0.09%)</title><rect x="98.5544%" y="1301" width="0.0917%" height="15" fill="rgb(205,155,16)" fg:x="5531763305" fg:w="5149011"/><text x="98.8044%" y="1311.50"></text></g><g><title>[libc.so.6] (1,473,450 samples, 0.03%)</title><rect x="98.6199%" y="1285" width="0.0263%" height="15" fill="rgb(211,141,53)" fg:x="5535438866" fg:w="1473450"/><text x="98.8699%" y="1295.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_single (3,275,175 samples, 0.06%)</title><rect x="98.6461%" y="1573" width="0.0584%" height="15" fill="rgb(240,148,11)" fg:x="5536912316" fg:w="3275175"/><text x="98.8961%" y="1583.50"></text></g><g><title>papyrust (5,535,481,695 samples, 98.62%)</title><rect x="0.1173%" y="1589" width="98.6206%" height="15" fill="rgb(214,45,23)" fg:x="6585975" fg:w="5535481695"/><text x="0.3673%" y="1599.50">papyrust</text></g><g><title>wgpu_types::TextureFormat::block_dimensions (1,880,179 samples, 0.03%)</title><rect x="98.7045%" y="1573" width="0.0335%" height="15" fill="rgb(248,74,26)" fg:x="5540187491" fg:w="1880179"/><text x="98.9545%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (595,106 samples, 0.01%)</title><rect x="98.7549%" y="1573" width="0.0106%" height="15" fill="rgb(218,121,16)" fg:x="5543017570" fg:w="595106"/><text x="99.0049%" y="1583.50"></text></g><g><title>&lt;smithay_clipboard::state::State as smithay_client_toolkit::seat::pointer::PointerHandler&gt;::pointer_frame (781,324 samples, 0.01%)</title><rect x="98.7711%" y="1573" width="0.0139%" height="15" fill="rgb(218,10,47)" fg:x="5543928756" fg:w="781324"/><text x="99.0211%" y="1583.50"></text></g><g><title>[libffi.so.8.2.0] (624,546 samples, 0.01%)</title><rect x="98.8516%" y="1173" width="0.0111%" height="15" fill="rgb(227,99,14)" fg:x="5548446453" fg:w="624546"/><text x="99.1016%" y="1183.50"></text></g><g><title>[libwayland-client.so.0.23.1] (1,566,359 samples, 0.03%)</title><rect x="98.8462%" y="1189" width="0.0279%" height="15" fill="rgb(229,83,46)" fg:x="5548140853" fg:w="1566359"/><text x="99.0962%" y="1199.50"></text></g><g><title>ffi_call (636,213 samples, 0.01%)</title><rect x="98.8627%" y="1173" width="0.0113%" height="15" fill="rgb(228,25,1)" fg:x="5549070999" fg:w="636213"/><text x="99.1127%" y="1183.50"></text></g><g><title>[libffi.so.8.2.0] (636,213 samples, 0.01%)</title><rect x="98.8627%" y="1157" width="0.0113%" height="15" fill="rgb(252,190,15)" fg:x="5549070999" fg:w="636213"/><text x="99.1127%" y="1167.50"></text></g><g><title>[libc.so.6] (807,149 samples, 0.01%)</title><rect x="98.8968%" y="1173" width="0.0144%" height="15" fill="rgb(213,103,51)" fg:x="5550983204" fg:w="807149"/><text x="99.1468%" y="1183.50"></text></g><g><title>[libwayland-client.so.0.23.1] (4,537,680 samples, 0.08%)</title><rect x="98.8462%" y="1205" width="0.0808%" height="15" fill="rgb(220,38,44)" fg:x="5548140853" fg:w="4537680"/><text x="99.0962%" y="1215.50"></text></g><g><title>wayland_backend::sys::client_impl::dispatcher_func (2,971,321 samples, 0.05%)</title><rect x="98.8741%" y="1189" width="0.0529%" height="15" fill="rgb(210,45,26)" fg:x="5549707212" fg:w="2971321"/><text x="99.1241%" y="1199.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::with (888,180 samples, 0.02%)</title><rect x="98.9112%" y="1173" width="0.0158%" height="15" fill="rgb(205,95,48)" fg:x="5551790353" fg:w="888180"/><text x="99.1612%" y="1183.50"></text></g><g><title>cfree (599,860 samples, 0.01%)</title><rect x="98.9270%" y="1205" width="0.0107%" height="15" fill="rgb(225,179,37)" fg:x="5552678533" fg:w="599860"/><text x="99.1770%" y="1215.50"></text></g><g><title>wayland_backend::sys::client_impl::Dispatcher::dispatch_pending (6,022,352 samples, 0.11%)</title><rect x="98.8347%" y="1237" width="0.1073%" height="15" fill="rgb(230,209,3)" fg:x="5547499604" fg:w="6022352"/><text x="99.0847%" y="1247.50"></text></g><g><title>wl_display_dispatch_queue_pending (5,381,103 samples, 0.10%)</title><rect x="98.8462%" y="1221" width="0.0959%" height="15" fill="rgb(248,12,46)" fg:x="5548140853" fg:w="5381103"/><text x="99.0962%" y="1231.50"></text></g><g><title>wayland_sys::client::wayland_client_handle (590,729 samples, 0.01%)</title><rect x="98.9472%" y="1221" width="0.0105%" height="15" fill="rgb(234,18,0)" fg:x="5553809973" fg:w="590729"/><text x="99.1972%" y="1231.50"></text></g><g><title>[libwayland-client.so.0.23.1] (5,974,078 samples, 0.11%)</title><rect x="99.0894%" y="1205" width="0.1064%" height="15" fill="rgb(238,197,14)" fg:x="5561796530" fg:w="5974078"/><text x="99.3394%" y="1215.50"></text></g><g><title>__libc_calloc (2,253,999 samples, 0.04%)</title><rect x="99.1557%" y="1189" width="0.0402%" height="15" fill="rgb(251,162,48)" fg:x="5565516609" fg:w="2253999"/><text x="99.4057%" y="1199.50"></text></g><g><title>pthread_mutex_lock (1,261,915 samples, 0.02%)</title><rect x="99.1959%" y="1205" width="0.0225%" height="15" fill="rgb(237,73,42)" fg:x="5567770608" fg:w="1261915"/><text x="99.4459%" y="1215.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::before_handle_events (24,078,938 samples, 0.43%)</title><rect x="98.8088%" y="1333" width="0.4290%" height="15" fill="rgb(211,108,8)" fg:x="5546045818" fg:w="24078938"/><text x="99.0588%" y="1343.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::before_handle_events (24,078,938 samples, 0.43%)</title><rect x="98.8088%" y="1317" width="0.4290%" height="15" fill="rgb(213,45,22)" fg:x="5546045818" fg:w="24078938"/><text x="99.0588%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23,773,792 samples, 0.42%)</title><rect x="98.8143%" y="1301" width="0.4236%" height="15" fill="rgb(252,154,5)" fg:x="5546350964" fg:w="23773792"/><text x="99.0643%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23,773,792 samples, 0.42%)</title><rect x="98.8143%" y="1285" width="0.4236%" height="15" fill="rgb(221,79,52)" fg:x="5546350964" fg:w="23773792"/><text x="99.0643%" y="1295.50"></text></g><g><title>wayland_backend::sys::client::ReadEventsGuard::read (23,773,792 samples, 0.42%)</title><rect x="98.8143%" y="1269" width="0.4236%" height="15" fill="rgb(229,220,36)" fg:x="5546350964" fg:w="23773792"/><text x="99.0643%" y="1279.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::read (23,773,792 samples, 0.42%)</title><rect x="98.8143%" y="1253" width="0.4236%" height="15" fill="rgb(211,17,16)" fg:x="5546350964" fg:w="23773792"/><text x="99.0643%" y="1263.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::read_non_dispatch (16,602,800 samples, 0.30%)</title><rect x="98.9420%" y="1237" width="0.2958%" height="15" fill="rgb(222,55,31)" fg:x="5553521956" fg:w="16602800"/><text x="99.1920%" y="1247.50"></text></g><g><title>wl_display_read_events (15,724,054 samples, 0.28%)</title><rect x="98.9577%" y="1221" width="0.2801%" height="15" fill="rgb(221,221,31)" fg:x="5554400702" fg:w="15724054"/><text x="99.2077%" y="1231.50"></text></g><g><title>recvmsg (1,092,233 samples, 0.02%)</title><rect x="99.2184%" y="1205" width="0.0195%" height="15" fill="rgb(227,168,26)" fg:x="5569032523" fg:w="1092233"/><text x="99.4684%" y="1215.50"></text></g><g><title>[libc.so.6] (1,092,233 samples, 0.02%)</title><rect x="99.2184%" y="1189" width="0.0195%" height="15" fill="rgb(224,139,9)" fg:x="5569032523" fg:w="1092233"/><text x="99.4684%" y="1199.50"></text></g><g><title>[libc.so.6] (590,729 samples, 0.01%)</title><rect x="99.2273%" y="1173" width="0.0105%" height="15" fill="rgb(254,172,0)" fg:x="5569534027" fg:w="590729"/><text x="99.4773%" y="1183.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::before_sleep (669,429 samples, 0.01%)</title><rect x="99.2378%" y="1333" width="0.0119%" height="15" fill="rgb(235,203,1)" fg:x="5570124756" fg:w="669429"/><text x="99.4878%" y="1343.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::before_sleep (669,429 samples, 0.01%)</title><rect x="99.2378%" y="1317" width="0.0119%" height="15" fill="rgb(216,205,24)" fg:x="5570124756" fg:w="669429"/><text x="99.4878%" y="1327.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::prepare_read (669,429 samples, 0.01%)</title><rect x="99.2378%" y="1301" width="0.0119%" height="15" fill="rgb(233,24,6)" fg:x="5570124756" fg:w="669429"/><text x="99.4878%" y="1311.50"></text></g><g><title>wayland_client::conn::Connection::prepare_read (669,429 samples, 0.01%)</title><rect x="99.2378%" y="1285" width="0.0119%" height="15" fill="rgb(244,110,9)" fg:x="5570124756" fg:w="669429"/><text x="99.4878%" y="1295.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::try_new (669,429 samples, 0.01%)</title><rect x="99.2378%" y="1269" width="0.0119%" height="15" fill="rgb(239,222,42)" fg:x="5570124756" fg:w="669429"/><text x="99.4878%" y="1279.50"></text></g><g><title>wl_display_prepare_read_queue (669,429 samples, 0.01%)</title><rect x="99.2378%" y="1253" width="0.0119%" height="15" fill="rgb(218,145,13)" fg:x="5570124756" fg:w="669429"/><text x="99.4878%" y="1263.50"></text></g><g><title>pthread_mutex_lock (669,429 samples, 0.01%)</title><rect x="99.2378%" y="1237" width="0.0119%" height="15" fill="rgb(207,69,11)" fg:x="5570124756" fg:w="669429"/><text x="99.4878%" y="1247.50"></text></g><g><title>wayland_backend::sys::client::Backend::dispatch_inner_queue (1,153,413 samples, 0.02%)</title><rect x="99.2497%" y="1221" width="0.0205%" height="15" fill="rgb(220,223,22)" fg:x="5570794185" fg:w="1153413"/><text x="99.4997%" y="1231.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::dispatch_inner_queue (1,153,413 samples, 0.02%)</title><rect x="99.2497%" y="1205" width="0.0205%" height="15" fill="rgb(245,102,5)" fg:x="5570794185" fg:w="1153413"/><text x="99.4997%" y="1215.50"></text></g><g><title>wayland_backend::sys::client_impl::Dispatcher::dispatch_pending (865,396 samples, 0.02%)</title><rect x="99.2549%" y="1189" width="0.0154%" height="15" fill="rgb(211,148,2)" fg:x="5571082202" fg:w="865396"/><text x="99.5049%" y="1199.50"></text></g><g><title>&lt;smithay_clipboard::state::State as wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_data_offer::WlDataOffer,smithay_client_toolkit::data_device_manager::data_offer::DataOfferData&gt;&gt;::event (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1205" width="0.0115%" height="15" fill="rgb(241,13,44)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1215.50"></text></g><g><title>smithay_client_toolkit::data_device_manager::data_offer::&lt;impl wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_data_offer::WlDataOffer,smithay_client_toolkit::data_device_manager::data_offer::DataOfferData,D&gt; for smithay_client_toolkit::data_device_manager::DataDeviceManagerState&gt;::event (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1189" width="0.0115%" height="15" fill="rgb(219,137,21)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1199.50"></text></g><g><title>smithay_client_toolkit::data_device_manager::data_offer::DataOfferData::push_mime_type (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1173" width="0.0115%" height="15" fill="rgb(242,206,5)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;smithay_client_toolkit::data_device_manager::data_offer::DataDeviceOfferInner&gt;&gt; (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1157" width="0.0115%" height="15" fill="rgb(217,114,22)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1167.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1141" width="0.0115%" height="15" fill="rgb(253,206,42)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1151.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1125" width="0.0115%" height="15" fill="rgb(236,102,18)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1109" width="0.0115%" height="15" fill="rgb(208,59,49)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_swap (647,136 samples, 0.01%)</title><rect x="99.2893%" y="1093" width="0.0115%" height="15" fill="rgb(215,194,28)" fg:x="5573015634" fg:w="647136"/><text x="99.5393%" y="1103.50"></text></g><g><title>&lt;wayland_client::protocol::wl_surface::WlSurface as core::clone::Clone&gt;::clone (768,375 samples, 0.01%)</title><rect x="99.3148%" y="1173" width="0.0137%" height="15" fill="rgb(243,207,11)" fg:x="5574446702" fg:w="768375"/><text x="99.5648%" y="1183.50"></text></g><g><title>&lt;smithay_clipboard::state::State as wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_pointer::WlPointer,smithay_client_toolkit::seat::pointer::PointerData&gt;&gt;::event (1,866,653 samples, 0.03%)</title><rect x="99.3009%" y="1205" width="0.0333%" height="15" fill="rgb(254,179,35)" fg:x="5573662770" fg:w="1866653"/><text x="99.5509%" y="1215.50"></text></g><g><title>smithay_client_toolkit::seat::pointer::&lt;impl wayland_client::event_queue::Dispatch&lt;wayland_client::protocol::wl_pointer::WlPointer,U,D&gt; for smithay_client_toolkit::seat::SeatState&gt;::event (1,866,653 samples, 0.03%)</title><rect x="99.3009%" y="1189" width="0.0333%" height="15" fill="rgb(235,97,3)" fg:x="5573662770" fg:w="1866653"/><text x="99.5509%" y="1199.50"></text></g><g><title>&lt;wayland_client::protocol::wl_pointer::WlPointer as wayland_client::Proxy&gt;::parse_event (1,291,555 samples, 0.02%)</title><rect x="99.3430%" y="1205" width="0.0230%" height="15" fill="rgb(215,155,33)" fg:x="5576030927" fg:w="1291555"/><text x="99.5930%" y="1215.50"></text></g><g><title>calloop_wayland_source::WaylandSource&lt;D&gt;::loop_callback_pending (7,163,169 samples, 0.13%)</title><rect x="99.2497%" y="1301" width="0.1276%" height="15" fill="rgb(223,128,12)" fg:x="5570794185" fg:w="7163169"/><text x="99.4997%" y="1311.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events::_{{closure}} (7,163,169 samples, 0.13%)</title><rect x="99.2497%" y="1285" width="0.1276%" height="15" fill="rgb(208,157,18)" fg:x="5570794185" fg:w="7163169"/><text x="99.4997%" y="1295.50"></text></g><g><title>calloop_wayland_source::WaylandSource&lt;D&gt;::insert::_{{closure}} (7,163,169 samples, 0.13%)</title><rect x="99.2497%" y="1269" width="0.1276%" height="15" fill="rgb(249,70,54)" fg:x="5570794185" fg:w="7163169"/><text x="99.4997%" y="1279.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatch_pending (7,163,169 samples, 0.13%)</title><rect x="99.2497%" y="1253" width="0.1276%" height="15" fill="rgb(244,118,24)" fg:x="5570794185" fg:w="7163169"/><text x="99.4997%" y="1263.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::dispatching_impl (7,163,169 samples, 0.13%)</title><rect x="99.2497%" y="1237" width="0.1276%" height="15" fill="rgb(211,54,0)" fg:x="5570794185" fg:w="7163169"/><text x="99.4997%" y="1247.50"></text></g><g><title>wayland_client::event_queue::queue_callback (5,744,243 samples, 0.10%)</title><rect x="99.2750%" y="1221" width="0.1023%" height="15" fill="rgb(245,137,45)" fg:x="5572213111" fg:w="5744243"/><text x="99.5250%" y="1231.50"></text></g><g><title>wayland_backend::sys::client::Backend::get_data (634,872 samples, 0.01%)</title><rect x="99.3661%" y="1205" width="0.0113%" height="15" fill="rgb(232,154,31)" fg:x="5577322482" fg:w="634872"/><text x="99.6161%" y="1215.50"></text></g><g><title>wayland_sys::client::wayland_client_handle (641,249 samples, 0.01%)</title><rect x="99.3774%" y="1221" width="0.0114%" height="15" fill="rgb(253,6,39)" fg:x="5577957354" fg:w="641249"/><text x="99.6274%" y="1231.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (8,066,036 samples, 0.14%)</title><rect x="99.2497%" y="1333" width="0.1437%" height="15" fill="rgb(234,183,24)" fg:x="5570794185" fg:w="8066036"/><text x="99.4997%" y="1343.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::process_events (8,066,036 samples, 0.14%)</title><rect x="99.2497%" y="1317" width="0.1437%" height="15" fill="rgb(252,84,40)" fg:x="5570794185" fg:w="8066036"/><text x="99.4997%" y="1327.50"></text></g><g><title>calloop_wayland_source::flush_queue (902,867 samples, 0.02%)</title><rect x="99.3774%" y="1301" width="0.0161%" height="15" fill="rgb(224,65,2)" fg:x="5577957354" fg:w="902867"/><text x="99.6274%" y="1311.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::flush (902,867 samples, 0.02%)</title><rect x="99.3774%" y="1285" width="0.0161%" height="15" fill="rgb(229,38,24)" fg:x="5577957354" fg:w="902867"/><text x="99.6274%" y="1295.50"></text></g><g><title>wayland_client::conn::Connection::flush (902,867 samples, 0.02%)</title><rect x="99.3774%" y="1269" width="0.0161%" height="15" fill="rgb(218,131,50)" fg:x="5577957354" fg:w="902867"/><text x="99.6274%" y="1279.50"></text></g><g><title>wayland_backend::sys::client::Backend::flush (902,867 samples, 0.02%)</title><rect x="99.3774%" y="1253" width="0.0161%" height="15" fill="rgb(233,106,18)" fg:x="5577957354" fg:w="902867"/><text x="99.6274%" y="1263.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::flush (902,867 samples, 0.02%)</title><rect x="99.3774%" y="1237" width="0.0161%" height="15" fill="rgb(220,216,11)" fg:x="5577957354" fg:w="902867"/><text x="99.6274%" y="1247.50"></text></g><g><title>calloop::list::SourceList&lt;Data&gt;::get (654,692 samples, 0.01%)</title><rect x="99.4024%" y="1333" width="0.0117%" height="15" fill="rgb(251,100,45)" fg:x="5579361725" fg:w="654692"/><text x="99.6524%" y="1343.50"></text></g><g><title>calloop::token::TokenInner::same_source_as (654,692 samples, 0.01%)</title><rect x="99.4024%" y="1317" width="0.0117%" height="15" fill="rgb(235,143,32)" fg:x="5579361725" fg:w="654692"/><text x="99.6524%" y="1327.50"></text></g><g><title>__rustc::__rdl_alloc (720,031 samples, 0.01%)</title><rect x="99.4193%" y="1061" width="0.0128%" height="15" fill="rgb(248,124,34)" fg:x="5580313385" fg:w="720031"/><text x="99.6693%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1317" width="0.0366%" height="15" fill="rgb(225,221,4)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1327.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1301" width="0.0366%" height="15" fill="rgb(242,27,43)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1311.50"></text></g><g><title>core::iter::adapters::try_process (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1285" width="0.0366%" height="15" fill="rgb(227,54,8)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1295.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1269" width="0.0366%" height="15" fill="rgb(253,139,49)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1253" width="0.0366%" height="15" fill="rgb(231,26,43)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1237" width="0.0366%" height="15" fill="rgb(207,121,39)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1221" width="0.0366%" height="15" fill="rgb(223,101,35)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1205" width="0.0366%" height="15" fill="rgb(232,87,23)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1189" width="0.0366%" height="15" fill="rgb(225,180,29)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1173" width="0.0366%" height="15" fill="rgb(225,25,17)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1157" width="0.0366%" height="15" fill="rgb(223,8,52)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1141" width="0.0366%" height="15" fill="rgb(246,42,21)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,055,608 samples, 0.04%)</title><rect x="99.4141%" y="1125" width="0.0366%" height="15" fill="rgb(205,64,43)" fg:x="5580016417" fg:w="2055608"/><text x="99.6641%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,758,640 samples, 0.03%)</title><rect x="99.4193%" y="1109" width="0.0313%" height="15" fill="rgb(221,160,13)" fg:x="5580313385" fg:w="1758640"/><text x="99.6693%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,758,640 samples, 0.03%)</title><rect x="99.4193%" y="1093" width="0.0313%" height="15" fill="rgb(239,58,35)" fg:x="5580313385" fg:w="1758640"/><text x="99.6693%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1,758,640 samples, 0.03%)</title><rect x="99.4193%" y="1077" width="0.0313%" height="15" fill="rgb(251,26,40)" fg:x="5580313385" fg:w="1758640"/><text x="99.6693%" y="1087.50"></text></g><g><title>malloc (1,038,609 samples, 0.02%)</title><rect x="99.4322%" y="1061" width="0.0185%" height="15" fill="rgb(247,0,4)" fg:x="5581033416" fg:w="1038609"/><text x="99.6822%" y="1071.50"></text></g><g><title>polling::Poller::wait (3,892,302 samples, 0.07%)</title><rect x="99.4602%" y="1317" width="0.0693%" height="15" fill="rgb(218,130,10)" fg:x="5582609130" fg:w="3892302"/><text x="99.7102%" y="1327.50"></text></g><g><title>polling::epoll::Poller::wait (2,889,294 samples, 0.05%)</title><rect x="99.4781%" y="1301" width="0.0515%" height="15" fill="rgb(239,32,7)" fg:x="5583612138" fg:w="2889294"/><text x="99.7281%" y="1311.50"></text></g><g><title>polling::epoll::Poller::modify (934,362 samples, 0.02%)</title><rect x="99.5129%" y="1285" width="0.0166%" height="15" fill="rgb(210,192,24)" fg:x="5585567070" fg:w="934362"/><text x="99.7629%" y="1295.50"></text></g><g><title>calloop::sys::Poll::poll (7,971,125 samples, 0.14%)</title><rect x="99.4141%" y="1333" width="0.1420%" height="15" fill="rgb(226,212,17)" fg:x="5580016417" fg:w="7971125"/><text x="99.6641%" y="1343.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,486,110 samples, 0.03%)</title><rect x="99.5296%" y="1317" width="0.0265%" height="15" fill="rgb(219,201,28)" fg:x="5586501432" fg:w="1486110"/><text x="99.7796%" y="1327.50"></text></g><g><title>clock_gettime (1,486,110 samples, 0.03%)</title><rect x="99.5296%" y="1301" width="0.0265%" height="15" fill="rgb(235,207,41)" fg:x="5586501432" fg:w="1486110"/><text x="99.7796%" y="1311.50"></text></g><g><title>__vdso_clock_gettime (767,174 samples, 0.01%)</title><rect x="99.5424%" y="1285" width="0.0137%" height="15" fill="rgb(241,95,54)" fg:x="5587220368" fg:w="767174"/><text x="99.7924%" y="1295.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (616,132 samples, 0.01%)</title><rect x="99.5656%" y="1333" width="0.0110%" height="15" fill="rgb(248,12,23)" fg:x="5588524647" fg:w="616132"/><text x="99.8156%" y="1343.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (616,132 samples, 0.01%)</title><rect x="99.5656%" y="1317" width="0.0110%" height="15" fill="rgb(228,173,4)" fg:x="5588524647" fg:w="616132"/><text x="99.8156%" y="1327.50"></text></g><g><title>core::cell::BorrowRefMut::new (616,132 samples, 0.01%)</title><rect x="99.5656%" y="1301" width="0.0110%" height="15" fill="rgb(254,99,5)" fg:x="5588524647" fg:w="616132"/><text x="99.8156%" y="1311.50"></text></g><g><title>[libc.so.6] (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1573" width="0.8176%" height="15" fill="rgb(212,184,17)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1583.50"></text></g><g><title>[libc.so.6] (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1557" width="0.8176%" height="15" fill="rgb(252,174,1)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1567.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1541" width="0.8176%" height="15" fill="rgb(241,118,51)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1525" width="0.8176%" height="15" fill="rgb(227,94,47)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1535.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1509" width="0.8176%" height="15" fill="rgb(229,104,2)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1519.50"></text></g><g><title>std::panic::catch_unwind (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1493" width="0.8176%" height="15" fill="rgb(219,28,31)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1503.50"></text></g><g><title>std::panicking::try (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1477" width="0.8176%" height="15" fill="rgb(233,109,36)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1487.50"></text></g><g><title>std::panicking::try::do_call (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1461" width="0.8176%" height="15" fill="rgb(246,88,11)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1471.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1445" width="0.8176%" height="15" fill="rgb(209,212,17)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1429" width="0.8176%" height="15" fill="rgb(243,59,29)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1439.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1413" width="0.8176%" height="15" fill="rgb(244,205,48)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1423.50"></text></g><g><title>smithay_clipboard::worker::spawn::_{{closure}} (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1397" width="0.8176%" height="15" fill="rgb(227,30,6)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1407.50"></text></g><g><title>smithay_clipboard::worker::worker_impl (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1381" width="0.8176%" height="15" fill="rgb(220,205,48)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1391.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1365" width="0.8176%" height="15" fill="rgb(250,94,14)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1375.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events (45,891,489 samples, 0.82%)</title><rect x="98.7937%" y="1349" width="0.8176%" height="15" fill="rgb(216,119,42)" fg:x="5545195161" fg:w="45891489"/><text x="99.0437%" y="1359.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,079,250 samples, 0.02%)</title><rect x="99.5921%" y="1333" width="0.0192%" height="15" fill="rgb(232,155,0)" fg:x="5590007400" fg:w="1079250"/><text x="99.8421%" y="1343.50"></text></g><g><title>clock_gettime (1,079,250 samples, 0.02%)</title><rect x="99.5921%" y="1317" width="0.0192%" height="15" fill="rgb(212,24,32)" fg:x="5590007400" fg:w="1079250"/><text x="99.8421%" y="1327.50"></text></g><g><title>__vdso_clock_gettime (1,079,250 samples, 0.02%)</title><rect x="99.5921%" y="1301" width="0.0192%" height="15" fill="rgb(216,69,20)" fg:x="5590007400" fg:w="1079250"/><text x="99.8421%" y="1311.50"></text></g><g><title>pthread_mutex_lock (904,149 samples, 0.02%)</title><rect x="99.6313%" y="1573" width="0.0161%" height="15" fill="rgb(229,73,31)" fg:x="5592208766" fg:w="904149"/><text x="99.8813%" y="1583.50"></text></g><g><title>std::time::Instant::now (986,585 samples, 0.02%)</title><rect x="99.6541%" y="1573" width="0.0176%" height="15" fill="rgb(224,219,20)" fg:x="5593492036" fg:w="986585"/><text x="99.9041%" y="1583.50"></text></g><g><title>smithay-clipboa (53,545,063 samples, 0.95%)</title><rect x="98.7380%" y="1589" width="0.9540%" height="15" fill="rgb(215,146,41)" fg:x="5542067670" fg:w="53545063"/><text x="98.9880%" y="1599.50"></text></g><g><title>pow (975,016 samples, 0.02%)</title><rect x="99.6973%" y="1381" width="0.0174%" height="15" fill="rgb(244,71,31)" fg:x="5595915923" fg:w="975016"/><text x="99.9473%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (2,507,520 samples, 0.04%)</title><rect x="99.7415%" y="1381" width="0.0447%" height="15" fill="rgb(224,24,11)" fg:x="5598395451" fg:w="2507520"/><text x="99.9915%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (2,507,520 samples, 0.04%)</title><rect x="99.7415%" y="1365" width="0.0447%" height="15" fill="rgb(229,76,15)" fg:x="5598395451" fg:w="2507520"/><text x="99.9915%" y="1375.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (1,504,512 samples, 0.03%)</title><rect x="99.7594%" y="1349" width="0.0268%" height="15" fill="rgb(209,93,2)" fg:x="5599398459" fg:w="1504512"/><text x="100.0094%" y="1359.50"></text></g><g><title>papyrust::ui::library::Library::load_preview::_{{closure}} (1,003,008 samples, 0.02%)</title><rect x="99.8301%" y="917" width="0.0179%" height="15" fill="rgb(216,200,50)" fg:x="5603368511" fg:w="1003008"/><text x="100.0801%" y="927.50"></text></g><g><title>&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (2,507,520 samples, 0.04%)</title><rect x="99.8122%" y="1077" width="0.0447%" height="15" fill="rgb(211,67,34)" fg:x="5602365503" fg:w="2507520"/><text x="100.0622%" y="1087.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,507,520 samples, 0.04%)</title><rect x="99.8122%" y="1061" width="0.0447%" height="15" fill="rgb(225,87,47)" fg:x="5602365503" fg:w="2507520"/><text x="100.0622%" y="1071.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2,507,520 samples, 0.04%)</title><rect x="99.8122%" y="1045" width="0.0447%" height="15" fill="rgb(217,185,16)" fg:x="5602365503" fg:w="2507520"/><text x="100.0622%" y="1055.50"></text></g><g><title>&lt;futures_util::stream::stream::into_future::StreamFuture&lt;St&gt; as core::future::future::Future&gt;::poll (2,507,520 samples, 0.04%)</title><rect x="99.8122%" y="1029" width="0.0447%" height="15" fill="rgb(205,0,0)" fg:x="5602365503" fg:w="2507520"/><text x="100.0622%" y="1039.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,507,520 samples, 0.04%)</title><rect x="99.8122%" y="1013" width="0.0447%" height="15" fill="rgb(207,116,45)" fg:x="5602365503" fg:w="2507520"/><text x="100.0622%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (2,507,520 samples, 0.04%)</title><rect x="99.8122%" y="997" width="0.0447%" height="15" fill="rgb(221,156,26)" fg:x="5602365503" fg:w="2507520"/><text x="100.0622%" y="1007.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,006,016 samples, 0.04%)</title><rect x="99.8212%" y="981" width="0.0357%" height="15" fill="rgb(213,140,4)" fg:x="5602867007" fg:w="2006016"/><text x="100.0712%" y="991.50"></text></g><g><title>&lt;futures_util::stream::once::Once&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2,006,016 samples, 0.04%)</title><rect x="99.8212%" y="965" width="0.0357%" height="15" fill="rgb(231,224,15)" fg:x="5602867007" fg:w="2006016"/><text x="100.0712%" y="975.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,006,016 samples, 0.04%)</title><rect x="99.8212%" y="949" width="0.0357%" height="15" fill="rgb(244,76,20)" fg:x="5602867007" fg:w="2006016"/><text x="100.0712%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,504,512 samples, 0.03%)</title><rect x="99.8301%" y="933" width="0.0268%" height="15" fill="rgb(238,117,7)" fg:x="5603368511" fg:w="1504512"/><text x="100.0801%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,009,024 samples, 0.05%)</title><rect x="99.8122%" y="1125" width="0.0536%" height="15" fill="rgb(235,1,10)" fg:x="5602365503" fg:w="3009024"/><text x="100.0622%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,009,024 samples, 0.05%)</title><rect x="99.8122%" y="1109" width="0.0536%" height="15" fill="rgb(216,165,6)" fg:x="5602365503" fg:w="3009024"/><text x="100.0622%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3,009,024 samples, 0.05%)</title><rect x="99.8122%" y="1093" width="0.0536%" height="15" fill="rgb(246,91,35)" fg:x="5602365503" fg:w="3009024"/><text x="100.0622%" y="1103.50"></text></g><g><title>&lt;iced_winit::proxy::Proxy&lt;T&gt; as futures_sink::Sink&lt;iced_runtime::Action&lt;T&gt;&gt;&gt;::start_send (961,028 samples, 0.02%)</title><rect x="99.8658%" y="1125" width="0.0171%" height="15" fill="rgb(228,96,24)" fg:x="5605374527" fg:w="961028"/><text x="100.1158%" y="1135.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (961,028 samples, 0.02%)</title><rect x="99.8658%" y="1109" width="0.0171%" height="15" fill="rgb(254,217,53)" fg:x="5605374527" fg:w="961028"/><text x="100.1158%" y="1119.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (961,028 samples, 0.02%)</title><rect x="99.8658%" y="1093" width="0.0171%" height="15" fill="rgb(209,60,0)" fg:x="5605374527" fg:w="961028"/><text x="100.1158%" y="1103.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (961,028 samples, 0.02%)</title><rect x="99.8658%" y="1077" width="0.0171%" height="15" fill="rgb(250,93,26)" fg:x="5605374527" fg:w="961028"/><text x="100.1158%" y="1087.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (961,028 samples, 0.02%)</title><rect x="99.8658%" y="1061" width="0.0171%" height="15" fill="rgb(211,9,40)" fg:x="5605374527" fg:w="961028"/><text x="100.1158%" y="1071.50"></text></g><g><title>[libc.so.6] (961,028 samples, 0.02%)</title><rect x="99.8658%" y="1045" width="0.0171%" height="15" fill="rgb(242,57,20)" fg:x="5605374527" fg:w="961028"/><text x="100.1158%" y="1055.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,973,060 samples, 0.09%)</title><rect x="99.8122%" y="1189" width="0.0886%" height="15" fill="rgb(248,85,48)" fg:x="5602365503" fg:w="4973060"/><text x="100.0622%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,973,060 samples, 0.09%)</title><rect x="99.8122%" y="1173" width="0.0886%" height="15" fill="rgb(212,117,2)" fg:x="5602365503" fg:w="4973060"/><text x="100.0622%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::stream::Forward&lt;St,Si&gt; as core::future::future::Future&gt;::poll (4,973,060 samples, 0.09%)</title><rect x="99.8122%" y="1157" width="0.0886%" height="15" fill="rgb(243,19,3)" fg:x="5602365503" fg:w="4973060"/><text x="100.0622%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::forward::Forward&lt;St,Si,Item&gt; as core::future::future::Future&gt;::poll (4,973,060 samples, 0.09%)</title><rect x="99.8122%" y="1141" width="0.0886%" height="15" fill="rgb(232,217,24)" fg:x="5602365503" fg:w="4973060"/><text x="100.0622%" y="1151.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1125" width="0.0179%" height="15" fill="rgb(224,175,40)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;iced_winit::proxy::Proxy&lt;papyrust::Message&gt;&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1109" width="0.0179%" height="15" fill="rgb(212,162,32)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;iced_winit::proxy::Proxy&lt;papyrust::Message&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1093" width="0.0179%" height="15" fill="rgb(215,9,4)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;winit::event_loop::EventLoopProxy&lt;iced_runtime::Action&lt;papyrust::Message&gt;&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1077" width="0.0179%" height="15" fill="rgb(242,42,7)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;winit::platform_impl::linux::EventLoopProxy&lt;iced_runtime::Action&lt;papyrust::Message&gt;&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1061" width="0.0179%" height="15" fill="rgb(242,184,45)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;winit::platform_impl::linux::wayland::event_loop::proxy::EventLoopProxy&lt;iced_runtime::Action&lt;papyrust::Message&gt;&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1045" width="0.0179%" height="15" fill="rgb(228,111,51)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;calloop::sources::channel::Sender&lt;iced_runtime::Action&lt;papyrust::Message&gt;&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1029" width="0.0179%" height="15" fill="rgb(236,147,17)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;iced_runtime::Action&lt;papyrust::Message&gt;&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="1013" width="0.0179%" height="15" fill="rgb(210,75,22)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpmc::Sender&lt;iced_runtime::Action&lt;papyrust::Message&gt;&gt;&gt; (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="997" width="0.0179%" height="15" fill="rgb(217,159,45)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="1007.50"></text></g><g><title>&lt;std::sync::mpmc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="981" width="0.0179%" height="15" fill="rgb(245,165,53)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="991.50"></text></g><g><title>std::sync::mpmc::counter::Sender&lt;C&gt;::release (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="965" width="0.0179%" height="15" fill="rgb(251,190,50)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="949" width="0.0179%" height="15" fill="rgb(208,203,29)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,003,008 samples, 0.02%)</title><rect x="99.8830%" y="933" width="0.0179%" height="15" fill="rgb(207,209,35)" fg:x="5606335555" fg:w="1003008"/><text x="100.1330%" y="943.50"></text></g><g><title>iced_winit::proxy::Proxy&lt;T&gt;::new::_{{closure}} (1,003,008 samples, 0.02%)</title><rect x="99.9008%" y="1189" width="0.0179%" height="15" fill="rgb(230,144,49)" fg:x="5607338563" fg:w="1003008"/><text x="100.1508%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (12,885,172 samples, 0.23%)</title><rect x="99.6973%" y="1461" width="0.2296%" height="15" fill="rgb(229,31,6)" fg:x="5595915923" fg:w="12885172"/><text x="99.9473%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (12,885,172 samples, 0.23%)</title><rect x="99.6973%" y="1445" width="0.2296%" height="15" fill="rgb(251,129,24)" fg:x="5595915923" fg:w="12885172"/><text x="99.9473%" y="1455.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (12,885,172 samples, 0.23%)</title><rect x="99.6973%" y="1429" width="0.2296%" height="15" fill="rgb(235,105,15)" fg:x="5595915923" fg:w="12885172"/><text x="99.9473%" y="1439.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (12,885,172 samples, 0.23%)</title><rect x="99.6973%" y="1413" width="0.2296%" height="15" fill="rgb(216,52,43)" fg:x="5595915923" fg:w="12885172"/><text x="99.9473%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (12,885,172 samples, 0.23%)</title><rect x="99.6973%" y="1397" width="0.2296%" height="15" fill="rgb(238,144,41)" fg:x="5595915923" fg:w="12885172"/><text x="99.9473%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (7,898,124 samples, 0.14%)</title><rect x="99.7862%" y="1381" width="0.1407%" height="15" fill="rgb(243,63,9)" fg:x="5600902971" fg:w="7898124"/><text x="100.0362%" y="1391.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,937,096 samples, 0.12%)</title><rect x="99.8033%" y="1365" width="0.1236%" height="15" fill="rgb(246,208,1)" fg:x="5601863999" fg:w="6937096"/><text x="100.0533%" y="1375.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1349" width="0.1147%" height="15" fill="rgb(233,182,18)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1333" width="0.1147%" height="15" fill="rgb(242,224,8)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1317" width="0.1147%" height="15" fill="rgb(243,54,37)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1327.50"></text></g><g><title>std::panicking::try (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1301" width="0.1147%" height="15" fill="rgb(233,192,12)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1285" width="0.1147%" height="15" fill="rgb(251,192,53)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1295.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1269" width="0.1147%" height="15" fill="rgb(246,141,26)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1253" width="0.1147%" height="15" fill="rgb(239,195,19)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1237" width="0.1147%" height="15" fill="rgb(241,16,39)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1221" width="0.1147%" height="15" fill="rgb(223,13,53)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (6,435,592 samples, 0.11%)</title><rect x="99.8122%" y="1205" width="0.1147%" height="15" fill="rgb(214,227,0)" fg:x="5602365503" fg:w="6435592"/><text x="100.0622%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1301" width="0.0284%" height="15" fill="rgb(228,103,26)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1311.50"></text></g><g><title>tokio::fs::read::read::_{{closure}}::_{{closure}} (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1285" width="0.0284%" height="15" fill="rgb(254,177,53)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1295.50"></text></g><g><title>std::fs::read (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1269" width="0.0284%" height="15" fill="rgb(208,201,34)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1253" width="0.0284%" height="15" fill="rgb(212,39,5)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1237" width="0.0284%" height="15" fill="rgb(246,117,3)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1221" width="0.0284%" height="15" fill="rgb(244,118,39)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1205" width="0.0284%" height="15" fill="rgb(241,64,10)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1189" width="0.0284%" height="15" fill="rgb(229,39,44)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1173" width="0.0284%" height="15" fill="rgb(230,226,3)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1157" width="0.0284%" height="15" fill="rgb(222,13,42)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1141" width="0.0284%" height="15" fill="rgb(247,180,54)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1125" width="0.0284%" height="15" fill="rgb(205,96,16)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1135.50"></text></g><g><title>cfree (1,596,456 samples, 0.03%)</title><rect x="99.9358%" y="1109" width="0.0284%" height="15" fill="rgb(205,100,21)" fg:x="5609302599" fg:w="1596456"/><text x="100.1858%" y="1119.50"></text></g><g><title>[libc.so.6] (15,484,636 samples, 0.28%)</title><rect x="99.6973%" y="1573" width="0.2759%" height="15" fill="rgb(248,51,4)" fg:x="5595915923" fg:w="15484636"/><text x="99.9473%" y="1583.50"></text></g><g><title>[libc.so.6] (15,484,636 samples, 0.28%)</title><rect x="99.6973%" y="1557" width="0.2759%" height="15" fill="rgb(217,197,30)" fg:x="5595915923" fg:w="15484636"/><text x="99.9473%" y="1567.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (15,484,636 samples, 0.28%)</title><rect x="99.6973%" y="1541" width="0.2759%" height="15" fill="rgb(240,179,40)" fg:x="5595915923" fg:w="15484636"/><text x="99.9473%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15,484,636 samples, 0.28%)</title><rect x="99.6973%" y="1525" width="0.2759%" height="15" fill="rgb(212,185,35)" fg:x="5595915923" fg:w="15484636"/><text x="99.9473%" y="1535.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (15,484,636 samples, 0.28%)</title><rect x="99.6973%" y="1509" width="0.2759%" height="15" fill="rgb(251,222,31)" fg:x="5595915923" fg:w="15484636"/><text x="99.9473%" y="1519.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (15,484,636 samples, 0.28%)</title><rect x="99.6973%" y="1493" width="0.2759%" height="15" fill="rgb(208,140,36)" fg:x="5595915923" fg:w="15484636"/><text x="99.9473%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (15,484,636 samples, 0.28%)</title><rect x="99.6973%" y="1477" width="0.2759%" height="15" fill="rgb(220,148,1)" fg:x="5595915923" fg:w="15484636"/><text x="99.9473%" y="1487.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1461" width="0.0374%" height="15" fill="rgb(254,4,28)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1445" width="0.0374%" height="15" fill="rgb(222,185,44)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1429" width="0.0374%" height="15" fill="rgb(215,74,39)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1439.50"></text></g><g><title>std::panicking::try (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1413" width="0.0374%" height="15" fill="rgb(247,86,4)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1397" width="0.0374%" height="15" fill="rgb(231,105,32)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1381" width="0.0374%" height="15" fill="rgb(222,65,35)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1391.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1365" width="0.0374%" height="15" fill="rgb(218,145,35)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1349" width="0.0374%" height="15" fill="rgb(208,7,15)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1359.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1333" width="0.0374%" height="15" fill="rgb(209,83,13)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1343.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (2,097,960 samples, 0.04%)</title><rect x="99.9358%" y="1317" width="0.0374%" height="15" fill="rgb(218,3,10)" fg:x="5609302599" fg:w="2097960"/><text x="100.1858%" y="1327.50"></text></g><g><title>all (5,612,905,071 samples, 100%)</title><rect x="0.0000%" y="1605" width="100.0000%" height="15" fill="rgb(211,219,4)" fg:x="0" fg:w="5612905071"/><text x="0.2500%" y="1615.50"></text></g><g><title>tokio-runtime-w (17,292,338 samples, 0.31%)</title><rect x="99.6919%" y="1589" width="0.3081%" height="15" fill="rgb(228,194,12)" fg:x="5595612733" fg:w="17292338"/><text x="99.9419%" y="1599.50"></text></g></svg></svg>
</file>

<file path="src/library/loader.rs">
use std::{fs, path::PathBuf};

use super::project::{Project, ProjectMeta};

const WALLPAPER_ENGINE_ID: &str = "431960";
const WORKSHOP_PATHS: [&str; 4] = [
    "~/.steam/steam/steamapps/workshop",
    "~/.local/share/Steam/steamapps/workshop",
    "~/.var/app/com.valvesoftware.Steam/.local/share/Steam/steamapps/workshop",
    "~/snap/steam/common/.local/share/Steam/steamapps/workshop",
];

fn resolve_paths() -> Vec<PathBuf> {
    WORKSHOP_PATHS
        .iter()
        .map(|p| shellexpand::tilde(p).to_string())
        .map(PathBuf::from)
        .filter(|p| p.exists())
        .map(|p| p.join("content").join(WALLPAPER_ENGINE_ID))
        .filter(|p| p.exists())
        .collect()
}

pub struct Loader {
    project_paths: Vec<PathBuf>,
    current: usize,
}

impl Loader {
    pub fn new() -> Self {
        let mut paths = Vec::new();

        for base in resolve_paths() {
            if let Ok(entries) = fs::read_dir(base) {
                for entry in entries.flatten() {
                    let dir = entry.path();
                    if dir.is_dir() && dir.join("project.json").exists() {
                        paths.push(dir);
                    }
                }
            }
        }

        Loader {
            project_paths: paths,
            current: 0,
        }
    }

    pub fn next(&mut self) -> Option<Result<Project, String>> {
        if self.current >= self.project_paths.len() {
            None
        } else {
            let dir = self.project_paths[self.current].clone();
            self.current += 1;
            let path = dir.join("project.json");
            Some(parse(&path, &dir))
        }
    }
}

fn parse(path: &PathBuf, dir: &PathBuf) -> Result<Project, String> {
    let content = fs::read_to_string(path)
        .map_err(|e| format!("Failed to read {}: {}", path.display(), e))?;

    let meta: ProjectMeta = serde_json::from_str(&content)
        .map_err(|e| format!("JSON parse error in {}: {}", path.display(), e))?;

    Ok(Project {
        meta,
        path: dir.to_string_lossy().to_string(),
    })
}
</file>

<file path="src/ui/panel.rs">
use iced::{
    widget::{text, Button, Container, Row},
    Alignment, Element, Padding,
};

use crate::Message;

use super::state::Page;

pub fn build(_app: &crate::Papyrust) -> Element<Message> {
    let library = Button::new(text("Library"))
        .on_press(Message::SwitchPage(Page::Library))
        .padding(Padding::from([8, 16]));

    let discover = Button::new(text("Discover"))
        .on_press(Message::SwitchPage(Page::Discover))
        .padding(Padding::from([8, 16]));

    let content = Row::new()
        .push(library)
        .push(discover)
        .spacing(15)
        .align_y(Alignment::Center);

    Container::new(content)
        .padding(Padding::from([10, 20]))
        .into()
}
</file>

<file path=".gitignore">
/target
repomix-output.xml
flamegraph.svg
perf.data
perf.data.old
stacks.folded
</file>

<file path="src/ui/popup.rs">
use iced::{
    alignment::{Horizontal, Vertical},
    widget::{button, mouse_area, text, Button, Column, Container, Row, Space},
    Background, Border, Color, Element, Length, Padding, Shadow, Vector,
};
use iced_video_player::VideoPlayer;

use crate::{library::project::Project, Message, Papyrust};

pub fn build<'a>(app: &'a Papyrust, project: &'a Project) -> Element<'a, Message> {
    let title = project.meta.title.as_deref().unwrap_or("Untitled");

    let video_preview = create_preview(app, project);

    let close_button = Button::new(text("Close").size(16))
        .on_press(Message::ClosePopup)
        .padding(Padding::from([8, 12]))
        .style(|_theme, status| {
            let base = Color::from_rgba(0.2, 0.2, 0.2, 0.8);
            let hover = Color::from_rgba(0.3, 0.3, 0.3, 0.9);
            let border_color = Color::from_rgba(0.6, 0.6, 0.6, 0.5);

            button::Style {
                background: Some(Background::Color(
                    if matches!(status, iced::widget::button::Status::Hovered) {
                        hover
                    } else {
                        base
                    },
                )),
                border: Border {
                    radius: 8.0.into(),
                    width: 1.0,
                    color: border_color,
                },
                text_color: Color::WHITE,
                ..Default::default()
            }
        });

    let apply_button = Button::new(text("Apply").size(16))
        .padding(Padding::from([8, 12]))
        .style(|_theme, status| {
            let base = Color::from_rgba(0.2, 0.2, 0.2, 0.8);
            let hover = Color::from_rgba(0.3, 0.3, 0.3, 0.9);
            let border_color = Color::from_rgba(0.6, 0.6, 0.6, 0.5);

            button::Style {
                background: Some(Background::Color(
                    if matches!(status, iced::widget::button::Status::Hovered) {
                        hover
                    } else {
                        base
                    },
                )),
                border: Border {
                    radius: 8.0.into(),
                    width: 1.0,
                    color: border_color,
                },
                text_color: Color::WHITE,
                ..Default::default()
            }
        });

    let header = Row::new()
        .push(
            text(title)
                .size(24)
                .style(|_theme| iced::widget::text::Style {
                    color: Some(Color::WHITE),
                    ..Default::default()
                }),
        )
        .align_y(Vertical::Center);

    let footer_row = Row::new().spacing(10).push(close_button).push(apply_button);

    let footer = Container::new(footer_row)
        .align_x(Horizontal::Center)
        .width(Length::Fill);

    let popup_content = Column::new()
        .push(header)
        .push(video_preview)
        .push(Space::new(Length::Fill, Length::Fill))
        .push(footer)
        .spacing(20)
        .padding(20)
        .width(Length::Fill)
        .align_x(Horizontal::Center);

    let popup = Container::new(popup_content)
        .width(Length::Fixed(800.0))
        .height(Length::Fixed(600.0))
        .style(|_theme| iced::widget::container::Style {
            background: Some(Background::Color(Color::from_rgba(0.05, 0.05, 0.05, 0.98))),
            border: Border {
                radius: 16.0.into(),
                width: 2.0,
                color: Color::from_rgba(0.6, 0.6, 0.6, 0.4),
            },
            shadow: Shadow {
                color: Color::from_rgba(0.0, 0.0, 0.0, 0.5),
                offset: Vector::new(0.0, 8.0),
                blur_radius: 24.0,
            },
            ..Default::default()
        })
        .align_x(Horizontal::Center)
        .align_y(Vertical::Center);

    let protected = mouse_area(popup).on_press(Message::DoNothing);

    mouse_area(
        Container::new(protected)
            .width(Length::Fill)
            .height(Length::Fill)
            .style(|_theme| iced::widget::container::Style {
                background: Some(Background::Color(Color::from_rgba(0.0, 0.0, 0.0, 0.85))),
                ..Default::default()
            })
            .align_x(Horizontal::Center)
            .align_y(Vertical::Center),
    )
    .on_press(Message::ClosePopup)
    .into()
}

fn create_preview<'a>(app: &'a Papyrust, project: &'a Project) -> Element<'a, Message> {
    if let Some(file_name) = &project.meta.file {
        let video_path = format!("{}/{}", project.path, file_name);

        if let Some(video) = app.peek_video(&video_path) {
            let video_width = 720.0;
            let video_height = 405.0;

            Container::new(
                VideoPlayer::new(video)
                    .width(Length::Fixed(video_width))
                    .height(Length::Fixed(video_height)),
            )
            .width(Length::Fixed(video_width))
            .height(Length::Fixed(video_height))
            .style(|_theme| iced::widget::container::Style {
                background: Some(Background::Color(Color::from_rgba(0.0, 0.0, 0.0, 0.95))),
                border: Border {
                    radius: 12.0.into(),
                    width: 2.0,
                    color: Color::from_rgba(0.4, 0.4, 0.4, 0.5),
                },
                shadow: Shadow {
                    color: Color::from_rgba(0.0, 0.0, 0.0, 0.3),
                    offset: Vector::new(0.0, 4.0),
                    blur_radius: 12.0,
                },
                ..Default::default()
            })
            .align_x(Horizontal::Center)
            .align_y(Vertical::Center)
            .into()
        } else {
            let dots = match app.animation_state {
                0 => "Loading video.  ",
                1 => "Loading video.. ",
                2 => "Loading video...",
                _ => "Loading video   ",
            };

            let video_width = 720.0;
            let video_height = 405.0;

            Container::new(
                text(dots)
                    .size(18)
                    .style(|_theme| iced::widget::text::Style {
                        color: Some(Color::from_rgba(1.0, 1.0, 1.0, 0.8)),
                        ..Default::default()
                    }),
            )
            .width(Length::Fixed(video_width))
            .height(Length::Fixed(video_height))
            .style(|_theme| iced::widget::container::Style {
                background: Some(Background::Color(Color::from_rgba(0.15, 0.15, 0.15, 0.9))),
                border: Border {
                    radius: 12.0.into(),
                    width: 2.0,
                    color: Color::from_rgba(0.4, 0.4, 0.4, 0.5),
                },
                ..Default::default()
            })
            .align_x(Horizontal::Center)
            .align_y(Vertical::Center)
            .into()
        }
    } else {
        let video_width = 720.0;
        let video_height = 405.0;

        Container::new(text("No video available").size(18).style(|_theme| {
            iced::widget::text::Style {
                color: Some(Color::from_rgba(1.0, 1.0, 1.0, 0.8)),
                ..Default::default()
            }
        }))
        .width(Length::Fixed(video_width))
        .height(Length::Fixed(video_height))
        .style(|_theme| iced::widget::container::Style {
            background: Some(Background::Color(Color::from_rgba(0.15, 0.15, 0.15, 0.9))),
            border: Border {
                radius: 12.0.into(),
                width: 2.0,
                color: Color::from_rgba(0.4, 0.4, 0.4, 0.5),
            },
            ..Default::default()
        })
        .align_x(Horizontal::Center)
        .align_y(Vertical::Center)
        .into()
    }
}
</file>

<file path="src/ui/view.rs">
use iced::{
    alignment::{Horizontal, Vertical},
    widget::{image::Handle, Column, Container, Stack},
    Element, Length, Padding,
};
use iced_aw::Wrap;

use crate::{library::project::Project, Message, Papyrust};

use super::{discover, library, panel, popup, state};

pub fn build(app: &Papyrust) -> Element<Message> {
    let content = match app.current_page {
        state::Page::Discover => discover::build(app),
        state::Page::Library => library::build(app),
    };

    let main = Column::new()
        .push(content)
        .width(Length::Fill)
        .height(Length::Fill);

    let panel = Container::new(panel::build(app))
        .width(Length::Fill)
        .height(Length::Fill)
        .padding(Padding {
            top: 0.0,
            right: 20.0,
            bottom: 0.0,
            left: 0.0,
        })
        .align_x(Horizontal::Center)
        .align_y(Vertical::Bottom);

    let main_content = Column::new().push(main).push(
        Container::new(panel)
            .width(Length::Fill)
            .height(Length::Fixed(80.0)),
    );

    if let Some(ref project) = app.popup_state {
        Stack::new()
            .push(main_content)
            .push(popup::build(app, project))
            .into()
    } else {
        main_content.into()
    }
}

pub fn create_grid<'a>(
    app: &'a Papyrust,
    projects: &'a [Project],
    preview: &'a [Option<Handle>],
) -> Element<'a, Message> {
    let mut items = Vec::new();

    for (idx, project) in projects.iter().enumerate() {
        let handle = preview.get(idx).and_then(Clone::clone);
        items.push(library::render_item(app, project, handle));
    }

    Container::new(Wrap::with_elements(items).spacing(8.0).line_spacing(8.0))
        .width(Length::Fill)
        .padding(8)
        .into()
}
</file>

<file path="src/ui/state.rs">
use iced::{widget::image::Handle, Task};

use crate::{Message, Papyrust};

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Page {
    Discover,
    Library,
}

impl Default for Page {
    fn default() -> Self {
        Page::Library
    }
}

pub fn update(app: &mut Papyrust, message: Message) -> Task<Message> {
    match message {
        Message::SwitchPage(page) => {
            app.current_page = page;
            if page == Page::Library {
                return app.library.next().unwrap_or_else(Task::none);
            }
            Task::none()
        }
        Message::PreviewDecoded(idx, w, h, pixels) => {
            let handle = Handle::from_rgba(w, h, pixels);
            app.library.preview[idx] = Some(handle);
            app.library.next().unwrap_or_else(Task::none)
        }
        Message::PreviewError(_idx) => app.library.next().unwrap_or_else(Task::none),
        Message::Tick => {
            app.tick();
            Task::none()
        }
        Message::OpenPopup(project) => {
            app.popup_state = Some(project.clone());

            if let Some(file_name) = &project.meta.file {
                let video_path = format!("{}/{}", project.path, file_name);
                if app.should_load(&video_path) {
                    return Papyrust::load_video_async(video_path);
                }
            }
            Task::none()
        }
        Message::ClosePopup => {
            for video in app.videos.values_mut() {
                video.set_paused(true);
            }
            app.popup_state = None;
            Task::none()
        }
        Message::LoadVideo(path) => {
            app.load_video(&path);
            Task::none()
        }
        Message::VideoLoaded(path) => {
            app.load_video(&path);
            Task::none()
        }
        Message::VideoError(path, error) => {
            eprintln!("Failed to load video {}: {}", path, error);
            Task::none()
        }
        Message::DoNothing => Task::none(),
    }
}
</file>

<file path="Cargo.toml">
[package]
name = "papyrust"
version = "0.1.0"
edition = "2024"

[dependencies]
derive = "1.0.0"
fast_image_resize = { version = "5.1.4", features = ["image"] }
futures = "0.3.31"
iced = { version = "0.13.1", features = ["advanced", "image", "tokio"] }
iced_aw = { version = "0.12.2", features = ["wrap"] }
iced_video_player = { git = "https://github.com/jazzfool/iced_video_player" }
image = "0.25.6"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
shellexpand = "3.1.1"
tokio = { version = "1.45.1", features = ["fs"] }
url = "2.5.4"

clap = { version = "4.4", features = ["derive"] }
wayland-client = "0.31"
wayland-protocols = { version = "0.31", features = ["client", "unstable"] }
wayland-protocols-wlr = { version = "0.2", features = ["client"] }
wayland-egl = "0.32"
khronos-egl = { version = "6.0", features = ["static"] }
gl = "0.14"
libc = "0.2"
anyhow = "1.0"
thiserror = "1.0"
log = "0.4"
env_logger = "0.10"
ffmpeg-next = "7.1.0"

[build-dependencies]
gl_generator = "0.14"

[profile.release]
debug = true

[lints.rust]
unsafe_op_in_unsafe_fn = "allow"

[[bin]]
name = "papyrust-daemon"
path = "src/daemon/main.rs"

[[bin]]
name = "papyrust-cli"
path = "src/bin/cli.rs"

[[bin]]
name = "papyrust"
path = "src/main.rs"
</file>

<file path="src/ui/library.rs">
use iced::alignment::{Horizontal, Vertical};
use iced::widget::image::Handle;
use iced::widget::{Button, Column, Container};
use iced::{
    widget::{column, container, scrollable, text},
    Element, Length,
};
use iced::{Alignment, Padding, Task};
use image::{imageops, load_from_memory, RgbaImage};
use tokio::{fs, task};

use crate::library::{loader::Loader, project::Project};
use crate::{library, Message, Papyrust};

pub struct Library {
    pub projects: Vec<Project>,
    pub preview: Vec<Option<Handle>>,
}

const PREVIEW_WIDTH: f32 = 140.0;
const PREVIEW_HEIGHT: f32 = 140.0;

const ITEM_WIDTH: f32 = 160.0;
const ITEM_HEIGHT: f32 = 200.0;

impl Library {
    pub fn new() -> Self {
        let mut loader = Loader::new();
        let mut projects = Vec::new();
        let mut preview = Vec::new();

        while let Some(result) = loader.next() {
            match result {
                Ok(project) => {
                    // Skip for now all non-video projects
                    if project.meta.file_type != Some(library::project::ProjectType::Video) {
                        continue;
                    }
                    projects.push(project);
                    preview.push(None);
                }
                Err(e) => eprintln!("Project parse error: {}", e),
            }
        }

        Self { projects, preview }
    }

    pub fn next(&mut self) -> Option<Task<Message>> {
        self.projects
            .iter()
            .enumerate()
            .find(|(idx, proj)| self.preview[*idx].is_none() && proj.meta.preview.is_some())
            .map(|(idx, proj)| {
                let name = proj.meta.preview.as_ref().unwrap().clone();
                let path = format!("{}/{}", proj.path, name);
                Task::perform(
                    async move {
                        let buf = fs::read(&path).await.ok();
                        if let Some(bytes) = buf {
                            let decode = task::spawn_blocking(move || {
                                let img = load_from_memory(&bytes).ok()?;
                                let mut rgba = img.to_rgba8();

                                // Ik this is not the most efficient way to handle this, but iced forces me to do it this way
                                rgba = Self::resize_image(rgba, PREVIEW_WIDTH as u32);
                                rgba = Self::round_image(rgba, 4.0);
                                let (w, h) = rgba.dimensions();
                                Some((w, h, rgba.into_raw()))
                            })
                            .await
                            .ok()
                            .flatten();

                            if let Some((w, h, pixels)) = decode {
                                return (idx, Ok((w, h, pixels)));
                            }
                        }
                        (idx, Err(()))
                    },
                    |(i, result)| match result {
                        Ok((w, h, pixels)) => Message::PreviewDecoded(i, w, h, pixels),
                        Err(_) => Message::PreviewError(i),
                    },
                )
            })
    }

    fn round_image(img: RgbaImage, radius: f32) -> RgbaImage {
        let (width, height) = img.dimensions();
        let mut rounded = img.clone();

        let radius_u32 = radius as u32;
        let right_bound = width.saturating_sub(radius_u32);
        let bottom_bound = height.saturating_sub(radius_u32);
        let radius_sq = radius * radius;

        let corners = [
            (0..radius_u32, 0..radius_u32),
            (right_bound..width, 0..radius_u32),
            (0..radius_u32, bottom_bound..height),
            (right_bound..width, bottom_bound..height),
        ];

        for (x_range, y_range) in corners {
            for y in y_range {
                for x in x_range.clone() {
                    let (dx, dy) = match (x < radius_u32, y < radius_u32) {
                        (true, true) => (radius - x as f32, radius - y as f32),
                        (false, true) => {
                            (x as f32 - (width as f32 - radius - 1.0), radius - y as f32)
                        }
                        (true, false) => {
                            (radius - x as f32, y as f32 - (height as f32 - radius - 1.0))
                        }
                        (false, false) => (
                            x as f32 - (width as f32 - radius - 1.0),
                            y as f32 - (height as f32 - radius - 1.0),
                        ),
                    };

                    if dx * dx + dy * dy > radius_sq {
                        rounded.get_pixel_mut(x, y)[3] = 0;
                    }
                }
            }
        }

        rounded
    }
    fn resize_image(img: RgbaImage, target_size: u32) -> RgbaImage {
        let (width, height) = img.dimensions();

        let scale = target_size as f32 / width.max(height) as f32;
        let new_width = (width as f32 * scale) as u32;
        let new_height = (height as f32 * scale) as u32;

        let src_image = fast_image_resize::images::Image::from_vec_u8(
            width,
            height,
            img.into_raw(),
            fast_image_resize::PixelType::U8x4,
        )
        .unwrap();

        let mut dst_image = fast_image_resize::images::Image::new(
            new_width,
            new_height,
            fast_image_resize::PixelType::U8x4,
        );

        let mut resizer = fast_image_resize::Resizer::new();

        let resize_options = fast_image_resize::ResizeOptions::new().resize_alg(
            fast_image_resize::ResizeAlg::Convolution(fast_image_resize::FilterType::Lanczos3),
        );

        resizer
            .resize(&src_image, &mut dst_image, Some(&resize_options))
            .unwrap();

        let resized_rgba =
            RgbaImage::from_raw(new_width, new_height, dst_image.into_vec()).unwrap();

        let crop_x = (new_width.saturating_sub(target_size)) / 2;
        let crop_y = (new_height.saturating_sub(target_size)) / 2;

        imageops::crop_imm(&resized_rgba, crop_x, crop_y, target_size, target_size).to_image()
    }
}

pub fn build(app: &Papyrust) -> Element<Message> {
    let lib = &app.library;
    let grid = super::view::create_grid(&app, &lib.projects, &lib.preview);

    container(scrollable(column![text("Library").size(30), grid]))
        .padding(20)
        .width(Length::Fill)
        .height(Length::Fill)
        .into()
}

pub fn render_item<'a>(
    app: &Papyrust,
    project: &'a Project,
    preview: Option<Handle>,
) -> Element<'a, Message> {
    let title = project.meta.title.as_deref().unwrap_or("Untitled");
    let preview = create_preview(app, preview, project);

    Button::new(
        Container::new(
            Column::new()
                .align_x(Alignment::Center)
                .padding(Padding::new(0.0).top(4.0))
                .push(preview)
                .push(
                    text(title)
                        .size(14)
                        .style(|_theme: &_| iced::widget::text::Style {
                            color: Some(iced::Color::WHITE),
                            ..Default::default()
                        })
                        .width(Length::Fixed(ITEM_WIDTH - 20.0))
                        .align_x(Alignment::Center),
                )
                .spacing(8),
        )
        .width(Length::Fixed(ITEM_WIDTH))
        .height(Length::Fixed(ITEM_HEIGHT)),
    )
    .width(Length::Fixed(ITEM_WIDTH))
    .height(Length::Fixed(ITEM_HEIGHT))
    .style(|_theme, status| {
        let base_color = iced::Color::from_rgba(0.0, 0.0, 0.0, 0.15);
        let hover_color = iced::Color::from_rgba(0.5, 0.5, 0.5, 0.3);
        let border_color = iced::Color::from_rgba(0.0, 0.0, 0.0, 0.2);

        match status {
            iced::widget::button::Status::Hovered => iced::widget::button::Style {
                background: Some(iced::Background::Color(hover_color)),
                border: iced::Border {
                    radius: 8.0.into(),
                    width: 1.0,
                    color: border_color,
                },
                shadow: iced::Shadow {
                    color: iced::Color::from_rgba(0.0, 0.0, 0.0, 0.1),
                    offset: iced::Vector::new(0.0, 2.0),
                    blur_radius: 4.0,
                },
                ..Default::default()
            },
            _ => iced::widget::button::Style {
                background: Some(iced::Background::Color(base_color)),
                border: iced::Border {
                    radius: 8.0.into(),
                    ..Default::default()
                },
                ..Default::default()
            },
        }
    })
    .on_press(Message::OpenPopup(project.clone()))
    .into()
}

fn create_preview<'a>(
    app: &Papyrust,
    preview: Option<Handle>,
    project: &'a Project,
) -> Element<'a, Message> {
    if let Some(handle) = preview {
        Container::new(
            iced::widget::image(handle)
                .width(Length::Fixed(PREVIEW_WIDTH))
                .height(Length::Fixed(PREVIEW_HEIGHT)),
        )
        .width(Length::Fixed(PREVIEW_WIDTH))
        .height(Length::Fixed(PREVIEW_HEIGHT))
        .clip(true)
        .into()
    } else if project.meta.preview.is_some() {
        let dots = match app.animation_state {
            0 => "Loading.  ",
            1 => "Loading.. ",
            2 => "Loading...",
            _ => "Loading   ",
        };

        Container::new(text(dots).style(|_theme: &_| iced::widget::text::Style {
            color: Some(iced::Color::from_rgba(1.0, 1.0, 1.0, 0.6)),
            ..Default::default()
        }))
        .width(Length::Fixed(PREVIEW_WIDTH))
        .height(Length::Fixed(PREVIEW_HEIGHT))
        .align_x(Horizontal::Center)
        .align_y(Vertical::Center)
        .style(|_theme| iced::widget::container::Style {
            background: Some(iced::Background::Color(iced::Color::from_rgba(
                0.5, 0.5, 0.5, 0.1,
            ))),
            border: iced::Border {
                radius: 4.0.into(),
                ..Default::default()
            },
            ..Default::default()
        })
        .into()
    } else {
        Container::new(
            text("No preview").style(|_theme: &_| iced::widget::text::Style {
                color: Some(iced::Color::from_rgba(1.0, 1.0, 1.0, 0.6)),
                ..Default::default()
            }),
        )
        .width(Length::Fixed(PREVIEW_WIDTH))
        .height(Length::Fixed(PREVIEW_HEIGHT))
        .align_x(Horizontal::Center)
        .align_y(Vertical::Center)
        .style(|_theme| iced::widget::container::Style {
            background: Some(iced::Background::Color(iced::Color::from_rgba(
                0.5, 0.5, 0.5, 0.1,
            ))),
            border: iced::Border {
                radius: 4.0.into(),
                ..Default::default()
            },
            ..Default::default()
        })
        .into()
    }
}
</file>

<file path="src/main.rs">
use std::collections::HashMap;

use iced::{Element, Font, Settings, Subscription, Task};
use iced_video_player::Video;
use library::project::Project;
use ui::state;

mod library;
mod ui;

use ui::library::Library;
use ui::{state::Page, view};

pub struct Papyrust {
    pub current_page: Page,
    pub library: Library,
    pub animation_state: usize,
    pub popup_state: Option<Project>,
    pub videos: HashMap<String, Video>,
}

#[derive(Debug, Clone)]
pub enum Message {
    SwitchPage(Page),
    PreviewDecoded(usize, u32, u32, Vec<u8>),
    PreviewError(usize),
    OpenPopup(Project),
    ClosePopup,
    Tick,
    LoadVideo(String),
    VideoLoaded(String),
    VideoError(String, String),
    DoNothing,
}

const _FIRA_BYTES: &[u8] = include_bytes!("../fonts/FiraCodeNerdFontMono-Regular.ttf");
const _UNIFONT_BYTES: &[u8] = include_bytes!("../fonts/unifont.ttf");

const _FIRA: Font = Font::with_name("FiraCode Nerd Font Mono Reg");
const _UNIFONT: Font = Font::with_name("Unifont");

impl Papyrust {
    fn new() -> (Self, Task<Message>) {
        let mut library = Library::new();
        let first = library.next().unwrap_or_else(Task::none);
        (
            Papyrust {
                current_page: Page::default(),
                library,
                animation_state: 0,
                popup_state: None,
                videos: HashMap::new(),
            },
            first,
        )
    }

    pub fn load_video(&mut self, path: &str) -> Option<&Video> {
        if !self.videos.contains_key(path) {
            if let Ok(url) = url::Url::parse(&format!("file://{}", path)) {
                if let Ok(video) = Video::new(&url) {
                    self.videos.insert(path.to_string(), video);
                }
            }
        }
        self.videos.get(path)
    }

    pub fn load_video_async(path: String) -> Task<Message> {
        Task::perform(
            async move {
                match url::Url::parse(&format!("file://{}", path)) {
                    Ok(url) => match tokio::task::spawn_blocking(move || Video::new(&url)).await {
                        Ok(Ok(_)) => Message::VideoLoaded(path),
                        Ok(Err(e)) => Message::VideoError(path, e.to_string()),
                        Err(e) => Message::VideoError(path, format!("Task error: {}", e)),
                    },
                    Err(e) => Message::VideoError(path, format!("Invalid URL: {}", e)),
                }
            },
            |msg| msg,
        )
    }

    pub fn peek_video(&self, path: &str) -> Option<&Video> {
        self.videos.get(path)
    }

    pub fn should_load(&self, path: &str) -> bool {
        !self.videos.contains_key(path)
    }

    pub fn tick(&mut self) {
        self.animation_state = (self.animation_state + 1) % 4;
    }

    fn update(&mut self, message: Message) -> Task<Message> {
        state::update(self, message)
    }

    fn view(&self) -> Element<Message> {
        view::build(self)
    }

    fn subscription(&self) -> Subscription<Message> {
        iced::time::every(std::time::Duration::from_millis(300)).map(|_| Message::Tick)
    }
}

fn main() -> iced::Result {
    iced::application("Papyrust", Papyrust::update, Papyrust::view)
        // .font(FIRA_BYTES)
        // .font(UNIFONT_BYTES)
        // .default_font(FIRA)
        .settings(Settings {
            default_font: Font::MONOSPACE,
            ..Default::default()
        })
        .subscription(Papyrust::subscription)
        .theme(|_| iced::theme::Theme::GruvboxDark)
        .run_with(Papyrust::new)
}
</file>

</files>
